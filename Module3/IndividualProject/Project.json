{
	"info": {
		"_postman_id": "c432a5c9-86c9-4812-b55e-6e55a25a70ea",
		"name": "Brevo",
		"description": "# Welcome ðŸ‘‹\n\nUsing the REST API allows you to programmatically execute a wide range of code operations which are also available through the user interface. In this guide you will find a quick start section with the most important concepts about the API, instructions to authenticate and some short code examples.\n\n## **Quick start**\n\nThere are a few [key concepts](https://developers.sendinblue.com/docs/how-it-works) to keep in mind while using our API:\n\n- [**Rate limits**](https://developers.sendinblue.com/docs/api-limits) **and** [**platform quotas**](https://developers.sendinblue.com/docs/platform-quotas)\n- How to call the [**endpoints**](https://developers.sendinblue.com/docs/how-it-works#endpoints)\n- What is the [**response structure**](https://developers.sendinblue.com/docs/how-it-works#responses)\n- What [**API SDKs**](https://developers.sendinblue.com/docs/api-clients) you can use depending on your stack\n- What [**IP addresses**](https://developers.sendinblue.com/docs/how-it-works#sendinblue-ip-addresses) we use\n    \n\n[**Read more about how the API works**](https://developers.sendinblue.com/docs/how-it-works) **ðŸ“–**",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Transactional",
			"item": [
				{
					"name": "Email API",
					"item": [
						{
							"name": "Send a transactional email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "29cc747d-42fe-4053-9bd7-dd5bce4fa9ab",
										"exec": [
											"pm.test(\"Verify status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"  const responseData = pm.response.json()\r",
											"\r",
											"if (pm.response.code == 201){\r",
											"  \r",
											"    pm.environment.set(\"m_id\",responseData.messageId) \r",
											"\r",
											"    pm.test(\"Verify the messageId is not empty\", function(){\r",
											"pm.expect(responseData.messageId).not.null\r",
											"    }\r",
											"    )\r",
											"};\r",
											"\r",
											" pm.test(\"Verify the messageId is a string\", function(){\r",
											"pm.expect(responseData.messageId).to.be.a('string')\r",
											"    }) ;\r",
											"\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "86561479-201c-4e0e-ab03-158614d84c97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sender\": {\n        \"name\": \"DVPOS POS service\",\n        \"email\": \"no-reply@myshop.com\"\n    },\n    \"to\": [\n        {\n            \"email\": \"olamide.oluwole0908@gmail.com\",\n            \"name\": \"Olamide\"\n        }\n    ],\n    \"bcc\": [\n        {\n            \"email\": \"howard_weng@datavan.com.tw\",\n            \"name\": \"Howard BCC\"\n        }\n    ],\n    \"cc\": [\n        {\n            \"email\": \"howard_weng@datavan.com.tw\",\n            \"name\": \"Howard CC\"\n        }\n    ],\n    \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>This is sample HTML</h1> </html>\",\n    \"subject\": \"Login Email confirmation\",\n    \"replyTo\": {\n        \"email\": \"olamide.oluwole0908@gmail.com\",\n        \"name\": \"Ann\"\n    },\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ]\n    \n    \n}"
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"email"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "a558adde-10e5-40ef-a8be-f22819472134",
									"name": "Batch send transactional emails",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sender\": {\n        \"name\": \"Mary from MyShop\",\n        \"email\": \"no-reply@myshop.com\"\n    },\n    \"to\": [\n        {\n            \"email\": \"jimmy98@example.com\",\n            \"name\": \"Jimmy\"\n        }\n    ],\n    \"bcc\": [\n        {\n            \"email\": \"helen9766@example.com\",\n            \"name\": \"Helen\"\n        },\n        {\n            \"email\": \"helen9766@example.com\",\n            \"name\": \"Helen\"\n        }\n    ],\n    \"cc\": [\n        {\n            \"email\": \"ann6533@example.com\",\n            \"name\": \"Ann\"\n        }\n    ],\n    \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>This is sample HTML</h1> </html>\",\n    \"subject\": \"Login Email confirmation\",\n    \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n    },\n    \"attachment\": [\n        {\n            \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.png\",\n            \"name\": \"myAttachment.png\"\n        }\n    ],\n    \"params\": {\n        \"name\": \"Ann\",\n        \"greeting\": \"Hello fellow customer!\"\n    },\n    \"messageVersions\": [\n        {\n            \"to\": [\n                {\n                    \"email\": \"jimmy98@example.com\",\n                    \"name\": \"Jimmy\"\n                }\n            ],\n            \"params\": {\n                \"name\": \"Jimmy\",\n                \"greeting\": \"This is a custom greeting for Jimmy\"\n            },\n            \"replyTo\": {\n                \"email\": \"ann6533@example.com\",\n                \"name\": \"Ann\"\n            },\n            \"subject\": \"Login Email confirmation\"\n        },\n        {\n            \"to\": [\n                {\n                    \"email\": \"mark@example.com\",\n                    \"name\": \"Mark\"\n                }\n            ],\n            \"params\": {\n                \"name\": \"Mark\",\n                \"greeting\": \"This is a custom greeting for Mark\"\n            },\n            \"bcc\": [\n                {\n                    \"email\": \"helen9766@example.com\",\n                    \"name\": \"Helen\"\n                },\n                {\n                    \"email\": \"helen9766@example.com\",\n                    \"name\": \"Helen\"\n                }\n            ],\n            \"cc\": [\n                {\n                    \"email\": \"ann6533@example.com\",\n                    \"name\": \"Ann\"\n                },\n                {\n                    \"email\": \"ann6533@example.com\",\n                    \"name\": \"Ann\"\n                }\n            ],\n            \"subject\": \"Login Email confirmation\"\n        }\n    ],\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"type": "text",
													"disabled": true
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "01d69934-7b87-49f5-825a-f30977ac566e",
									"name": "transactional email sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/email"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"id": "b6e8741c-d749-47e7-b46d-f575072619a0",
									"name": "transactional email scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/email"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"id": "9541ee7a-5ec8-48f5-9696-f1cfd6d2b519",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/email"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the list of transactional emails on the basis of allowed filters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be342871-67bc-4059-bbf3-8e1519b191d0",
										"exec": [
											"pm.test(\"Verify status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json()\r",
											"\r",
											"  if (pm.response.code == 200){\r",
											"      console.log(responseData.transactionalEmails[0].uuid)\r",
											"   pm.environment.set(\"uuid\",responseData.transactionalEmails[0].uuid) \r",
											"\r",
											"    pm.test(\"Verify the messageId is not empty\", function(){\r",
											"pm.expect(responseData.transactionalEmails.messageId).not.null\r",
											"    }\r",
											"    )\r",
											"};\r",
											"\r",
											"\r",
											" pm.test(\"Verify the uuid is not empty\", function(){\r",
											"pm.expect(responseData.transactionalEmails.uuid).not.null\r",
											"    }\r",
											"    );\r",
											"\r",
											"\r",
											"const expectedSchema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"count\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"transactionalEmails\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"email\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"subject\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"messageId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"uuid\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"date\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"from\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"tags\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": [\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"email\",\r",
											"            \"subject\",\r",
											"            \"messageId\",\r",
											"            \"uuid\",\r",
											"            \"date\",\r",
											"            \"from\",\r",
											"            \"tags\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"count\",\r",
											"    \"transactionalEmails\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Verify the response schema\", function(){\r",
											"    pm.response.to.have.jsonSchema(expectedSchema)\r",
											"})\r",
											"\r",
											"pm.test(\"Verify that the count value is a number\", function () {\r",
											"     pm.expect(pm.response.json().count).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that the transactionalEmails value is an array\", function(){\r",
											"pm.expect(responseData.transactionalEmails).to.be.a('array')\r",
											"})\r",
											"\r",
											"pm.test(\"Verify the Content Type\", function () {\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
											"});\r",
											"\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4851a9a2-9c23-46bc-9d64-aabc5f5ae102",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/emails?email=olamide.oluwole0908@gmail.com&sort=desc&limit=500&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"emails"
									],
									"query": [
										{
											"key": "email",
											"value": "olamide.oluwole0908@gmail.com",
											"description": "**Mandatory if templateId and messageId are not passed in query filters.** Email address to which transactional email has been sent.\n"
										},
										{
											"key": "templateId",
											"value": "",
											"description": "**Mandatory if email and messageId are not passed in query filters.** Id of the template that was used to compose transactional email.\n",
											"disabled": true
										},
										{
											"key": "messageId",
											"value": "<202311220030.26842275395@smtp-relay.mailin.fr>=",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) from which you want to fetch the list. **Maximum time period that can be selected is one month**.\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) till which you want to fetch the list. **Maximum time period that can be selected is one month.**\n",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page"
										}
									]
								},
								"description": "This endpoint will show the list of emails for past 30 days by default. To retrieve emails before that time, please pass startDate and endDate in query filters."
							},
							"response": [
								{
									"id": "6c327f30-d977-4902-a6ee-6168883a5e5a",
									"name": "List of transactional emails",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails?email=&templateId=13396752&messageId=&startDate=&endDate=&sort=desc&limit=500&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails"
											],
											"query": [
												{
													"key": "email",
													"value": ""
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "messageId",
													"value": ""
												},
												{
													"key": "startDate",
													"value": ""
												},
												{
													"key": "endDate",
													"value": ""
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"count\": 120,\n  \"transactionalEmails\": [\n    {\n      \"email\": \"abc@xyz.com\",\n      \"subject\": \"summer camp\",\n      \"templateId\": 15,\n      \"messageId\": \"<201798300811.5787683@relay.domain.com>\",\n      \"uuid\": \"5a78c-209ok98262910-std2341\",\n      \"date\": \"2019-05-25T11:53:26.000Z\"\n    },\n    {\n      \"email\": \"test@test.com\",\n      \"subject\": \"details verification\",\n      \"templateId\": 15,\n      \"messageId\": \"<201798300811.5700093@relay.domain.com>\",\n      \"uuid\": \"5a78c-209ok98262910-s99a341\",\n      \"date\": \"2019-05-25T07:28:11.000Z\"\n    }\n  ]\n}"
								},
								{
									"id": "6687a235-8307-4222-adf9-9f4991bb2b5a",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails?email=&templateId=13396752&endDate=&sort=desc&limit=500&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails"
											],
											"query": [
												{
													"key": "email",
													"value": ""
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "endDate",
													"value": ""
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the personalized content of a sent transactional email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6f86a2ca-829a-49dc-acf4-e90483266566",
										"exec": [
											"pm.test('Verify status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"//Save the entire response body in an object\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"//Verify the sender's email is the same as the email returned\r",
											"pm.test(\"Verify the sender's email is the same as the email returned\", function () {\r",
											"    const senderemail = pm.collectionVariables.get('sender_email')\r",
											"     pm.expect(responseData.email).to.eql(senderemail)\r",
											"});\r",
											"\r",
											"// Verify response should have at least one event in the events array\r",
											"pm.test('Verify response should have at least one event in the events array', function () {\r",
											"\r",
											"pm.expect(responseData.events).to.be.an('array').and.to.have.lengthOf.at.least(1, \"There should be at least one event in the events array\");\r",
											"});\r",
											"\r",
											" \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c2ca9b8e-e418-4a17-ad85-1b7e1977e4ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/emails/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"emails",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "{{uuid}}",
											"description": "(Required) Unique id of the transactional email that has been sent to a particular contact"
										}
									]
								}
							},
							"response": [
								{
									"id": "413fa7c5-4cc2-418a-88d3-3f20eced4b3c",
									"name": "Transactional email content",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) Unique id of the transactional email that has been sent to a particular contact"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"email\": \"abc@example.com\",\n  \"subject\": \"Summer Camps\",\n  \"templateId\": 12,\n  \"date\": \"2016-02-25T11:53:26.000Z\",\n  \"events\": [\n    {\n      \"name\": \"sent\",\n      \"time\": \"2016-02-25T11:53:26.000Z\"\n    },\n    {\n      \"name\": \"delivered\",\n      \"time\": \"2016-02-25T11:55:26.000Z\"\n    },\n    {\n      \"name\": \"opened\",\n      \"time\": \"2016-02-26T09:53:26.000Z\"\n    }\n  ],\n  \"body\": \"<!DOCTYPE html> <html> <body> <h1>Greetings from the team</h1> <p>This is the actual html content sent</p> </body> </html>\"\n}"
								}
							]
						},
						{
							"name": "Send a scheduled transactional email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8ff49cc4-e979-41d3-aa18-a4d11513fd1a",
										"exec": [
											"pm.test(\"Verify status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"  const responseData = pm.response.json()\r",
											"\r",
											"if (pm.response.code == 202){\r",
											"  \r",
											"    pm.environment.set(\"sm_id\",responseData.messageId) \r",
											"\r",
											"    pm.test(\"Verify the messageId for a scheduled message is not empty\", function(){\r",
											"pm.expect(responseData.messageId).not.null\r",
											"    }\r",
											"    )\r",
											"};\r",
											"\r",
											" pm.test(\"Verify the messageId is a string\", function(){\r",
											"pm.expect(responseData.messageId).to.be.a('string')\r",
											"    }) ;\r",
											"    "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2f2834db-5b86-4376-86f4-52dff6e91d36",
										"exec": [
											"//Dynamically get the current date and time using postman's inbuilt moment feature and then add 1 day to the returned value. This value will be used everytime we need to schedule transactional emails.\r",
											"const moment = require('moment');\r",
											"pm.globals.set(\"today\", moment().add(1, \"days\").format(\"YYYY-MM-DDTHH:mm:ss.SSSZ\"));\r",
											"console.log(pm.globals.get('today'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3248e68c-2e2f-49a9-a6e9-1678b4dc0e35",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sender\": {\n        \"name\": \"DVPOS POS service\",\n        \"email\": \"no-reply@myshop.com\"\n    },\n    \"to\": [\n        {\n            \"email\": \"olamide.oluwole0908@gmail.com\",\n            \"name\": \"Olamide\"\n        }\n    ],\n    \"bcc\": [\n        {\n            \"email\": \"howard_weng@datavan.com.tw\",\n            \"name\": \"Howard BCC\"\n        }\n    ],\n    \"cc\": [\n        {\n            \"email\": \"howard_weng@datavan.com.tw\",\n            \"name\": \"Howard CC\"\n        }\n    ],\n    \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>This is sample HTML</h1> </html>\",\n    \"subject\": \"Login Email confirmation\",\n    \"replyTo\": {\n        \"email\": \"olamide.oluwole0908@gmail.com\",\n        \"name\": \"Ann\"\n    },\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n   // \"scheduledAt\": \"2023-11-22T01:45:00+02:00\"\n    \"scheduledAt\": \"{{today}}\"\n    \n}"
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"email"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "f2a8e892-a6f5-4206-9745-725a2a17fda7",
									"name": "Batch send transactional emails",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sender\": {\n        \"name\": \"Mary from MyShop\",\n        \"email\": \"no-reply@myshop.com\"\n    },\n    \"to\": [\n        {\n            \"email\": \"jimmy98@example.com\",\n            \"name\": \"Jimmy\"\n        }\n    ],\n    \"bcc\": [\n        {\n            \"email\": \"helen9766@example.com\",\n            \"name\": \"Helen\"\n        },\n        {\n            \"email\": \"helen9766@example.com\",\n            \"name\": \"Helen\"\n        }\n    ],\n    \"cc\": [\n        {\n            \"email\": \"ann6533@example.com\",\n            \"name\": \"Ann\"\n        }\n    ],\n    \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>This is sample HTML</h1> </html>\",\n    \"subject\": \"Login Email confirmation\",\n    \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n    },\n    \"attachment\": [\n        {\n            \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.png\",\n            \"name\": \"myAttachment.png\"\n        }\n    ],\n    \"params\": {\n        \"name\": \"Ann\",\n        \"greeting\": \"Hello fellow customer!\"\n    },\n    \"messageVersions\": [\n        {\n            \"to\": [\n                {\n                    \"email\": \"jimmy98@example.com\",\n                    \"name\": \"Jimmy\"\n                }\n            ],\n            \"params\": {\n                \"name\": \"Jimmy\",\n                \"greeting\": \"This is a custom greeting for Jimmy\"\n            },\n            \"replyTo\": {\n                \"email\": \"ann6533@example.com\",\n                \"name\": \"Ann\"\n            },\n            \"subject\": \"Login Email confirmation\"\n        },\n        {\n            \"to\": [\n                {\n                    \"email\": \"mark@example.com\",\n                    \"name\": \"Mark\"\n                }\n            ],\n            \"params\": {\n                \"name\": \"Mark\",\n                \"greeting\": \"This is a custom greeting for Mark\"\n            },\n            \"bcc\": [\n                {\n                    \"email\": \"helen9766@example.com\",\n                    \"name\": \"Helen\"\n                },\n                {\n                    \"email\": \"helen9766@example.com\",\n                    \"name\": \"Helen\"\n                }\n            ],\n            \"cc\": [\n                {\n                    \"email\": \"ann6533@example.com\",\n                    \"name\": \"Ann\"\n                },\n                {\n                    \"email\": \"ann6533@example.com\",\n                    \"name\": \"Ann\"\n                }\n            ],\n            \"subject\": \"Login Email confirmation\"\n        }\n    ],\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"type": "text",
													"disabled": true
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "8c44e958-69f0-4276-bbbc-b3a295bf7f91",
									"name": "transactional email sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/email"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"id": "5f973a2f-d7a9-42ed-82ff-1568a00f6829",
									"name": "transactional email scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/email"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"id": "c1eac882-df5b-4719-b75b-e4e1cd8e70ff",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/email"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Fetch scheduled emails by batchId or messageId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4414e53-cf07-40fa-a2e4-521352d8496d",
										"exec": [
											"pm.test('Verify status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"if (pm.response.code==200){\r",
											"    const responseData = pm.response.json()\r",
											"    pm.test(\"Verify response JSON keys includes scheduledAt, createdAt, and status\", function () {\r",
											"    pm.expect(responseData).to.include.keys('scheduledAt', 'createdAt', 'status');\r",
											"});\r",
											"pm.test('Response JSON values for scheduledAt, createdAt, and status should not be null or empty',function(){\r",
											"pm.expect(responseData.scheduledAt).to.not.be.empty.and.not.null\r",
											"pm.expect(responseData.createdAt).to.not.be.empty.and.not.null\r",
											"pm.expect(responseData.status).to.not.be.empty.and.not.null\r",
											"}\r",
											");\r",
											"\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "eae1eb06-2d3f-452d-99b1-9f91b4c74beb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/emailStatus/{{sm_id}}?sort=desc&limit=500&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"emailStatus",
										"{{sm_id}}"
									],
									"query": [
										{
											"key": "startDate",
											"value": "2023-11-22",
											"description": "Mandatory if `endDate` is used. Starting date (YYYY-MM-DD) from which you want to fetch the list. Can be maximum 30 days older tha current date.",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "2023-11-23",
											"description": "Mandatory if `startDate` is used. Ending date (YYYY-MM-DD) till which you want to fetch the list. Maximum time period that can be selected is one month.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed. Not valid when identifier is `messageId`."
										},
										{
											"key": "status",
											"value": "queued",
											"description": "Filter the records by `status` of the scheduled email batch or message. Not valid when identifier is `messageId`.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Number of documents returned per page. Not valid when identifier is `messageId`."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page.  Not valid when identifier is `messageId`."
										}
									]
								},
								"description": "Fetch scheduled batch of emails by batchId or single scheduled email by messageId (Can retrieve data upto 30 days old)"
							},
							"response": [
								{
									"id": "1166c663-e95d-4e23-87e4-14005a85fad7",
									"name": "Scheduled email batches",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"count\": 3,\n  \"batches\": [\n    {\n      \"scheduledAt\": \"2022-02-28T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-26T11:36:43.576000000Z\",\n      \"status\": \"queued\"\n    },\n    {\n      \"scheduledAt\": \"2022-02-25T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-24T11:36:43.576000000Z\",\n      \"status\": \"processed\"\n    },\n    {\n      \"scheduledAt\": \"2022-02-26T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-25T11:36:43.576000000Z\",\n      \"status\": \"inProgress\"\n    }\n  ]\n}"
								},
								{
									"id": "0d036261-2112-41ed-806b-557cbdfc38a3",
									"name": "Invalid parameters passed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "9cd4c800-bc97-47d4-9410-3dc4c1484817",
									"name": "Record(s) for identifier not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete scheduled emails by batchId or messageId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e82cd76-c445-43a9-8973-914284ddbaba",
										"exec": [
											"\r",
											"\r",
											"if(pm.response.code == 204){\r",
											"    \r",
											" pm.test(\"Verify date is present\", function () {\r",
											"                pm.response.to.have.header(\"Date\");\r",
											"            });    \r",
											"}\r",
											"\r",
											"else if(pm.response.code == 404){\r",
											"const responseData = pm.response.json()\r",
											" pm.test(\"Verify the appropriate response is returned if document is not found\", function () {\r",
											"               pm.expect(responseData.code).to.eql('document_not_found')\r",
											"                 pm.expect(responseData.message).to.include('Record not found for batchId/messageId')\r",
											"            });   \r",
											"\r",
											"\r",
											"             pm.test(\"Verify date is present\", function () {\r",
											"                pm.response.to.have.header(\"Date\");\r",
											"            });   \r",
											"\r",
											"            pm.test(\"Verify the Content Type\", function () {\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');  \r",
											"} );\r",
											"\r",
											"\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b636affe-34c6-4f20-bd78-781cd76e0b1d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/email/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"email",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "{{sm_id}}",
											"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
										}
									]
								},
								"description": "Delete scheduled batch of emails by batchId or single scheduled email by messageId"
							},
							"response": [
								{
									"id": "026a1553-2265-4483-ad69-2806d8e6f601",
									"name": "Scheduled email(s) deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "b1a3adf2-dbd8-4929-b076-2b0b224abce3",
									"name": "Invalid parameters passed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "d876cab0-21ef-4cb1-a08e-113ec31be80e",
									"name": "Record(s) for identifier not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "d4fe58ca-e981-4ec0-a387-62a6ec7ab189"
				},
				{
					"name": "Templates",
					"item": [
						{
							"name": "Create an email template",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cca0caf8-1377-421c-aed5-7f87c8df3cc3",
										"exec": [
											"pm.test(\"Verify status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"if (pm.response.code == 201){\r",
											"    const responseData = pm.response.json()\r",
											"    pm.test('Verify response JSON \\\"id\\\" value should be a number', function () {\r",
											"     pm.expect(responseData.id).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response JSON should include an \\\"id\\\" field\", function(){\r",
											"    pm.expect(responseData).to.haveOwnProperty('id');\r",
											"});\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "946c7434-b82c-4cbd-9cfa-5772a69d0da1",
										"exec": [
											"const emailprefix = \"olamide.oluwole0908+\"\r",
											"pm.collectionVariables.set(\"emailprefix\", emailprefix)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f0f75309-9fc6-4d40-8963-e79ec1be9964",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Olamide Oluwole\",\n    \"email\": \"{{sender_email}}\"\n    //\"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - FALSE\",\n  \"htmlContent\": \"The order from Chopstix has been confirmed. Thanks for your purchase\",\n  //\"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{{emailprefix}}{{$randomInt}}@gmail.com\",\n  //\"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/smtp/templates"
							},
							"response": [
								{
									"id": "c5b7a7ec-9f16-4aa4-b0fb-4861978e097e",
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"subject\": \"Thanks for your purchase !\",\n  \"templateName\": \"Order Confirmation - EN\",\n  \"tag\": \"OrderConfirmation\",\n  \"htmlContent\": \"The order nÂ°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/templates"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"id": "0f61ee48-7a6d-48a0-aff1-2c885eb17d22",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"subject\": \"Thanks for your purchase !\",\n  \"templateName\": \"Order Confirmation - EN\",\n  \"tag\": \"OrderConfirmation\",\n  \"htmlContent\": \"The order nÂ°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/templates"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the list of email templates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e759689-868d-483c-9ac7-b1b09b04b796",
										"exec": [
											"pm.test(\"Verify the response code is 200\", function(){\r",
											"    pm.expect(pm.response.code).to.eql(200)\r",
											"})\r",
											"\r",
											" const responseData = pm.response.json()\r",
											"if(pm.response.code == 200){\r",
											"   \r",
											"    pm.test(\"Response JSON values for count should be a number\", function () {\r",
											"    pm.expect(responseData.count).to.be.a('number');\r",
											"});\r",
											"   pm.test('Response JSON values for templates should be an array', function () {\r",
											"    pm.expect(pm.response.json().templates).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the count is valid\", function(){\r",
											"pm.expect(responseData.count).to.eql(responseData.templates.length)\r",
											"});\r",
											"\r",
											"}\r",
											"\r",
											"for(i=0; i<responseData.templates.length; i++){\r",
											"    if(responseData.templates[i].isActive !== true){\r",
											"      pm.environment.set(\"template_id\",responseData.templates[i].id)\r",
											"    }\r",
											"};"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f7c977d0-59b7-4cc9-87e1-47451a83c24c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates?limit=50&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates"
									],
									"query": [
										{
											"key": "templateStatus",
											"value": "false",
											"description": "Filter on the status of the template. Active = true, inactive = false",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "2118cb69-dc8f-4c5a-9028-8514a10403b1",
									"name": "transactional email templates informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates?templateStatus=false&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											],
											"query": [
												{
													"key": "templateStatus",
													"value": "false"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"count\": 2,\n  \"templates\": [\n    {\n      \"id\": 5,\n      \"name\": \"ChristomasTimeTemplate\",\n      \"subject\": \"Merry Christmas\",\n      \"isActive\": false,\n      \"testSent\": false,\n      \"sender\": {\n        \"name\": \"John\",\n        \"email\": \"john.smith@example.com\",\n        \"id\": 23\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"\",\n      \"tag\": \"Festival\",\n      \"htmlContent\": \"HTML CONTENT 1\",\n      \"createdAt\": \"2016-02-24T14:44:24.000Z\",\n      \"modifiedAt\": \"2016-02-24T15:37:11.000Z\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"SummerSales2017Template\",\n      \"subject\": \"Enjoy our summer Sales !\",\n      \"isActive\": true,\n      \"testSent\": false,\n      \"sender\": {\n        \"name\": \"John\",\n        \"email\": \"john.smith@example.com\",\n        \"id\": 23\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"\",\n      \"tag\": \"Summer\",\n      \"htmlContent\": \"HTML CONTENT 2\",\n      \"createdAt\": \"2016-02-25T11:53:26.000Z\",\n      \"modifiedAt\": \"2016-02-25T11:53:26.000Z\"\n    }\n  ]\n}"
								},
								{
									"id": "5ae37d8d-9ff2-4682-93ab-6829cbe6cf08",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates?templateStatus=false&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											],
											"query": [
												{
													"key": "templateStatus",
													"value": "false"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Returns the template information",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "87db7a3f-f14c-49ba-ba61-41eca90f0641",
										"exec": [
											"pm.test(\"Verify the response code is 200\", function(){\r",
											"    pm.expect(pm.response.code).to.eql(200)\r",
											"})\r",
											"\r",
											"if(pm.response.code == 200){\r",
											"    const responseData = pm.response.json()\r",
											"    pm.test(\"Response JSON values for id should be a number\", function () {\r",
											"    pm.expect(responseData.id).to.be.a('number');\r",
											"});\r",
											"   pm.test('Response JSON values should be an object', function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Validate sender's email is olamide.oluwole0908@gmail.com\", function(){\r",
											"    pm.expect(responseData.sender.email).to.eql(pm.collectionVariables.get('sender_email'))\r",
											"});\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5af1a422-fcc6-4ff6-aa58-6d3ec62c612a",
										"exec": [
											"//Setting the wait time for when the next request will be run\r",
											"setTimeout(function(){}, 2000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2edfc95e-bbb0-4eb8-a890-0e9d08e95f47",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "{{template_id}}",
											"description": "(Required) id of the template"
										}
									]
								}
							},
							"response": [
								{
									"id": "847e23a3-6fa1-46e5-808d-928ce645de12",
									"name": "Email template informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 33,\n  \"name\": \"OrderConfirmation\",\n  \"subject\": \"Order Confirmation : Thanks for your Purchase !\",\n  \"isActive\": true,\n  \"testSent\": false,\n  \"sender\": {\n    \"name\": \"John\",\n    \"email\": \"john.smith@example.com\",\n    \"id\": 26\n  },\n  \"replyTo\": \"replyto@domain.com\",\n  \"toField\": \"\",\n  \"tag\": \"\",\n  \"htmlContent\": \"HTML CONTENT 4\",\n  \"createdAt\": \"2016-02-25T11:53:26.000Z\",\n  \"modifiedAt\": \"2016-02-25T11:53:26.000Z\",\n  \"doiTemplate\": false\n}"
								},
								{
									"id": "1f17ed54-0750-4606-9b62-ccd961c60543",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "05030ded-9b74-4025-8504-79fd5480d6fa",
									"name": "Template ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an email template",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e145bab5-b234-45e0-ba0c-62b9dc831fa4",
										"exec": [
											"if (pm.response.code == 204){\r",
											"   \r",
											"pm.test(\"Verify response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"    pm.test(\"Verify status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify header has a date property\", function(){\r",
											"    pm.response.to.have.header(\"Date\")\r",
											"});\r",
											"\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e9bb1048-8c46-4942-945d-a283ab25bd3c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Jojo Gigi\",\n    \"email\": \"olamide.oluwole0908@gmail.com\"\n  },\n  \"templateName\": \"Order Confirmation for Chefs bite\",\n  \"htmlContent\": \"The order has been confirmed. Thanks for your purchase\",\n  //Updates the email subject \n  \"subject\": \"Thanks for your purchase {{$randomAbbreviation}} !\",\n  \"replyTo\": \"support@myshop.com\",\n  //Updates the recipient's email everytime a request is sent\n  \"toField\": \"{{emailprefix}}{{$randomInt}}@gmail.com\",\n // \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "{{template_id}}",
											"description": "(Required) id of the template"
										}
									]
								}
							},
							"response": [
								{
									"id": "4044990d-e28a-46fb-88fd-a9dbc0ad4628",
									"name": "transactional email template updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order nÂ°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "39117ed5-53f6-4975-b0d8-9791ba958538",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order nÂ°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "300d22ce-7fd6-4711-adf8-32129258c52d",
									"name": "Template ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order nÂ°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an inactive email template",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ad27443e-5df0-4ec1-b030-e8840aaeb801",
										"exec": [
											"pm.test(\"Verify response code is 204\", function(){\r",
											"    pm.expect(pm.response.code).to.eql(204)\r",
											"});\r",
											"\r",
											"pm.test('Response time should be less than 500ms',function(){\r",
											"    pm.expect(pm.response.responseTime).to.be.lessThan(500)\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bad8bbd0-832b-4bfa-a836-9be5ee486bcd",
										"exec": [
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2d69b12d-1476-41ac-a561-6ffb607447c9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "{{template_id}}",
											"description": "(Required) id of the template"
										}
									]
								}
							},
							"response": [
								{
									"id": "3b4dcff2-e4a2-4802-8b5c-18441abcaba6",
									"name": "Inactive transactional email template has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "3cdc829e-4520-473e-b299-c1d93dc8310d",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "388acb9b-8a6d-4a78-b736-928d5d12a1ad",
									"name": "Template ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send a template to your test list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "193e62ec-aa2a-42ec-9f51-bb9c06ebf382",
										"exec": [
											"pm.test(\"Verify response code is 204\", function(){\r",
											"    pm.expect(pm.response.code).to.eql(204)\r",
											"});\r",
											"\r",
											"pm.test('Response time should be less than 800ms',function(){\r",
											"    pm.expect(pm.response.responseTime).to.be.lessThan(800)\r",
											"})\r",
											"\r",
											"pm.test(\"Verify the Header\", function(){\r",
											"    pm.expect(pm.response.headers).contains(Date)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5994d511-c107-4b8d-83d3-8c7390a8ab20",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailTo\": [\n    \"olamide.oluwole0908@gmail.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId",
										"sendTest"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "{{template_id2}}",
											"description": "(Required) Id of the template"
										}
									]
								}
							},
							"response": [
								{
									"id": "d362023c-ecdb-4572-862a-a8d1a5d51fb8",
									"name": "Test email has been sent successfully to all recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "86f0a91d-563a-4af6-9268-0a0b43af2b6e",
									"name": "Test email could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"XUvXs2MUkZy@eNdDZoaehFi.etn\",\n    \"HnrmUyMYn@sfTjWkSBpk.hm\"\n  ],\n  \"withoutListEmails\": [\n    \"qSPfAA-ZR9R@CdCUpePDRUIlyeX.js\",\n    \"hoJRuR3l@MHrCixtPTEHuYek.hs\"\n  ],\n  \"blackListedEmails\": [\n    \"wjSlx1vUDTsWt5@SzwzihE.ot\",\n    \"LO4E3a@ycxq.ri\"\n  ]\n}"
								},
								{
									"id": "d9704b15-bc1d-450d-8b97-9c787e16c929",
									"name": "Template ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "084b5b9d-6678-4af4-abd5-b4ee508471f7"
				},
				{
					"name": "Statistics",
					"item": [
						{
							"name": "Get your transactional email activity aggregated over a period of time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f09888e4-240d-4a5d-b230-e553b47d1e19",
										"exec": [
											"pm.test('Validate status is 200', function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"if(pm.response.code == 200){\r",
											"    pm.test(\"Validate response JSON keys include all required parameters\", function () {\r",
											"    pm.expect(pm.response.json()).to.include.all.keys('range', 'requests', 'delivered', 'hardBounces', 'softBounces', 'clicks', 'uniqueClicks', 'opens', 'uniqueOpens', 'spamReports', 'blocked', 'invalid', 'unsubscribed');\r",
											"});\r",
											"\r",
											"pm.test('Verify response JSON values for requests', function () {\r",
											"     pm.expect(pm.response.json()).to.be.an('object');\r",
											"     pm.expect(pm.response.json().requests).to.be.a('number');\r",
											"     pm.expect(pm.response.json().requests).to.be.at.least(1);\r",
											"});\r",
											"\r",
											"   \r",
											"    pm.test(\"Verify response time is less than 1500ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(1500);\r",
											"    });\r",
											"\r",
											"\r",
											"    pm.test(\"Verify Content-Type is present\", function () {\r",
											"        pm.response.to.have.header(\"Content-Type\");\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4a37f227-ab96-4255-885c-2587bbc57a22",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport?days=7",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"statistics",
										"aggregatedReport"
									],
									"query": [
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD). Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD). Must be greater than equal to startDate\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "7",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n"
										},
										{
											"key": "tag",
											"value": "",
											"description": "Tag of the emails",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will show the aggregated stats for past 90 days by default if `startDate` and `endDate` OR `days` is not passed. The date range can not exceed 90 days"
							},
							"response": [
								{
									"id": "818754b2-ee40-48cd-bc65-04fbfc77e4ec",
									"name": "Aggregated report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"range\": \"2016-09-08|2017-04-28\",\n  \"requests\": 19887,\n  \"delivered\": 18996,\n  \"hardBounces\": 234,\n  \"softBounces\": 1533,\n  \"clicks\": 9987,\n  \"uniqueClicks\": 8766,\n  \"opens\": 17654,\n  \"uniqueOpens\": 13688,\n  \"spamReports\": 1,\n  \"blocked\": 2,\n  \"invalid\": 0,\n  \"unsubscribed\": 2\n}"
								},
								{
									"id": "e746e33d-2d45-4863-aa9a-24c8977ed538",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get your transactional email activity aggregated per day",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdd43c71-1e60-487a-93a0-86bb0ba9a27d",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify reports array is present and contains at least one element\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.have.property('reports').that.is.an('array').and.not.to.be.empty;\r",
											"});\r",
											"\r",
											"//Checks to see the date returned is in the acceptable format\r",
											"pm.test(\"Verify date field is in a valid date format for each report\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.reports).to.be.an('array');\r",
											"    \r",
											"    responseData.reports.forEach(function(report) {\r",
											"        pm.expect(report.date).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7014a883-94c4-4734-bea7-c1e3fe9406a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/statistics/reports?limit=10&offset=0&startDate=&endDate=&days=1&tag=&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"statistics",
										"reports"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page"
										},
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD)\n"
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD)\n"
										},
										{
											"key": "days",
											"value": "1",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n"
										},
										{
											"key": "tag",
											"value": "",
											"description": "Tag of the emails"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "a4edd0c3-5fdd-436a-9acd-327ce10d3908",
									"name": "Aggregated report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/reports?limit=10&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"reports\": [\n    {\n      \"date\": \"2017-04-30T00:00:00.000Z\",\n      \"requests\": 10756,\n      \"delivered\": 10103,\n      \"hardBounces\": 21,\n      \"softBounces\": 137,\n      \"clicks\": 1026,\n      \"uniqueClicks\": 720,\n      \"opens\": 5091,\n      \"uniqueOpens\": 2318,\n      \"spamReports\": 0,\n      \"blocked\": 519,\n      \"invalid\": 1,\n      \"unsubscribed\": 0\n    },\n    {\n      \"date\": \"2017-05-01T00:00:00.000Z\",\n      \"requests\": 18812,\n      \"delivered\": 17499,\n      \"hardBounces\": 34,\n      \"softBounces\": 254,\n      \"clicks\": 1514,\n      \"uniqueClicks\": 1090,\n      \"opens\": 10089,\n      \"uniqueOpens\": 4393,\n      \"spamReports\": 0,\n      \"blocked\": 920,\n      \"invalid\": 2,\n      \"unsubscribed\": 3\n    }\n  ]\n}"
								},
								{
									"id": "eeb28d8c-d898-4e57-8c03-827f968c2d50",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/reports?limit=10&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all your transactional email activity (unaggregated events)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea19a319-7337-40d1-92c3-ee057217c146",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"All event objects contain required properties\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.events).to.be.an('array');\r",
											"    \r",
											"    responseData.events.forEach(function(event) {\r",
											"        pm.expect(event).to.include.all.keys('email', 'date', 'subject', 'messageId', 'event', 'tag', 'from');\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"// Retrieve the saved \"messageId\" value from the variable\r",
											"pm.test(\"Validate response against saved 'messageId' value\", function() {\r",
											"    var savedMessageId = pm.environment.get(\"m_id\");\r",
											"    //console.log(savedMessageId)\r",
											"    var responseBody = pm.response.json();\r",
											"    responseBody.events.forEach(function(event) {\r",
											"       // console.log(event.messageId)\r",
											"        pm.expect(event.messageId).to.equal(savedMessageId);\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d4f0bc0b-7c5a-46a8-9d5a-4f18e6c7e2d2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{api-key}}",
										"key": "api-key"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/smtp/statistics/events?days=11&messageId={{m_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"smtp",
										"statistics",
										"events"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number limitation for the result returned",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from.",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD). Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD). Must be greater than equal to startDate\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "11",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n"
										},
										{
											"key": "email",
											"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml",
											"description": "Filter the report for a specific email addresses",
											"disabled": true
										},
										{
											"key": "event",
											"value": "invalid",
											"description": "Filter the report for a specific event type",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "veniam elit in",
											"description": "Filter the report for tags (serialized and urlencoded array)",
											"disabled": true
										},
										{
											"key": "messageId",
											"value": "{{m_id}}",
											"description": "Filter on a specific message id"
										},
										{
											"key": "templateId",
											"value": "13396752",
											"description": "Filter on a specific template id",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will show the aggregated stats for past 30 days by default if `startDate` and `endDate` OR `days` is not passed. The date range can not exceed 90 days"
							},
							"response": [
								{
									"id": "74e3a2d2-570f-451d-b503-8496e501542a",
									"name": "Email events report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/events?limit=50&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&email=2RGqj@OVCPsUENXisekVnjFnfB.xml&event=invalid&tags=veniam elit in&messageId=veniam elit in&templateId=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "email",
													"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml"
												},
												{
													"key": "event",
													"value": "invalid"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"events\": [\n    {\n      \"email\": \"john.smith@example.com\",\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"messageId\": \"<201798300811.5787683@example.domain.com>\",\n      \"event\": \"deferred\",\n      \"reason\": \"Error connection timeout\",\n      \"tag\": \"OrderConfirmation\",\n      \"from\": \"john@example.com\",\n      \"templateId\": 4\n    },\n    {\n      \"email\": \"john.smith@example.com\",\n      \"date\": \"2017-03-13T16:30:00.000Z\",\n      \"messageId\": \"<201798300811.5787683@example.domain.com>\",\n      \"event\": \"delivered\",\n      \"tag\": \"OrderConfirmation\",\n      \"from\": \"john@example.com\",\n      \"templateId\": 5\n    }\n  ]\n}"
								},
								{
									"id": "6861ddf0-b25c-4efb-949b-8e0ca782824d",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/events?limit=50&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&email=2RGqj@OVCPsUENXisekVnjFnfB.xml&event=invalid&tags=veniam elit in&messageId=veniam elit in&templateId=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "email",
													"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml"
												},
												{
													"key": "event",
													"value": "invalid"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "8419ec09-76cd-4f28-8721-ee32b0e8dc39"
				},
				{
					"name": "Blocked Contacts",
					"item": [
						{
							"name": "Get the list of blocked or unsubscribed transactional contacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8cffe97c-2552-4b60-9b77-bf45b4ca7849",
										"exec": [
											"pm.test(\"Verify schema is valid\", function () {\r",
											"  var schema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"      contacts: {\r",
											"        type: \"array\",\r",
											"        items: {\r",
											"          type: \"object\",\r",
											"          properties: {\r",
											"            email: { type: \"string\" },\r",
											"            senderEmail: { type: \"string\" },\r",
											"            reason: {\r",
											"              type: \"object\",\r",
											"              properties: {\r",
											"                message: { type: \"string\" },\r",
											"                code: { type: \"string\" }\r",
											"              },\r",
											"              required: [\"message\", \"code\"]\r",
											"            },\r",
											"            blockedAt: { type: \"string\", format: \"date-time\" }\r",
											"          },\r",
											"          required: [\"email\", \"senderEmail\", \"reason\", \"blockedAt\"]\r",
											"        }\r",
											"      },\r",
											"      count: { type: \"number\" }\r",
											"    },\r",
											"    required: [\"contacts\", \"count\"]\r",
											"  };\r",
											"\r",
											"  var response = pm.response.json();\r",
											"  pm.expect(tv4.validate(response, schema)).to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											"// Test to check if the response time is within an acceptable range\r",
											"pm.test(\"Verify response time is within acceptable range\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"pm.test(\"Verify response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify count is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.count).to.be.a('number').and.to.satisfy((count) => count >= 0, \"Count should be a non-negative integer\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"BlockedAt is in a valid date-time format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.contacts).to.be.an('array');\r",
											"    \r",
											"    responseData.contacts.forEach(function(contact) {\r",
											"        pm.expect(contact.blockedAt).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/);\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Contacts array is present and has the expected number of elements\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.contacts).to.exist.and.to.be.an('array');\r",
											"    pm.expect(responseData.contacts).to.have.lengthOf(responseData.count);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "32f6ecab-ba42-4a39-8d52-94a67f689d14",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedContacts?limit=50&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedContacts"
									],
									"query": [
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) from which you want to fetch the blocked or unsubscribed contacts\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) till which you want to fetch the blocked or unsubscribed contacts\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page"
										},
										{
											"key": "senders",
											"value": "",
											"description": "Comma separated list of emails of the senders from which contacts are blocked or unsubscribed",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "e0ac93ec-8a63-47f7-b1fe-720348a3d1a1",
									"name": "List of blocked or unsubscribed transactional contacts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts?startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&senders=ullamco nostrud,occaecat in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "senders",
													"value": "ullamco nostrud,occaecat in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"count\": 1,\n  \"contacts\": [\n    {\n      \"email\": \"abc@xyz.com\",\n      \"senderEmail\": \"ez312@gmal.com\",\n      \"reason\": {\n        \"message\": \"Admin blocked\",\n        \"code\": \"adminBlocked\"\n      },\n      \"blockedAt\": \"2017-05-01T12:30:00.000Z\"\n    }\n  ]\n}"
								},
								{
									"id": "c0c39461-7dd5-4f97-9242-185251df0e1d",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts?startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&senders=ullamco nostrud,occaecat in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "senders",
													"value": "ullamco nostrud,occaecat in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Unblock or resubscribe a transactional contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "30e4fa94-076b-4b09-b247-f7c6b36b46d4",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the response is an object with code and message properties\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.all.keys('code', 'message');\r",
											"});\r",
											"\r",
											" \r",
											"pm.test(\"Verify response message is descriptive and informative\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.message).to.exist.and.to.be.a('string');\r",
											"    pm.expect(responseData.message).to.not.be.empty;\r",
											"});\r",
											"\r",
											"//Checks that code does not have an empty string\r",
											"pm.test(\"Verify code property is a non-empty string\", function () {\r",
											"    //saves the entire response object in a variable\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Code should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"//checking that the response time is not greater than 600ms\r",
											"pm.test(\"Verify response time is within acceptable range\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d48e7f90-1c3e-4fdf-9b7d-c14076b92de6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedContacts",
										":email"
									],
									"variable": [
										{
											"key": "email",
											"value": "{{sender_email}}",
											"description": "(Required) contact email (urlencoded) to unblock."
										}
									]
								}
							},
							"response": [
								{
									"id": "edaa771d-53cd-458e-a3d8-d786bc2e761c",
									"name": "Contact unblocked",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "ad2ba9e0-a66d-44ce-90ae-4305a4c802ef",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "a24e6091-2cab-48b3-8867-4b48349bdf8b",
									"name": "Contact email not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "946afd75-76c3-47a6-aa3b-7b2503297d3d"
				},
				{
					"name": "Blocked Domains",
					"item": [
						{
							"name": "Get the list of blocked domains",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6175392a-6e80-4ddd-8fc2-ecc162df0df0",
										"exec": [
											"pm.test('Verify response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify domains array is present and contains expected number of elements\", function () {\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.domains).to.exist.and.to.be.an('array').with.lengthOf.at.least(1);\r",
											"});\r",
											"\r",
											"pm.test('Each domain in the \\'domains\\' array is a non-empty string', function () {\r",
											"    pm.expect(responseData.domains).to.be.an('array').that.is.not.empty;\r",
											"    responseData.domains.forEach(function (domain) {\r",
											"        pm.expect(domain).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Domain should not be empty');\r",
											"    });\r",
											"})\r",
											"\r",
											"pm.test('Response contains the required fields', function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.domains).to.exist.and.to.be.an('array');\r",
											"})\r",
											"\r",
											"pm.test('No duplicate domains in the response', function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.domains).to.be.an('array');\r",
											"    const uniqueDomains = new Set(responseData.domains);\r",
											"    pm.expect(uniqueDomains.size).to.equal(responseData.domains.length, 'Response should not contain any duplicate domains');\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ccd75188-117a-468c-bbe0-feef13457a98",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/smtp/blockedDomains",
								"description": "Get the list of blocked domains"
							},
							"response": [
								{
									"id": "1f5845d1-89fe-4b1b-90ab-fb292daedba3",
									"name": "List of blocked domains",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/smtp/blockedDomains"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"domains\": [\n    \"example.com\",\n    \"testdomain.com\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Add a new domain to the list of blocked domains",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "876abc00-032e-41e6-9266-02fd566527a6",
										"exec": [
											"//saving the created domain in a variable if the operation is successful\r",
											"let domain = JSON.parse(pm.request.body.raw).domain;\r",
											"console.log(domain)\r",
											"\r",
											"if(pm.response.code == 201){\r",
											"pm.collectionVariables.set(\"blocked_domain\",domain)\r",
											"\r",
											"\r",
											"\r",
											"//The expected response code is 201. \r",
											"pm.test(\"Verify response status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"//The response body is expected to be an empty\r",
											"pm.test(\"Verify response body should be empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.empty;\r",
											"});\r",
											"\r",
											"//This checks that the collection variable is set \r",
											"pm.test(\"Blocked_domain variable is set in collection variables\", function () {\r",
											"    pm.expect(pm.variables.get(\"blocked_domain\")).to.exist;\r",
											"});\r",
											"\r",
											"//Confirm relevant header information are present\r",
											"pm.test(\"Response headers contain the necessary information\", function () {\r",
											"    pm.expect(pm.response).to.have.header('Content-Type');\r",
											"    pm.expect(pm.response).to.have.header('Date');\r",
											"    pm.expect(pm.response).to.have.header('x-sib-ratelimit-limit');\r",
											"});\r",
											"\r",
											"\r",
											"//Check the speed of the endpoint\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "055f122a-c402-445e-8b37-14aed63a64e2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": \"{{$randomAdjective}}.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/smtp/blockedDomains",
								"description": "Blocks a new domain in order to avoid messages being sent to the same"
							},
							"response": [
								{
									"id": "2d7b36cb-8553-4bbe-9ae8-25b9d15dcd40",
									"name": "Domain is successfully blocked",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/blockedDomains"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "605ebf9e-24c9-465c-ace5-66aea80d411f",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/blockedDomains"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Unblock an existing domain from the list of blocked domains",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "48928030-989e-4114-ac56-e063a73a44bb",
										"exec": [
											"//checking that the header Date is present\r",
											"pm.test(\"Verify Date is present in the header\", function () {\r",
											"    pm.response.to.have.header(\"Date\");\r",
											"});\r",
											"\r",
											"//validating the speed of the endpoint\r",
											"pm.test(\"Response time is less than 400ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
											"});\r",
											"\r",
											"//validating the status code name\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "58551b1f-69d3-4c35-bdaa-6da62ed3ca12",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedDomains",
										":domain"
									],
									"variable": [
										{
											"key": "domain",
											"value": "{{blocked_domain}}",
											"description": "(Required) The name of the domain to be deleted"
										}
									]
								},
								"description": "Unblocks an existing domain from the list of blocked domains"
							},
							"response": [
								{
									"id": "12c1a124-0f50-4841-9c8e-e98b95350f3f",
									"name": "Domain is successfully deleted from the list of blocked domains",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "fc738621-5b12-42ad-aa08-bcd441cd7942",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "232bb29f-078a-4c11-8eef-66e1651c4381",
									"name": "Domain not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "1ad5c4f5-3cf9-40a4-bfe1-3f510d57953e"
				},
				{
					"name": "Logs",
					"item": [
						{
							"name": "Delete hardbounces",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e634700-9db8-4d46-8de0-0852aaedd2ed",
										"exec": [
											"pm.test(\"Verify response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify response is an object\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify response does not have any properties\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.empty;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "31e5373d-0336-4cbe-a929-4e730f51265b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"startDate\": \"2023-11-28\",\n  \"endDate\": \"2023-11-28\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/smtp/deleteHardbounces",
								"description": "Delete hardbounces. To use carefully (e.g. in case of temporary ISP failures)"
							},
							"response": [
								{
									"id": "dc5bf2a4-1c0a-40c8-aa0d-ff062bab9049",
									"name": "Hardbounces deleted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startDate\": \"nostrud magna\",\n  \"endDate\": \"incididunt\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/deleteHardbounces"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "8399c862-2f03-4994-a845-1130c1ee9ae5",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startDate\": \"nostrud magna\",\n  \"endDate\": \"incididunt\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/deleteHardbounces"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send a scheduled transactional email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8ff49cc4-e979-41d3-aa18-a4d11513fd1a",
										"exec": [
											"pm.test(\"Verify status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"  const responseData = pm.response.json()\r",
											"\r",
											"if (pm.response.code == 202){\r",
											"  \r",
											"    pm.environment.set(\"sm_id\",responseData.messageId) \r",
											"\r",
											"    pm.test(\"Verify the messageId for a scheduled message is not empty\", function(){\r",
											"pm.expect(responseData.messageId).not.null\r",
											"    }\r",
											"    )\r",
											"};\r",
											"\r",
											" pm.test(\"Verify the messageId is a string\", function(){\r",
											"pm.expect(responseData.messageId).to.be.a('string')\r",
											"    }) ;\r",
											"    "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2f2834db-5b86-4376-86f4-52dff6e91d36",
										"exec": [
											"//Dynamically get the current date and time using postman's inbuilt moment feature and then add 1 day to the returned value. This value will be used everytime we need to schedule transactional emails.\r",
											"const moment = require('moment');\r",
											"pm.globals.set(\"today\", moment().add(1, \"days\").format(\"YYYY-MM-DDTHH:mm:ss.SSSZ\"));\r",
											"console.log(pm.globals.get('today'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "605e7dc2-1a4e-4261-ad1a-d8660c02f3eb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sender\": {\n        \"name\": \"DVPOS POS service\",\n        \"email\": \"no-reply@myshop.com\"\n    },\n    \"to\": [\n        {\n            \"email\": \"olamide.oluwole0908@gmail.com\",\n            \"name\": \"Olamide\"\n        }\n    ],\n    \"bcc\": [\n        {\n            \"email\": \"howard_weng@datavan.com.tw\",\n            \"name\": \"Howard BCC\"\n        }\n    ],\n    \"cc\": [\n        {\n            \"email\": \"howard_weng@datavan.com.tw\",\n            \"name\": \"Howard CC\"\n        }\n    ],\n    \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>This is sample HTML</h1> </html>\",\n    \"subject\": \"Login Email confirmation\",\n    \"replyTo\": {\n        \"email\": \"olamide.oluwole0908@gmail.com\",\n        \"name\": \"Ann\"\n    },\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n   // \"scheduledAt\": \"2023-11-22T01:45:00+02:00\"\n    \"scheduledAt\": \"{{today}}\"\n    \n}"
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"email"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "f574c7bd-32c9-4e16-bb65-c540aa1742a3",
									"name": "Batch send transactional emails",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sender\": {\n        \"name\": \"Mary from MyShop\",\n        \"email\": \"no-reply@myshop.com\"\n    },\n    \"to\": [\n        {\n            \"email\": \"jimmy98@example.com\",\n            \"name\": \"Jimmy\"\n        }\n    ],\n    \"bcc\": [\n        {\n            \"email\": \"helen9766@example.com\",\n            \"name\": \"Helen\"\n        },\n        {\n            \"email\": \"helen9766@example.com\",\n            \"name\": \"Helen\"\n        }\n    ],\n    \"cc\": [\n        {\n            \"email\": \"ann6533@example.com\",\n            \"name\": \"Ann\"\n        }\n    ],\n    \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>This is sample HTML</h1> </html>\",\n    \"subject\": \"Login Email confirmation\",\n    \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n    },\n    \"attachment\": [\n        {\n            \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.png\",\n            \"name\": \"myAttachment.png\"\n        }\n    ],\n    \"params\": {\n        \"name\": \"Ann\",\n        \"greeting\": \"Hello fellow customer!\"\n    },\n    \"messageVersions\": [\n        {\n            \"to\": [\n                {\n                    \"email\": \"jimmy98@example.com\",\n                    \"name\": \"Jimmy\"\n                }\n            ],\n            \"params\": {\n                \"name\": \"Jimmy\",\n                \"greeting\": \"This is a custom greeting for Jimmy\"\n            },\n            \"replyTo\": {\n                \"email\": \"ann6533@example.com\",\n                \"name\": \"Ann\"\n            },\n            \"subject\": \"Login Email confirmation\"\n        },\n        {\n            \"to\": [\n                {\n                    \"email\": \"mark@example.com\",\n                    \"name\": \"Mark\"\n                }\n            ],\n            \"params\": {\n                \"name\": \"Mark\",\n                \"greeting\": \"This is a custom greeting for Mark\"\n            },\n            \"bcc\": [\n                {\n                    \"email\": \"helen9766@example.com\",\n                    \"name\": \"Helen\"\n                },\n                {\n                    \"email\": \"helen9766@example.com\",\n                    \"name\": \"Helen\"\n                }\n            ],\n            \"cc\": [\n                {\n                    \"email\": \"ann6533@example.com\",\n                    \"name\": \"Ann\"\n                },\n                {\n                    \"email\": \"ann6533@example.com\",\n                    \"name\": \"Ann\"\n                }\n            ],\n            \"subject\": \"Login Email confirmation\"\n        }\n    ],\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"type": "text",
													"disabled": true
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "049f5c83-ba9d-42e9-80dd-3a87d0de1261",
									"name": "transactional email sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/email"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"id": "79ed36fa-64d4-4675-82e6-edfab3a03de7",
									"name": "transactional email scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/email"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"id": "a77a9222-a020-41e6-a16a-490e94a5cce6",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smtp/email"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an SMTP transactional log",
							"id": "812dc5d7-659a-4dab-beb5-6b7075c32669",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/log/:messageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"log",
										":messageId"
									],
									"variable": [
										{
											"key": "messageId",
											"value": "{{sm_id}}",
											"description": "(Required) MessageId of the transactional log to delete"
										}
									]
								}
							},
							"response": [
								{
									"id": "d48b9ef1-8fec-4bb9-b964-8939366c4180",
									"name": "Transactional Logs deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "cf6d3793-527c-4c67-a93d-150b2d8ad24d",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "b551b3e4-7625-4cd9-a150-1411ec7303e0",
									"name": "Message ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "9bf06846-71ae-4aa1-bf3c-418c61e7935a"
				},
				{
					"name": "Inbound Email Parsing",
					"item": [
						{
							"name": "Get the list of all the events for the received emails.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7008a60c-fe35-49de-9bd0-b3d99a118fe2",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Events array is present\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.events).to.be.an('array');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Date field is in valid date format for each event\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.events).to.be.an('array');\r",
											"\r",
											"    responseData.events.forEach(function(event) {\r",
											"        pm.expect(event.date).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/);\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "889619fe-9dda-49f1-b283-cd37ab600a1b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/events?limit=100&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"events"
									],
									"query": [
										{
											"key": "sender",
											"value": "",
											"description": "Email address of the sender.",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "1947-08-13",
											"description": "Mandatory if endDate is used. Starting date (YYYY-MM-DD) from which you want to fetch the list. Maximum time period that can be selected is one month.",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "1947-08-13",
											"description": "Mandatory if startDate is used. Ending date (YYYY-MM-DD) till which you want to fetch the list. Maximum time period that can be selected is one month.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation"
										}
									]
								},
								"description": "This endpoint will show the list of all the events for the received emails."
							},
							"response": [
								{
									"id": "00d9bf9c-9205-499e-b4dc-776163e4460a",
									"name": "List of events for received emails.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events?sender=veniam elit in&startDate=1947-08-13&endDate=1947-08-13&limit=100&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events"
											],
											"query": [
												{
													"key": "sender",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "1947-08-13"
												},
												{
													"key": "endDate",
													"value": "1947-08-13"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"events\": [\n    {\n      \"uuid\": \"1a825d56-029b-4a41-b8e4-1a825d56\",\n      \"date\": \"2017-03-11T12:30:00.000Z\",\n      \"sender\": \"john@example.com\",\n      \"recipient\": \"alexa@example.com\"\n    },\n    {\n      \"uuid\": \"1a825d56-029b-4a41-b8e4-61670463431b\",\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"sender\": \"alice@example.com\",\n      \"recipient\": \"bob@example.com\"\n    }\n  ]\n}"
								},
								{
									"id": "5e373f30-96b5-4b76-ac75-b666397de24f",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events?sender=veniam elit in&startDate=1947-08-13&endDate=1947-08-13&limit=100&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events"
											],
											"query": [
												{
													"key": "sender",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "1947-08-13"
												},
												{
													"key": "endDate",
													"value": "1947-08-13"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Fetch all events history for one particular received email.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0bd63e3c-b38d-4ee3-a2b5-30dc30530554",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Code and message fields are present in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.code).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"});\r",
											"\r",
											"// Test to check if the response has the correct content type\r",
											"pm.test(\"Response has the correct content type\", function() {\r",
											"    pm.expect(pm.response).to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4148c6f6-251f-4ae2-ada8-80f4ba0d5e48",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/events/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"events",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "{{uuid}}",
											"description": "(Required) UUID to fetch events specific to recieved email"
										}
									]
								},
								"description": "This endpoint will show the list of all events history for one particular received email."
							},
							"response": [
								{
									"id": "0096ee55-9364-4fa4-ac1a-fd023123b60c",
									"name": "Email campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) UUID to fetch events specific to recieved email"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"receivedAt\": \"2017-03-12T12:30:00.000Z\",\n  \"deliveredAt\": \"2017-03-12T12:31:00.000Z\",\n  \"sender\": \"alice@example.com\",\n  \"recipient\": \"bob@example.com\",\n  \"messageId\": \"<a_nice@message.id>\",\n  \"subject\": \"Re: Question about your API\",\n  \"attachments\": [\n    {\n      \"name\": \"invoice.pdf\",\n      \"contentType\": \"application/pdf\",\n      \"contentId\": null,\n      \"contentLength\": 12345\n    }\n  ],\n  \"logs\": [\n    {\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"type\": \"received\"\n    },\n    {\n      \"date\": \"2017-03-12T12:30:04.000Z\",\n      \"type\": \"webhookFailed\"\n    },\n    {\n      \"date\": \"2017-03-12T12:31:04.000Z\",\n      \"type\": \"webhookDelivered\"\n    }\n  ]\n}"
								},
								{
									"id": "4329641c-13af-46ca-986c-4ae8727dad71",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) UUID to fetch events specific to recieved email"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Retrieve inbound attachment with download token.",
							"id": "8bef5864-d7af-44a8-a6c3-b0e8d98a100e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"attachments",
										":downloadToken"
									],
									"variable": [
										{
											"id": "9b8a44f8-e2f7-4b7b-9baa-d5e2a6f42de0",
											"key": "downloadToken",
											"value": "",
											"description": "(Required) Token to fetch a particular attachment"
										}
									]
								},
								"description": "This endpoint will retrieve inbound attachment with download token."
							},
							"response": [
								{
									"id": "84c0ce77-7e79-4f12-8393-cf25ff5f94ec",
									"name": "Attachment information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=\"download.png\"",
											"description": ""
										},
										{
											"key": "Content-Length",
											"value": "4032",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/octet-stream"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "veniam elit in"
								},
								{
									"id": "c8abacc8-378c-4fc9-8e99-9f3b81351f03",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "7b3f24d4-aeb4-40c0-adac-63f7dce8da55",
									"name": "attachment not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "279864f2-ed0d-45c0-a7b7-939099a7fde4"
				},
				{
					"name": "Transactional SMS",
					"item": [
						{
							"name": "Send SMS message to a mobile number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac3d21ca-77b1-4f6b-ac48-fa9864f2136e",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.code).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify message is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.message).to.be.a('string').and.to.include('Unable to send sms. Your SMS sending status is not yet activated');\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7b6929f0-9a59-450a-8a68-45da4587bae7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"+2347069423351\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/transactionalSMS/sms"
							},
							"response": [
								{
									"id": "2eb9f5e3-4022-491f-8469-6706a718f7ce",
									"name": "SMS has been sent successfully to the recipient",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transactionalSMS/sms"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"messageId\": 1511882900176220,\n  \"reference\": \"ab1cde2fgh3i4jklmno\",\n  \"smsCount\": 2,\n  \"usedCredits\": 0.7,\n  \"remainingCredits\": 82.85\n}"
								},
								{
									"id": "b3c674a8-54e2-4b89-bd91-2232e10b2ecc",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transactionalSMS/sms"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "d4220aa4-4065-48ec-8525-c877c4dcaf52",
									"name": "You don't have enough credit to send your SMS. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transactionalSMS/sms"
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "86dd3be7-f6fc-476e-b4ec-62d06bf6ee73"
				},
				{
					"name": "SMS statistics",
					"item": [
						{
							"name": "Get your SMS activity aggregated over a period of time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5fc165c7-cb63-4571-bb42-025542b1c007",
										"exec": [
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has the correct content type\", function() {\r",
											"    pm.expect(pm.response).to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "67b573b2-5e73-4ecb-8ae1-c226cf9d8fba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport?days=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"aggregatedReport"
									],
									"query": [
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "20",
											"description": "Number of days in the past including today (positive integer). **Not compatible with startDate and endDate**\n"
										},
										{
											"key": "tag",
											"value": "",
											"description": "Filter on a tag",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "0f2628eb-7065-4405-bd4d-b01a9962449e",
									"name": "Aggregated SMS report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"range\": \"2015-05-22|2017-11-29\",\n  \"requests\": 54,\n  \"delivered\": 16,\n  \"hardBounces\": 5,\n  \"softBounces\": 26,\n  \"blocked\": 4,\n  \"unsubscribed\": 10,\n  \"replied\": 8,\n  \"accepted\": 6,\n  \"rejected\": 14\n}"
								},
								{
									"id": "1d8b2366-2b97-4a1d-be5e-6742e5906bd1",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get your SMS activity aggregated per day",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c5e3cd5-1096-4897-ab03-20feaf72b2dc",
										"exec": [
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "296f40bf-65fb-45b4-b781-ed948fe3b796",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/reports?days=1&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"reports"
									],
									"query": [
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "1",
											"description": "Number of days in the past including today (positive integer). **Not compatible with 'startDate' and 'endDate'**\n"
										},
										{
											"key": "tag",
											"value": "",
											"description": "Filter on a tag",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "ab98f77f-9a33-4a3c-86cc-58a930aae158",
									"name": "Aggregated SMS report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/reports?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"reports\": [\n    {\n      \"date\": \"2017-04-30T00:00:00.000Z\",\n      \"requests\": 10756,\n      \"delivered\": 10103,\n      \"hardBounces\": 21,\n      \"softBounces\": 137,\n      \"blocked\": 1026,\n      \"unsubscribed\": 720,\n      \"replied\": 5091,\n      \"accepted\": 2318,\n      \"rejected\": 0\n    },\n    {\n      \"date\": \"2017-05-01T00:00:00.000Z\",\n      \"requests\": 18812,\n      \"delivered\": 17499,\n      \"hardBounces\": 34,\n      \"softBounces\": 254,\n      \"blocked\": 1514,\n      \"unsubscribed\": 1090,\n      \"replied\": 10089,\n      \"accepted\": 4393,\n      \"rejected\": 0\n    },\n    {\n      \"date\": \"2017-05-02T00:00:00.000Z\",\n      \"requests\": 14321,\n      \"delivered\": 13427,\n      \"hardBounces\": 16,\n      \"softBounces\": 176,\n      \"blocked\": 1646,\n      \"unsubscribed\": 1170,\n      \"replied\": 11563,\n      \"accepted\": 4689,\n      \"rejected\": 0\n    }\n  ]\n}"
								},
								{
									"id": "38bb88e9-c933-4766-a23e-708f8684229a",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/reports?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all your SMS activity (unaggregated events)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9cc9309c-1b72-4a0a-872c-72d5fe9658b2",
										"exec": [
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has the correct content type\", function() {\r",
											"    pm.expect(pm.response).to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8bca9958-2d81-4f56-aa24-420f19b3fb70",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/events?limit=50&offset=0&days=7&phoneNumber=+2347069423351&event=bounces&tags=&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"events"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "days",
											"value": "7",
											"description": "Number of days in the past including today (positive integer). **Not compatible with 'startDate' and 'endDate'**\n"
										},
										{
											"key": "phoneNumber",
											"value": "+2347069423351",
											"description": "Filter the report for a specific phone number"
										},
										{
											"key": "event",
											"value": "bounces",
											"description": "Filter the report for specific events"
										},
										{
											"key": "tags",
											"value": "",
											"description": "Filter the report for specific tags passed as a serialized urlencoded array"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "9b1fede3-2705-4cc8-9269-93875340ad3c",
									"name": "Sms events report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/events?limit=50&startDate=veniam elit in&endDate=veniam elit in&offset=0&days=13396752&phoneNumber=veniam elit in&event=bounces&tags=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "phoneNumber",
													"value": "veniam elit in"
												},
												{
													"key": "event",
													"value": "bounces"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"events\": [\n    {\n      \"phoneNumber\": \"00911059469013\",\n      \"date\": \"2015-05-20T12:30:00.000Z\",\n      \"messageId\": \"1473139351170140\",\n      \"event\": \"sent\",\n      \"reason\": \"Recipient is currently unreachable\",\n      \"tag\": \"cabWaiting\"\n    },\n    {\n      \"phoneNumber\": \"00911059469013\",\n      \"date\": \"2015-05-20T16:30:00.000Z\",\n      \"messageId\": \"1473139351170140\",\n      \"event\": \"delivered\",\n      \"reason\": \"Recipient is currently unreachable\",\n      \"tag\": \"cabRequest\"\n    }\n  ]\n}"
								},
								{
									"id": "0c8d786f-6aaa-476a-ba94-771bb06d5187",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/events?limit=50&startDate=veniam elit in&endDate=veniam elit in&offset=0&days=13396752&phoneNumber=veniam elit in&event=bounces&tags=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "phoneNumber",
													"value": "veniam elit in"
												},
												{
													"key": "event",
													"value": "bounces"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "e4e0258e-2221-493b-9cbb-6281dcf1a37b"
				},
				{
					"name": "WhatsApp Transactional",
					"item": [
						{
							"name": "Send a WhatsApp message",
							"id": "6dc6bc0b-ba79-4f74-a843-f94f62039b83",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contactNumbers\": [\n        \"919808240608\"\n    ],\n    \"senderNumber\": \"919900751564\",\n    \"xtext\": \"saranghe\",\n    \"templateId\": 744919760309407\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/v3/whatsapp/sendMessage"
							},
							"response": [
								{
									"id": "b0334b59-4f07-497d-b51d-15ab81d55762",
									"name": "Send a whatsapp message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-sib-client-id",
												"value": "2040074",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"contactNumbers\": [\n        \"917017247118\"\n    ],\n    \"senderNumber\": \"919368207022\",\n    \"text\": \"saranghe\",\n    \"xtemplateId\": 2327199890770871\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "public-transactional-whatsapp-api.51b.dev/v3/whatsapp/sendMessage"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-length",
											"value": "53"
										},
										{
											"key": "content-type",
											"value": "application/json"
										},
										{
											"key": "date",
											"value": "Fri, 27 Jan 2023 13:16:59 GMT"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"messageId\": \"5b0d880b-b258-4c9c-a31b-1e248d11d66c\"\n}"
								}
							]
						},
						{
							"name": "Get all your WhatsApp activity (unaggregated events) Copy",
							"id": "a3472d47-2201-470e-971b-64f7d42f5b22",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{api-key}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/whatsapp/statistics/events?limit=1&offset=9&event=sent&startDate=&endDate=&sort=desc&contactNumber=918077039164&days=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"whatsapp",
										"statistics",
										"events"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "offset",
											"value": "9"
										},
										{
											"key": "event",
											"value": "sent"
										},
										{
											"key": "startDate",
											"value": ""
										},
										{
											"key": "endDate",
											"value": ""
										},
										{
											"key": "sort",
											"value": "desc"
										},
										{
											"key": "contactNumber",
											"value": "918077039164"
										},
										{
											"key": "days",
											"value": "3"
										}
									]
								}
							},
							"response": [
								{
									"id": "3757ffa3-58a3-44a9-a7e1-a83ae2f5de10",
									"name": "Get events",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/whatsapp/statistics/events?limit=10&offset=0&event=soft-bounce&startDate=2023-01-19&endDate=2023-02-20&sort=desc&contactNumber=916666666666",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"whatsapp",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "event",
													"value": "soft-bounce"
												},
												{
													"key": "startDate",
													"value": "2023-01-19"
												},
												{
													"key": "endDate",
													"value": "2023-02-20"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "contactNumber",
													"value": "916666666666"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 22 Feb 2023 07:13:22 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "79d5eb2e9cfc33c6-DEL"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "*"
										},
										{
											"key": "access-control-allow-methods",
											"value": "PUT, POST, GET, DELETE, PATCH, OPTIONS"
										},
										{
											"key": "cf-apo-via",
											"value": "origin,host"
										},
										{
											"key": "sib-request-id",
											"value": "626c8458-1def-94cd-8cef-89894e1e5969"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "43"
										},
										{
											"key": "Server-Timing",
											"value": "cf-q-config;dur=6.9999987317715e-06"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"events\": [\n        {\n            \"senderNumber\": \"9368207022\",\n            \"contactNumber\": \"916666666666\",\n            \"event\": \"soft-bounce\",\n            \"messageId\": \"43:18\",\n            \"date\": \"2023-02-16T11:38:09.395+01:00\"\n        },\n        {\n            \"senderNumber\": \"9368207022\",\n            \"contactNumber\": \"916666666666\",\n            \"event\": \"soft-bounce\",\n            \"messageId\": \"43:22\",\n            \"date\": \"2023-02-16T11:38:09.395+01:00\"\n        },\n        {\n            \"senderNumber\": \"9368207022\",\n            \"contactNumber\": \"916666666666\",\n            \"event\": \"soft-bounce\",\n            \"messageId\": \"43:20\",\n            \"date\": \"2023-02-16T11:38:08.139+01:00\"\n        },\n        {\n            \"senderNumber\": \"9368207022\",\n            \"contactNumber\": \"916666666666\",\n            \"event\": \"soft-bounce\",\n            \"messageId\": \"43:16\",\n            \"date\": \"2023-02-16T11:38:08.139+01:00\"\n        },\n        {\n            \"senderNumber\": \"9368207022\",\n            \"contactNumber\": \"916666666666\",\n            \"event\": \"soft-bounce\",\n            \"messageId\": \"30:2\",\n            \"date\": \"2023-01-30T13:51:31.263+01:00\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "0d21aec3-aa6f-4954-9669-c7f0a18e76db",
					"description": "WhatsApp Transactional helps you send one time messages to your customers seamlessly, such as order confirmations, status updates or password reset links. You can check out the API reference for WhatsApp Transactional atÂ [API Reference > WhatsApp.](https://developers.sendinblue.com/reference/getwhatsappcampaign)\n\n## Requirements\n\nTo create and manage your WhatsApp messages you need to have access to the Sendinblue WhatsApp platform. If you have not already activated the WhatsApp platform on your account you can go toÂ [WhatsApp Campaigns > Activating WhatsApp Campaigns.](https://developers.sendinblue.com/docs/activating-whatsapp-campaigns)\n\nSee more details in our dedicated guide [here](https://developers.sendinblue.com/docs/whatsapp-messages)."
				}
			],
			"id": "c6c2e3ef-e1f7-4df0-afcf-1537989030a7",
			"description": "Benefit from transactional sending in our different channels. Email, SMS, WhatsApp.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b86b1d4a-d15c-4eec-b00f-708f4e657330",
						"type": "text/javascript",
						"exec": [
							"setTimeout(function(){}, 3000);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2cb6eb46-7075-478b-a755-50e8d786ad6a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Marketing",
			"item": [
				{
					"name": "Email Campaigns",
					"item": [
						{
							"name": "Create an email campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19f6c5dd-81ff-447d-be9b-2cb4105e8905",
										"exec": [
											"const responseData = pm.response.json()\r",
											"pm.collectionVariables.set(\"campaign_id\", responseData.id)\r",
											"\r",
											"pm.test(\"Verify response status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify response is an object with id property\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('id');\r",
											"});\r",
											"\r",
											"pm.test(\"Validate response id against saved value\", function() {\r",
											"    var savedCampaignId = pm.collectionVariables.get(\"campaign_id\");\r",
											"    var responseBody = pm.response.json();\r",
											"    var responseId = responseBody.id;\r",
											"    \r",
											"    pm.expect(responseId).to.equal(savedCampaignId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Id is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.id).to.be.a('number');\r",
											"    pm.expect(responseData.id).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Id is unique for each response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.id).to.be.a('number');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify response time is within an acceptable range\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "043a06e9-b7a6-4710-bfec-0ddd458642ee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"olamide.oluwole0908@gmail.com\"\n  },\n  \"tag\": \"Newsletter\",\n // \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p></body> </html>\",\n  //\"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": {{template_id2}},\n // \"scheduledAt\": \"Excepteur molli\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"olamide.oluwole0908@gmail.com\",\n  \n  //\"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"veniam_8\": {},\n    \"nullac\": {},\n    \"cillum3c\": {}\n  },\n // \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n // \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  //\"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/emailCampaigns"
							},
							"response": [
								{
									"id": "d1cd9556-041b-423c-a323-b18a26ca1f91",
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": -20032777,\n  \"scheduledAt\": \"exercitation labore Excepteur irure\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_b6\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/emailCampaigns"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"id": "c95b4b3c-b487-4367-a9c4-7a9215011a82",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": -20032777,\n  \"scheduledAt\": \"exercitation labore Excepteur irure\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_b6\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/emailCampaigns"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an email campaign report",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "702d1625-e462-46bd-9ca2-0364fa7bab1a",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the sender object - name, id, email\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.sender).to.be.an('object');\r",
											"    pm.expect(responseData.sender.name).to.be.a('string');\r",
											"    pm.expect(responseData.sender.id).to.be.a('number');\r",
											"    pm.expect(responseData.sender.email).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Recipients object contains lists and exclusionLists arrays\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.recipients).to.be.an('object');\r",
											"    pm.expect(responseData.recipients.lists).to.be.an('array');\r",
											"    pm.expect(responseData.recipients.exclusionLists).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Ensure that statistics object contains globalStats and statsByDevice\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.statistics).to.exist.and.to.be.an('object');\r",
											"    pm.expect(responseData.statistics.globalStats).to.exist.and.to.be.an('object');\r",
											"    pm.expect(responseData.statistics.statsByDevice).to.exist.and.to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c22bbaf4-0e05-452d-b40e-d9f006fffa79",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{campaign_id}}",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "2a2dd237-0f1a-422c-9bea-dfdde5ad361e",
									"name": "Email campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 22,\n  \"name\": \"Weekly - 1\",\n  \"subject\": \"Week 1 - Newsletter\",\n  \"type\": \"classic\",\n  \"status\": \"draft\",\n  \"scheduledAt\": \"2017-09-22T12:30:00.000Z\",\n  \"testSent\": false,\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"sender\": {\n    \"email\": \"newsletter@mycompany.com\",\n    \"name\": \"Newsletter\",\n    \"id\": 26\n  },\n  \"replyTo\": \"replyto@domain.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"htmlContent\": \"This is my HTML Content\",\n  \"shareLink\": \"http://dhh.sendinblue.com/fhsgccc.html?t=9865448900\",\n  \"tag\": \"Newsletter\",\n  \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"recipients\": {\n    \"lists\": [\n      22\n    ],\n    \"exclusionLists\": [\n      45\n    ]\n  },\n  \"statistics\": {\n    \"globalStats\": {\n      \"uniqueClicks\": 2300,\n      \"clickers\": 2665,\n      \"complaints\": 1,\n      \"delivered\": 19765,\n      \"sent\": 19887,\n      \"softBounces\": 100,\n      \"hardBounces\": 87,\n      \"uniqueViews\": 7779,\n      \"trackableViews\": 5661,\n      \"trackableViewsRate\": 23.45,\n      \"estimatedViews\": 560,\n      \"unsubscriptions\": 2,\n      \"viewed\": 8999\n    },\n    \"campaignStats\": [\n      {\n        \"listId\": 22,\n        \"uniqueClicks\": 2300,\n        \"clickers\": 2665,\n        \"complaints\": 1,\n        \"delivered\": 19765,\n        \"sent\": 19887,\n        \"softBounces\": 100,\n        \"hardBounces\": 87,\n        \"uniqueViews\": 7779,\n        \"trackableViews\": 5661,\n        \"unsubscriptions\": 2,\n        \"viewed\": 8999,\n        \"deferred\": 30\n      }\n    ],\n    \"mirrorClick\": 120,\n    \"remaining\": 1000,\n    \"linksStats\": {\n      \"http://myUrl1.domain.com\": {\n        \"nbClick\": 80\n      },\n      \"http://myUrl2.domain.com\": {\n        \"nbClick\": 80\n      },\n      \"http://myUrl3.domain.com\": {\n        \"nbClick\": 80\n      }\n    },\n    \"statsByDomain\": {\n      \"gmail\": {\n        \"uniqueClicks\": 2300,\n        \"clickers\": 2665,\n        \"complaints\": 1,\n        \"delivered\": 19765,\n        \"sent\": 19887,\n        \"softBounces\": 100,\n        \"hardBounces\": 87,\n        \"uniqueViews\": 7779,\n        \"unsubscriptions\": 2,\n        \"viewed\": 8999,\n        \"deferred\": 30\n      }\n    },\n    \"statsByDevice\": {\n      \"desktop\": {\n        \"mac\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 2,\n          \"uniqueViews\": 1\n        }\n      },\n      \"mobile\": {\n        \"androidMobile\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 1,\n          \"uniqueViews\": 0\n        },\n        \"iPhone\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 2,\n          \"uniqueViews\": 0\n        }\n      }\n    },\n    \"statsByBrowser\": {\n      \"thunderbird\": {\n        \"clickers\": 1,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      },\n      \"safari\": {\n        \"clickers\": 1,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      },\n      \"internetExplorer\": {\n        \"clickers\": 0,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      }\n    }\n  }\n}"
								},
								{
									"id": "47cbce40-846d-4c02-9bcb-d3df3da4f257",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "193fafd3-5a6c-4581-bd69-b2d19a317fe6",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an email campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ca78fb7-8f6b-457d-9186-4c62cb6ba21f",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Verify date is present in the header\", function () {\r",
											"    pm.response.to.have.header(\"Date\");\r",
											"});\r",
											"pm.test(\"Response time is less than 300ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c182d3d3-374a-4855-8746-6ab121e080f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"olamide.oluwole0908@gmail.com\"\n  },\n  \"tag\": \"Newsletter\",\n // \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p></body> </html>\",\n  //\"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": {{template_id2}},\n // \"scheduledAt\": \"Excepteur molli\",\n  \"subject\": \"Discover the New  {{$randomCity}} Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"olamide.oluwole0908@gmail.com\",\n  \n  //\"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"veniam_8\": {},\n    \"nullac\": {},\n    \"cillum3c\": {}\n  },\n // \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n // \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  //\"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{campaign_id}}",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "236020ec-2377-4e72-ae14-7dce004b023c",
									"name": "Email campaign updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "8137d87f-0ef4-43aa-bc23-527a0ec8b6e9",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "d815f4c9-99c0-4312-a441-8b3d03d7ee98",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an email campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4769b8b5-02b6-4d47-8ccf-0003526a7017",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Verify date is present in the header\", function () {\r",
											"    pm.response.to.have.header(\"Date\");\r",
											"});\r",
											"pm.test(\"Response time is less than 300ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "12467888-f164-4c7f-a2c3-94432ecbe178",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{campaign_id}}",
											"description": "(Required) id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "d244ec70-b617-4d6e-b01f-5dd736b7e585",
									"name": "Email campaign has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "4525be72-d80f-45fb-97cd-95c1bb5563dd",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "f3391fab-9b79-440a-a83c-4e81bef9f239",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create an email campaign Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19f6c5dd-81ff-447d-be9b-2cb4105e8905",
										"exec": [
											"const responseData = pm.response.json()\r",
											"pm.collectionVariables.set(\"campaign_id\", responseData.id)\r",
											"\r",
											"\r",
											"pm.test(\"Verify response status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify response is an object with id property\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('id');\r",
											"});\r",
											"\r",
											"pm.test(\"Validate response id against saved value\", function() {\r",
											"    var savedCampaignId = pm.collectionVariables.get(\"campaign_id\");\r",
											"    var responseBody = pm.response.json();\r",
											"    var responseId = responseBody.id;\r",
											"    \r",
											"    pm.expect(responseId).to.equal(savedCampaignId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Id is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.id).to.be.a('number');\r",
											"    pm.expect(responseData.id).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Id is unique for each response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.id).to.be.a('number');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify response time is within an acceptable range\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "30829573-b35c-40ce-bded-86e16a28d49e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"olamide.oluwole0908@gmail.com\"\n  },\n  \"tag\": \"Newsletter\",\n // \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p></body> </html>\",\n  //\"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": {{template_id2}},\n // \"scheduledAt\": \"Excepteur molli\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"olamide.oluwole0908@gmail.com\",\n  \n  //\"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"veniam_8\": {},\n    \"nullac\": {},\n    \"cillum3c\": {}\n  },\n // \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n // \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  //\"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/emailCampaigns"
							},
							"response": [
								{
									"id": "5b0b8827-b0e4-4497-9f2a-0b0a59a3ef16",
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": -20032777,\n  \"scheduledAt\": \"exercitation labore Excepteur irure\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_b6\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/emailCampaigns"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"id": "5f488667-a2b7-4d46-93ea-228dc551deed",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": -20032777,\n  \"scheduledAt\": \"exercitation labore Excepteur irure\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_b6\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/emailCampaigns"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an email campaign immediately, based on campaignId",
							"id": "fc4465fa-857d-410e-b616-b5bed94a2a74",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sendNow"
									],
									"variable": [
										{
											"id": "b652b500-0bab-4e27-90c7-a2c02330cc3a",
											"key": "campaignId",
											"value": "133",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "15942a74-a59e-42d5-8fc4-a0679a5554cd",
									"name": "Email campaign has been scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "33761e24-8441-485c-90e5-7ce715e28717",
									"name": "Campaign could not be sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "913cb67a-0618-4cd3-b876-9f6d72802d32",
									"name": "You don't have enough credit to send your campaign. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "390323d3-36a4-4f92-a9a0-8337c7586c25",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an email campaign to your test list",
							"id": "c268f9f4-d64b-436c-950f-77f87983f437",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger2@example.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sendTest"
									],
									"variable": [
										{
											"id": "3469d032-73b5-416e-917e-696deda85c4a",
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "e20ac1c0-003f-41d3-8090-73cf6569c01c",
									"name": "Test email has been sent successfully to all recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "fce1e734-e50d-417e-b83c-db58fa25b1a9",
									"name": "Test email could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"75BfS6kLq8tM@SJimzZAEpYHRyLStQjY.gxs\",\n    \"5raZtMVhzx@gMjdaabGzAjkYrK.fnco\"\n  ],\n  \"withoutListEmails\": [\n    \"3j0Dt@VghDwawjVvNTjFVmRKWJ.agyu\",\n    \"UaS0Xey-oMdkd@vZKiBhSUbOueTWIJZpFdJmnF.ug\"\n  ],\n  \"blackListedEmails\": [\n    \"jooW@GLWhkVFSczNd.qgrn\",\n    \"K0YvNXk7f@tETerPDdjJVYYwNPbKs.pur\"\n  ]\n}"
								},
								{
									"id": "addc321d-92dd-49f5-a555-2d96058976d5",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"XUvXs2MUkZy@eNdDZoaehFi.etn\",\n    \"HnrmUyMYn@sfTjWkSBpk.hm\"\n  ],\n  \"withoutListEmails\": [\n    \"qSPfAA-ZR9R@CdCUpePDRUIlyeX.js\",\n    \"hoJRuR3l@MHrCixtPTEHuYek.hs\"\n  ],\n  \"blackListedEmails\": [\n    \"wjSlx1vUDTsWt5@SzwzihE.ot\",\n    \"LO4E3a@ycxq.ri\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Update an email campaign status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb51787c-4286-45cb-9bb0-cb44774365db",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f32a1ce3-9dfb-4e7e-a0f3-a5b8f8880819",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"status"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{campaign_id}}",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "ce135df7-4eef-4f5c-a965-68b480eaada4",
									"name": "The campaign status has been updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "26513028-788c-44cf-932d-c9d625f21c7e",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "819abf08-f483-4407-bd57-80f6265459e6",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send the report of a campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d86420d-6309-42c3-8c46-0821dac52ef7",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body is an empty object\", function () {\r",
											"    pm.expect(pm.response.json()).to.eql({});\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify that the response does not contain any sensitive information\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData).to.not.have.any.keys('password', 'creditCardNumber', 'ssn', 'personalInfo');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Request duration is within an acceptable range\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"No errors or warnings in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.not.have.property(\"errors\");\r",
											"    pm.expect(responseData).to.not.have.property(\"warnings\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "69c1abf2-a1b2-4907-8fef-f815ad069323",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sendReport"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{campaign_id}}",
											"description": "(Required) Id of the campaign"
										}
									]
								},
								"description": "A PDF will be sent to the specified email addresses"
							},
							"response": [
								{
									"id": "f5c1485a-882b-404a-958e-1e8b1aef9e7c",
									"name": "Report has been successfully sent to the defined recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "b3463985-2586-4184-aba2-a261810b3f47",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "8486cab6-3148-4122-b436-f742bcb04ddc",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an A/B test email campaign results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdf4b1a1-e184-4f16-96d2-6434d907ebb2",
										"exec": [
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fb013b9b-e91d-4519-8b96-550b0d74402a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"abTestCampaignResult"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{campaign_id}}",
											"description": "(Required) Id of the A/B test campaign"
										}
									]
								},
								"description": "Obtain winning version of an A/B test email campaign"
							},
							"response": [
								{
									"id": "6d3ea57b-1b9e-4934-9b65-3ca490fc4b1e",
									"name": "A/B test email campaign Result",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"winningVersion\": \"B\",\n  \"winningCriteria\": \"Click\",\n  \"openRate\": \"100%\",\n  \"clickRate\": \"50%\",\n  \"winningVersionRate\": \"0%\",\n  \"statistics\": {\n    \"openers\": {\n      \"Version A\": \"20%\",\n      \"Version B\": \"100%\"\n    },\n    \"clicks\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"50%\"\n    },\n    \"unsubscribed\": {\n      \"Version A\": \"20%\",\n      \"Version B\": \"0%\"\n    },\n    \"softBounces\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    },\n    \"hardBounces\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    },\n    \"complaints\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    }\n  },\n  \"clickedLinks\": {\n    \"Version A\": [\n      {\n        \"link\": \"https://google.com\",\n        \"clicksCount\": 0,\n        \"clickRate\": \"0%\"\n      },\n      {\n        \"link\": \"https://youtube.com\",\n        \"clicksCount\": 0,\n        \"clickRate\": \"0%\"\n      }\n    ],\n    \"Version B\": [\n      {\n        \"link\": \"http://www.github.com\",\n        \"clicksCount\": 2,\n        \"clickRate\": \"40%\"\n      },\n      {\n        \"link\": \"http://www.stackoverflow.com\",\n        \"clicksCount\": 3,\n        \"clickRate\": \"60%\"\n      }\n    ]\n  }\n}"
								},
								{
									"id": "1d14f94f-6240-4c63-b24f-5659d4d88a70",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "b9a4c3eb-83d8-4606-be63-8bfe929caae8",
									"name": "A/B test Email Campaign not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a shared template url",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff073e4a-ab54-494d-a85d-7802ed412069",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required field 'sharedUrl'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.sharedUrl).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Shared URL is in valid URL format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.sharedUrl).to.match(/^https?:\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&:/~+#-]*[\\w@?^=%&/~+#-])?$/);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Shared URL should not be empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.sharedUrl).to.exist.and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Shared URL is a unique and valid URL\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.sharedUrl).to.be.a('string');\r",
											"    pm.expect(responseData.sharedUrl).to.match(/^https:\\/\\/my.sendinblue.com\\/[a-zA-Z0-9_-]+$/);\r",
											"});\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"  var response = pm.response.json();\r",
											"  var schema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"      sharedUrl: {\r",
											"        type: \"string\"\r",
											"      }\r",
											"    },\r",
											"    required: [\"sharedUrl\"],\r",
											"  };\r",
											"  pm.expect(tv4.validate(response, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f00b48bf-cc4d-4696-8cca-4c8d5689aaa8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sharedUrl"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{campaign_id}}",
											"description": "(Required) Id of the campaign or template"
										}
									]
								},
								"description": "Get a unique URL to share & import an email template from one Sendinblue account to another."
							},
							"response": [
								{
									"id": "a83258ed-09b8-4e8f-ad0b-a648af000f8e",
									"name": "Shared template URL information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"sharedUrl\": \"https://my.sendinblue.com/pt2YU7R5W_guXlowgumy_VX4pFsKu._zd0Gjj96x1_GMmzc1Qps5ZIpj6nx-\"\n}"
								},
								{
									"id": "f88c708f-1b36-4dbc-9010-3fbe72c3aa88",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "901c401e-3b23-4e14-86c8-5c3c7eab9339",
									"name": "Campaign/Template ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "cb87eeaf-eea9-44d3-ace8-7a2d9299861b",
									"name": "Only email campaigns or templates are allowed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export the recipients of an email campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6a41c9e1-303b-4946-9183-31d20e5009fa",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "99b0638a-aca9-434a-8afc-2a57e11a8a8a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"exportRecipients"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{campaign_id}}",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "170de9fa-27f5-48af-a74a-34834b327962",
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"id": "37bae80d-f74b-4dbd-8d25-6dfdbbaf01a0",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "c8dd416c-b45a-4299-a13a-8f26e67245e1",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Return all your created email campaigns",
							"id": "55d41387-8691-44c5-9c09-a8f449c200d9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns?type=&status=&startDate=&endDate=&limit=50&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns"
									],
									"query": [
										{
											"key": "type",
											"value": "",
											"description": "Filter on the type of the campaigns"
										},
										{
											"key": "status",
											"value": "",
											"description": "Filter on the status of the campaign"
										},
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used**. Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent email campaigns.\n**Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n"
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used**. Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent email campaigns.\n**Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "175b5204-2de4-4240-8357-7cfa7b354996",
									"name": "Email campaigns informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns?type=classic&status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											],
											"query": [
												{
													"key": "type",
													"value": "classic"
												},
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"count\": 2,\n  \"campaigns\": [\n    {\n      \"id\": 12,\n      \"name\": \"EN - Sales Summer 2017\",\n      \"subject\": \"20% OFF for 2017 Summer Sales\",\n      \"type\": \"classic\",\n      \"status\": \"sent\",\n      \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n      \"testSent\": true,\n      \"header\": \"[DEFAULT_HEADER]\",\n      \"footer\": \"[DEFAULT_FOOTER]\",\n      \"sender\": {\n        \"email\": \"marketing@mycompany.com\",\n        \"name\": \"Marketing\",\n        \"id\": 26\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"{FNAME} {LNAME}\",\n      \"htmlContent\": \"This is my HTML Content\",\n      \"shareLink\": \"http://example.com/fhsgccc.html?t=9865448900\",\n      \"tag\": \"Newsletter\",\n      \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"inlineImageActivation\": true,\n      \"mirrorActive\": true,\n      \"recurring\": false,\n      \"recipients\": {\n        \"lists\": [\n          5\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"globalStats\": {\n          \"uniqueClicks\": 2300,\n          \"clickers\": 2665,\n          \"complaints\": 1,\n          \"delivered\": 19765,\n          \"sent\": 19887,\n          \"softBounces\": 100,\n          \"hardBounces\": 87,\n          \"uniqueViews\": 7779,\n          \"trackableViews\": 5661,\n          \"trackableViewsRate\": 23.45,\n          \"estimatedViews\": 560,\n          \"unsubscriptions\": 2,\n          \"viewed\": 8999\n        },\n        \"campaignStats\": [\n          {\n            \"listId\": 5,\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"trackableViews\": 5661,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        ],\n        \"mirrorClick\": 120,\n        \"remaining\": 1000,\n        \"linksStats\": {\n          \"http://myUrl1.domain.com\": 80\n        },\n        \"statsByDomain\": {\n          \"yahoo.com\": {\n            \"uniqueClicks\": 298,\n            \"clickers\": 533,\n            \"complaints\": 0,\n            \"sent\": 25601,\n            \"softBounces\": 5,\n            \"hardBounces\": 0,\n            \"uniqueViews\": 3527,\n            \"unsubscriptions\": 17,\n            \"viewed\": 5255,\n            \"delivered\": 25596\n          },\n          \"hotmail.co.uk\": {\n            \"uniqueClicks\": 1970,\n            \"clickers\": 2720,\n            \"complaints\": 5,\n            \"sent\": 117055,\n            \"softBounces\": 111,\n            \"hardBounces\": 0,\n            \"uniqueViews\": 21111,\n            \"unsubscriptions\": 105,\n            \"viewed\": 35251,\n            \"delivered\": 117056\n          }\n        }\n      }\n    },\n    {\n      \"id\": 22,\n      \"name\": \"Weekly - 1\",\n      \"subject\": \"Week 1 - Newsletter\",\n      \"type\": \"Classic\",\n      \"status\": \"draft\",\n      \"scheduledAt\": \"\",\n      \"testSent\": false,\n      \"header\": \"[DEFAULT_HEADER]\",\n      \"footer\": \"[DEFAULT_FOOTER]\",\n      \"sender\": {\n        \"email\": \"newsletter@mycompany.com\",\n        \"name\": \"Newsletter\",\n        \"id\": 26\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"{FNAME} {LNAME}\",\n      \"htmlContent\": \"This is my HTML Content\",\n      \"shareLink\": \"http://example.com/fhsgccc.html?t=9865448900\",\n      \"tag\": \"Newsletter\",\n      \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"inlineImageActivation\": true,\n      \"mirrorActive\": true,\n      \"recurring\": false,\n      \"recipients\": {\n        \"lists\": [\n          10\n        ],\n        \"exclusionLists\": [\n          45\n        ]\n      },\n      \"statistics\": {\n        \"globalStats\": {\n          \"uniqueClicks\": 2300,\n          \"clickers\": 2665,\n          \"complaints\": 1,\n          \"delivered\": 19765,\n          \"sent\": 19887,\n          \"softBounces\": 100,\n          \"hardBounces\": 87,\n          \"uniqueViews\": 7779,\n          \"trackableViews\": 5661,\n          \"trackableViewsRate\": 23.45,\n          \"estimatedViews\": 560,\n          \"unsubscriptions\": 2,\n          \"viewed\": 8999\n        },\n        \"campaignStats\": [\n          {\n            \"listId\": 10,\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"trackableViews\": 5661,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        ],\n        \"mirrorClick\": 120,\n        \"remaining\": 1000,\n        \"linksStats\": {\n          \"http://myUrl1.domain.com\": {\n            \"nbClick\": 80\n          },\n          \"http://myUrl2.domain.com\": {\n            \"nbClick\": 80\n          },\n          \"http://myUrl3.domain.com\": {\n            \"nbClick\": 80\n          }\n        },\n        \"statsByDomain\": {\n          \"gmail\": {\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          },\n          \"aol\": {\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        }\n      }\n    }\n  ]\n}"
								},
								{
									"id": "0c39ae34-c857-4e29-9265-88e3fa04b35c",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns?type=classic&status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											],
											"query": [
												{
													"key": "type",
													"value": "classic"
												},
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Upload an image to your account's image gallery",
							"id": "fc35b923-aedd-476b-b1a9-64c27709b1ca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/emailCampaigns/images"
							},
							"response": [
								{
									"id": "4e23fb7a-1b1f-4735-8a18-89b77138697c",
									"name": "Image has been successfully uploaded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/emailCampaigns/images"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"url\": \"https://img.mailinblue.com/100000/images/rnb/original/62casdase8wewq9df1c2f27c.jpeg\"\n}"
								},
								{
									"id": "e38ac9e3-527e-4760-a517-e93d91357df1",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/emailCampaigns/images"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "216def61-db13-45e7-a9df-70c8ac259c6a"
				},
				{
					"name": "SMS Campaigns",
					"item": [
						{
							"name": "Returns the information for all your created SMS campaigns",
							"id": "ff4f5e6b-49c6-4089-ac41-3defc4fa2e22",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns?status=archive&startDate=&endDate=&limit=500&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns"
									],
									"query": [
										{
											"key": "status",
											"value": "archive",
											"description": "Status of campaign."
										},
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent sms campaigns. **Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n"
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent sms campaigns. **Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n"
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Number limitation for the result returned"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from."
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "698dcfc8-2860-4739-a4fe-a55641d9e26c",
									"name": "SMS campaigns informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns?status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=500&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											],
											"query": [
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"campaigns\": [\n    {\n      \"id\": 2,\n      \"name\": \"PROMO CODE\",\n      \"status\": \"sent\",\n      \"content\": \"Visit our Store and get some discount !\",\n      \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n      \"testSent\": true,\n      \"sender\": \"MyCompany\",\n      \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"sentDate\": \"2017-06-01T12:30:00.000Z\",\n      \"recipients\": {\n        \"lists\": [\n          21\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"delivered\": 2987,\n        \"sent\": 3000,\n        \"processing\": 0,\n        \"softBounces\": 3,\n        \"hardBounces\": 1,\n        \"unsubscriptions\": 3,\n        \"answered\": 2\n      }\n    },\n    {\n      \"id\": 10,\n      \"name\": \"SUMMER SALE\",\n      \"status\": \"draft\",\n      \"content\": \"Summer Sale is starting tomorrow. Get extra 10% with this code:SUM17\",\n      \"scheduledAt\": \"2017-08-04T12:30:00.000Z\",\n      \"testSent\": false,\n      \"sender\": \"MyCompany\",\n      \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"sentDate\": \"2017-06-01T12:30:00.000Z\",\n      \"recipients\": {\n        \"lists\": [\n          21\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"delivered\": 2987,\n        \"sent\": 3000,\n        \"processing\": 0,\n        \"softBounces\": 3,\n        \"hardBounces\": 1,\n        \"unsubscriptions\": 3,\n        \"answered\": 2\n      }\n    }\n  ],\n  \"count\": 12\n}"
								},
								{
									"id": "4197f75a-c710-4a3e-bf0d-f5fc05f98dc6",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns?status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=500&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											],
											"query": [
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Creates an SMS campaign",
							"id": "e23bdd27-55fc-417b-9d5a-372ebe46feaa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"YYYY-MM-DDTHH:mm:ss.SSSZ\",\n  \"unicodeEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/smsCampaigns"
							},
							"response": [
								{
									"id": "04161824-9475-4113-bd6e-06120838856e",
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"laborum ex\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smsCampaigns"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"id": "e4e43612-1fce-4dd1-8586-128ad1241683",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"laborum ex\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/smsCampaigns"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an SMS campaign",
							"id": "ed0dbc50-93a1-4c31-8075-4d37ca52e7df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"id": "f55e1640-28fe-4196-a30e-dae234e897d8",
											"key": "campaignId",
											"value": "133",
											"description": "(Required) id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "879f95be-cbad-4fca-9a6f-6d67cd1fb2a0",
									"name": "SMS campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 2,\n  \"name\": \"PROMO CODE\",\n  \"status\": \"sent\",\n  \"content\": \"Visit our Store and get some discount !\",\n  \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n  \"testSent\": true,\n  \"sender\": \"MyCompany\",\n  \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n  \"recipients\": {\n    \"lists\": [\n      21\n    ],\n    \"exclusionLists\": [\n      13\n    ]\n  },\n  \"statistics\": {\n    \"delivered\": 2987,\n    \"sent\": 3000,\n    \"processing\": 0,\n    \"softBounces\": 3,\n    \"hardBounces\": 1,\n    \"unsubscriptions\": 3,\n    \"answered\": 2\n  }\n}"
								},
								{
									"id": "d3535224-37ad-4473-a33e-b75e2e13c9de",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "f740ec7a-b439-4ecc-b352-c34af0497c53",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an SMS campaign",
							"id": "fc663772-2e54-45e9-8ed7-7e174264ea30",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"irure deserunt mollit dolore\",\n  \"unicodeEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"id": "cd63c58e-08c3-48ca-bfd7-fd685ebce996",
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "6785d77e-df43-4c9e-806c-9197c40d42d6",
									"name": "SMS campaign updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "757e8da6-f0e2-4061-adb3-54d85fdd4f2b",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "7dcfc384-b72d-4d47-bf83-83074b144205",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an SMS campaign",
							"id": "13b00b7b-ba30-41f5-a7c6-6851a63f0cd0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"id": "8272d075-f11f-4d72-bdc9-cbdca7314727",
											"key": "campaignId",
											"value": "133",
											"description": "(Required) id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "dd5c44cd-6854-471b-a4a0-2c7f092ceb8f",
									"name": "SMS campaign has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "6958d527-4f4d-4ab2-bfb9-f5c4a06636da",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "8a24e4a7-d004-4e66-bfc7-888e5b12f41a",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send your SMS campaign immediately",
							"id": "7f285c5e-f9ba-44a7-9c50-3b37d73f481d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendNow"
									],
									"variable": [
										{
											"id": "66555441-101c-438f-b43c-e8b6d5461a92",
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "0d593408-e8f3-4970-9c76-8ced40d99a61",
									"name": "SMS campaign has been scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "7ae32190-fdf2-4e36-bb97-7821dc3a5dfb",
									"name": "SMS Campaign could not be sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "da9e8f72-71a7-43b2-8952-6d0b6c61540c",
									"name": "You don't have enough credit to send your campaign. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "6647c227-927a-4b5d-82b0-d360a0e62952",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a campaign's status",
							"id": "afda2388-ea30-427b-acde-110799c6730e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"suspended\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"status"
									],
									"variable": [
										{
											"id": "1ccfa275-59de-4a9e-95d6-f04d08ae990f",
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "a19f1361-4c6d-4c1e-9b64-4a0aa09a2826",
									"name": "The campaign status has been updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "20a33e6c-909f-41da-8abe-df94e8796a86",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "ace03a0d-b5d8-4b75-83ae-d157b675774f",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send a test SMS campaign",
							"id": "c6bdc086-a2fa-46b6-8943-395fced5e8d2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendTest"
									],
									"variable": [
										{
											"id": "12b1a7fc-915d-434a-ba4e-5c605c64d18a",
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) Id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"id": "d138e80b-bfc5-4462-a530-f61ea0321ca9",
									"name": "Test SMS has been sent successfully to the recipient",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "364553f1-8f09-4869-9125-2c4e5286d8a5",
									"name": "Test SMS could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The SMS could not be sent to all recipients\",\n  \"unexistingSms\": [\n    \"uONf@iAiaZmhYWwGaKp.rtix\",\n    \"FYIHDS@aUQgXmyvqTgUDBWeTXsc.dh\"\n  ],\n  \"withoutListSms\": [\n    \"qRZAMI0KoD5@mIhThccLqX.qjn\",\n    \"CrFkHJl6Pz9bj@CkukdVNyAwyMdcvHBYDZ.vwf\"\n  ]\n}"
								},
								{
									"id": "3f529022-70e9-448e-b91d-2ce67325cc47",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export an SMS campaign's recipients",
							"id": "143ffcee-bfad-46e4-82a4-abfb6bd3c306",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"exportRecipients"
									],
									"variable": [
										{
											"id": "3c9c5921-0421-4a7d-b158-3d9c5123e7b0",
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign"
										}
									]
								},
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input."
							},
							"response": [
								{
									"id": "59d70592-e6d2-4640-985f-228e62bc4d0a",
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"id": "c0cdc5b5-d27b-49da-b76a-2a9111afddd2",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "1853baa6-9669-4e70-9924-924f1cb11a78",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an SMS campaign's report",
							"id": "66f1244d-708e-4bfb-acf1-6605d3103849",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendReport"
									],
									"variable": [
										{
											"id": "3c6fa13d-ce24-4027-9d7a-1c2098d01650",
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign"
										}
									]
								},
								"description": "Send report of Sent and Archived campaign, to the specified email addresses, with respective data and a pdf attachment in detail."
							},
							"response": [
								{
									"id": "13cc3758-9578-4134-8640-7553bc33fd0c",
									"name": "Report has been successfully sent to the defined recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "51db4dc5-5266-4250-b6d3-e7d1937230fb",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "d4bccfe5-3046-47ab-aede-5bd08abdb8d3",
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "8d034b04-c184-426b-ae8e-5403a23de755"
				},
				{
					"name": "WhatsApp Campaigns",
					"item": [
						{
							"name": "Get a WhatsApp campaign",
							"id": "dde7d934-08cb-4817-ae96-5acbdac36bb2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/whatsappCampaigns/?campaignId=12",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whatsappCampaigns",
										""
									],
									"query": [
										{
											"key": "campaignId",
											"value": "12",
											"description": "Pass the identifier of the campaign to be retrieved. \n",
											"type": "text"
										}
									]
								}
							},
							"response": [
								{
									"id": "dbe5013d-40ab-4a29-b5dc-7fcf695d4e80",
									"name": "Get a Whatsapp campaign",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/whatsappCampaigns/?campaignId=12",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"whatsappCampaigns",
												""
											],
											"query": [
												{
													"key": "campaignId",
													"value": "12",
													"description": "Pass the identifier of the campaign to be retrieved. \n"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"id\": 1672035851100690,\n    \"campaignName\": \"Test Whatsapp Campaign\",\n    \"campaignStatus\": \"sent\",\n    \"scheduledAt\": \"2022-12-26T09:50:00.000Z\",\n    \"senderNumber\": 9368207029,\n    \"recipients\": {\n        \"type\": \"list\",\n        \"includedLists\": [\n            22\n        ],\n        \"excludedLists\": [\n            45\n        ]\n    },\n    \"template\": {\n        \"name\": \"official_campaign8\",\n        \"category\": \"MARKETING\",\n        \"language\": \"en\",\n        \"contains_button\": true,\n        \"display_header\": false,\n        \"components\": [\n            {\n                \"type\": \"BODY\",\n                \"text\": \"making it look like readable English.\"\n            },\n            {\n                \"type\": \"BUTTONS\",\n                \"buttons\": [\n                    {\n                        \"type\": \"URL\",\n                        \"text\": \"vLorem Ipsum is simply du\",\n                        \"url\": \"app.sendinblue\"\n                    },\n                    {\n                        \"type\": \"PHONE_NUMBER\",\n                        \"text\": \"Lorem Ipsum is simply dum\",\n                        \"phone_number\": \"+918800613137\"\n                    }\n                ]\n            }\n        ],\n        \"header_variables\": [\n            {\n                \"name\": \"FIRSTNAME\",\n                \"default\": \"INVALID HEADER\",\n                \"index\": 1,\n                \"datatype\": \"text\"\n            }\n        ],\n        \"header_type\": \"text\",\n        \"body_variable\": [],\n        \"button_type\": \"CALL_TO_ACTION\",\n        \"header_footer\": true\n    },\n    \"stats\": {\n        \"sent\": \"3,\",\n        \"delivered\": \"3,\",\n        \"read\": \"2,\",\n        \"unsubscribe\": \"0,\",\n        \"not_sent\": 4\n    },\n    \"createdAt\": \"2022-12-26T06:50:00.000Z\",\n    \"modifiedAt\": \"2022-12-26T08:50:00.000Z\"\n}"
								}
							]
						},
						{
							"name": "Delete a WhatsApp campaign",
							"id": "bcc2c5a7-9598-4855-ab86-2b2f6c3dc7cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/whatsappCampaigns/?campaignId=12",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whatsappCampaigns",
										""
									],
									"query": [
										{
											"key": "campaignId",
											"value": "12"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Return all your created WhatsApp campaigns",
							"id": "9bc2ac7c-61c9-46c8-b5e1-982c7ebd4201",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/whatsappCampaigns?startDate=&endDate=&limit=&offset=&sort=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whatsappCampaigns"
									],
									"query": [
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used**. Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the campaigns created.\n**Prefer to pass your timezone in date-time format for accurate result**\n"
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used**. Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the campaigns created.\n**Prefer to pass your timezone in date-time format for accurate result**\n"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "",
											"description": "Index of the first document in the page"
										},
										{
											"key": "sort",
											"value": "",
											"description": "Sort the results in the ascending/descending order of record modification. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "3b974015-2d26-463d-bd71-eada43b86856",
									"name": "WhatsApp campaigns informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/whatsappCampaigns?startDate=<string>&endDate=<string>&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"whatsappCampaigns"
											],
											"query": [
												{
													"key": "startDate",
													"value": "<string>"
												},
												{
													"key": "endDate",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"campaigns\": [\n    {\n      \"id\": \"<long>\",\n      \"campaignName\": \"<string>\",\n      \"campaignStatus\": \"<string>\",\n      \"templateId\": \"<string>\",\n      \"scheduledAt\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"modifiedAt\": \"<string>\",\n      \"errorReason\": \"<string>\",\n      \"invalidatedContacts\": \"<long>\",\n      \"readPercentage\": \"<float>\",\n      \"stats\": {\n        \"sent\": \"<integer>\",\n        \"delivered\": \"<integer>\",\n        \"read\": \"<integer>\",\n        \"unsubscribe\": \"<integer>\",\n        \"notSent\": \"<integer>\"\n      }\n    },\n    {\n      \"id\": \"<long>\",\n      \"campaignName\": \"<string>\",\n      \"campaignStatus\": \"<string>\",\n      \"templateId\": \"<string>\",\n      \"scheduledAt\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"modifiedAt\": \"<string>\",\n      \"errorReason\": \"<string>\",\n      \"invalidatedContacts\": \"<long>\",\n      \"readPercentage\": \"<float>\",\n      \"stats\": {\n        \"sent\": \"<integer>\",\n        \"delivered\": \"<integer>\",\n        \"read\": \"<integer>\",\n        \"unsubscribe\": \"<integer>\",\n        \"notSent\": \"<integer>\"\n      }\n    }\n  ],\n  \"count\": \"<long>\"\n}"
								},
								{
									"id": "622b4204-a6d7-46dc-a470-0d38100d7e66",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/whatsappCampaigns?startDate=<string>&endDate=<string>&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"whatsappCampaigns"
											],
											"query": [
												{
													"key": "startDate",
													"value": "<string>"
												},
												{
													"key": "endDate",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Return all your created WhatsApp templates",
							"id": "afa8a14f-4a25-49bf-957f-82fe989a7979",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/whatsappCampaigns/template-list?startDate=&endDate=&limit=&offset=&sort=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whatsappCampaigns",
										"template-list"
									],
									"query": [
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used**. Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the templates created.\n**Prefer to pass your timezone in date-time format for accurate result**\n"
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used**. Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the templates created.\n**Prefer to pass your timezone in date-time format for accurate result**\n"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "",
											"description": "Index of the first document in the page"
										},
										{
											"key": "sort",
											"value": "",
											"description": "Sort the results in the ascending/descending order of record modification. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "531f9687-513b-48f1-a827-1c2d083f7e49",
									"name": "WhatsApp templates informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/whatsappCampaigns/template-list?startDate=<string>&endDate=<string>&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"whatsappCampaigns",
												"template-list"
											],
											"query": [
												{
													"key": "startDate",
													"value": "<string>"
												},
												{
													"key": "endDate",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"templates\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"status\": \"<string>\",\n      \"category\": \"<string>\",\n      \"language\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"modifiedAt\": \"<string>\",\n      \"errorReason\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"status\": \"<string>\",\n      \"category\": \"<string>\",\n      \"language\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"modifiedAt\": \"<string>\",\n      \"errorReason\": \"<string>\"\n    }\n  ],\n  \"count\": \"<long>\"\n}"
								},
								{
									"id": "3373fd7a-1137-44f6-82eb-7c0a70431994",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/whatsappCampaigns/template-list?startDate=<string>&endDate=<string>&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"whatsappCampaigns",
												"template-list"
											],
											"query": [
												{
													"key": "startDate",
													"value": "<string>"
												},
												{
													"key": "endDate",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a WhatsApp campaign",
							"id": "ed25d93e-89c5-4f7c-875f-9044e7a29af9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/whatsappCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whatsappCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"id": "147106e4-406d-42d5-bbf1-51b94963c845",
											"key": "campaignId",
											"value": null,
											"description": "id of the campaign to be updated"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create and send a WhatsApp campaign",
							"id": "0ae76fb4-70b5-46eb-940d-99796baf6d5f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": "{{baseUrl}}/whatsappCampaigns"
							},
							"response": []
						},
						{
							"name": "Create a WhatsApp template",
							"id": "55bb163c-e2a9-4737-92ed-44be51633085",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/whatsappCampaigns/template"
							},
							"response": []
						},
						{
							"name": "Send your WhatsApp template for approval",
							"id": "01b32975-581c-4161-b6cc-b9d15ddf2420",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/whatsappCampaigns/template/approval/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whatsappCampaigns",
										"template",
										"approval",
										":templateId"
									],
									"variable": [
										{
											"id": "38987e11-c08f-447e-b80f-895f0633639f",
											"key": "templateId",
											"value": null,
											"description": "Id of the WhatsApp template"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get your WhatsApp API account information",
							"id": "d8e224df-7b76-4d4a-aa11-56aaeb6861bd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/whatsappCampaigns/config"
							},
							"response": []
						}
					],
					"id": "7b1fc663-e66b-4245-ade9-bf8c2b14281b",
					"description": "Here you will find an overview of the WhatsApp Campaigns API. Currently, the actions available are fetching details of your WhatsApp campaigns or you can delete a WhatsApp campaign through the endpoints. You can check the endpoints on the Sendinblue API reference site atÂ [API Reference > WhatsApp campaigns.](https://developers.sendinblue.com/reference/getwhatsappcampaign)\n\n## Requirements\n\nTo create and manage your Whatsapp campaigns you need to have access to the WhatsApp Campaigns app. If you have not already activated the WhatsApp platform on your account you can go toÂ [Whatsapp Campaigns > Activating WhatsApp Campaigns.](https://developers.sendinblue.com/docs/activating-whatsapp-campaigns)\n\nYou can learn more in this [dedicated guide.](https://developers.sendinblue.com/docs/whatsapp-campaigns-1)"
				}
			],
			"id": "55e951de-e6a4-443b-abd8-de13f2e8be58",
			"description": "Manage , schedule and trigger your email, SMS and WhatsApp campaigns. Within this collection you can also fetch statistics for all your marketing operations."
		},
		{
			"name": "Contact management",
			"item": [
				{
					"name": "Contacts",
					"item": [
						{
							"name": "Get all the contacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03a8ebaf-5ed6-4c55-8c26-ec5c74eec622",
										"exec": [
											"const responseData = pm.response.json()\r",
											"pm.collectionVariables.set(\"othercontactemail1\", responseData.contacts[0].email)\r",
											"\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Contacts array is present and contains at least one element\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.contacts).to.be.an('array').and.to.have.lengthOf.at.least(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Each contact has a valid email format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.contacts).to.be.an('array').that.is.not.empty;\r",
											"\r",
											"    responseData.contacts.forEach(function(contact) {\r",
											"        pm.expect(contact.email).to.be.a('string').and.to.match(/^.+@.+\\..+$/);\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Count matches the number of elements in the contacts array\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  pm.expect(responseData.count).to.equal(responseData.contacts.length);\r",
											"});\r",
											"\r",
											"// Test for response content type\r",
											"pm.test(\"Response has a valid content type\", function () {\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0c50d3fa-223e-48d3-9038-01cacbecddb1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts?limit=50&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "modifiedSince",
											"value": "YYYY-MM-DDTHH:mm:ss.SSSZ",
											"description": "Filter (urlencoded) the contacts modified after a given UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "780e99ad-f551-4641-8e30-17df8eb6319c",
									"name": "All contacts listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts?limit=50&offset=0&modifiedSince=2022-02-01T00:00:00.000&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "modifiedSince",
													"value": "2022-02-01T00:00:00.000"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"contacts\": [\n    {\n      \"email\": \"contact1@example.com\",\n      \"id\": 247,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": true,\n      \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n      \"modifiedAt\": \"2017-05-01T17:05:03.000Z\",\n      \"listIds\": [\n        43,\n        58\n      ],\n      \"attributes\": {\n        \"SMS\": \"33058407250\",\n        \"IDENTIFICATION\": \"1-3RHQ-259\",\n        \"CIV\": \"MS\",\n        \"LAST_NAME\": \"Brennon\",\n        \"FIRST_NAME\": \"Meg\",\n        \"DOB\": \"1986-05-02T00:00:00.000Z\",\n        \"ADDRESS\": \"1 5th avenue\",\n        \"ZIP_CODE\": \"44300\",\n        \"CITY\": \"New-York\",\n        \"ACTION_CODE\": \"17HH98CH\"\n      }\n    },\n    {\n      \"email\": \"33058407248@mailin-sms.com\",\n      \"id\": 245,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n      \"modifiedAt\": \"2017-05-01T17:05:03.000Z\",\n      \"listIds\": [\n        43,\n        61,\n        58\n      ],\n      \"attributes\": {\n        \"SMS\": \"33058407248\",\n        \"IDENTIFICATION\": \"1-78JS-432\",\n        \"CIV\": \"MS\",\n        \"LAST_NAME\": \"Press\",\n        \"FIRST_NAME\": \"Sophia\",\n        \"DOB\": \"1980-09-11T00:00:00.000Z\",\n        \"ADDRESS\": \"5 Flower Street\",\n        \"ZIP_CODE\": \"44119\",\n        \"CITY\": \"Seattle\",\n        \"ACTION_CODE\": \"17HU765\"\n      }\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"id": "abe42333-2843-4051-93fb-751243b6de8f",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts?limit=50&offset=0&modifiedSince=2022-02-01T00:00:00.000&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "modifiedSince",
													"value": "2022-02-01T00:00:00.000"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a contact",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aaaee902-af46-4a70-839c-88236672f4a2",
										"exec": [
											"//const emailprefix = \"ebere+\"\r",
											"//pm.collectionVariables.set(\"emailprefix\", emailprefix)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ad7b4928-8485-4cbd-aaf6-fb706edccd3c",
										"exec": [
											"if(pm.response.code == 201){\r",
											"    const requestBody = JSON.parse(pm.request.body.raw)\r",
											"    pm.collectionVariables.set(\"contactemail\", requestBody.email.toLowerCase())\r",
											"}\r",
											"\r",
											"pm.collectionVariables.set(\"contactid\", pm.response.json().id)\r",
											"\r",
											"pm.test(\"Verify response code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is an object with id property\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('id');\r",
											"});\r",
											"pm.test(\"Id is a non-negative integer\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.id).to.exist.and.to.be.a('number');\r",
											"  pm.expect(responseData.id).to.be.at.least(0, \"Id should be a non-negative integer\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"No additional properties other than 'id' in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(Object.keys(responseData)).to.have.lengthOf(1);\r",
											"    pm.expect(responseData).to.have.property('id');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Id is unique for each request\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.id).to.be.a('number');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {\r",
											"    pm.expect(pm.response.json()).to.not.be.empty;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "85ad1d16-4d8e-4bb6-8415-de018ebabe85",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{api-key}}",
										"key": "api-key"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{$randomEmail}}\",\n  \"attributes\": {\n    \"FNAME\": \"Elly\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    21\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"info@sendinblue.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/contacts"
							},
							"response": [
								{
									"id": "9ba722af-04f5-44d3-adbd-5473d221f078",
									"name": "Contact created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"id": "83eaf3cc-9f24-4797-ac43-a7bf2e2b7d99",
									"name": "Contact updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"id": "e634c083-f62a-493e-9279-6f88489d529b",
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get email campaigns' statistics for a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a32f60fc-8b91-41da-ab48-ddbe9ed979f1",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData).to.have.property('from');\r",
											"  pm.expect(responseData).to.have.property('tags');\r",
											"  pm.expect(responseData).to.have.property('messagesSent');\r",
											"  pm.expect(responseData).to.have.property('opened');\r",
											"  pm.expect(responseData).to.have.property('clicked');\r",
											"  pm.expect(responseData).to.have.property('delivered');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"MessagesSent array is present and contains expected number of elements\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.messagesSent).to.exist.and.to.be.an('array');\r",
											"    pm.expect(responseData.messagesSent).to.have.lengthOf(3);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"EventTime in messagesSent is in valid date-time format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.messagesSent).to.be.an('array');\r",
											"    responseData.messagesSent.forEach(function(message) {\r",
											"        pm.expect(message.eventTime).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/);\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "300ebde4-f0f7-4588-923f-eb04dbb5116f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier/campaignStats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier",
										"campaignStats"
									],
									"query": [
										{
											"key": "startDate",
											"value": "YYYY-MM-DD",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "YYYY-MM-DD",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be greater than equal to startDate. Maximum difference between startDate and endDate should not be greater than 90 days\n",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": " {{contactid}}",
											"description": "(Required) Email (urlencoded) OR ID of the contact"
										}
									]
								}
							},
							"response": [
								{
									"id": "9bce8b85-cc8f-49e7-87d1-e276b1a3c86c",
									"name": "Contact campaign statistics informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"from\": \"sendermail@example.com\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"messagesSent\": [\n    {\n      \"campaignId\": 21,\n      \"eventTime\": \"2016-05-03T20:15:13.000Z\"\n    },\n    {\n      \"campaignId\": 42,\n      \"eventTime\": \"2016-10-17T10:30:01.000Z\"\n    },\n    {\n      \"campaignId\": 45,\n      \"eventTime\": \"2016-11-09T11:45:02.000Z\"\n    }\n  ],\n  \"opened\": [\n    {\n      \"campaignId\": 21,\n      \"count\": 2,\n      \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n      \"ip\": \"66.249.93.118\"\n    },\n    {\n      \"campaignId\": 45,\n      \"count\": 1,\n      \"eventTime\": \"2017-01-30T13:56:40.000Z\",\n      \"ip\": \"66.249.93.217\"\n    }\n  ],\n  \"clicked\": [\n    {\n      \"campaignId\": 21,\n      \"links\": [\n        {\n          \"count\": 2,\n          \"eventTime\": \"2016-05-03T21:25:01.000Z\",\n          \"ip\": \"66.249.93.118\",\n          \"url\": \"https://url.domain.com/fbe5387ec717e333628380454f68670010b205ff/1/go?uid={EMAIL}&utm_source=sendinblue&utm_campaign=test_camp&utm_medium=email\"\n        }\n      ]\n    }\n  ],\n  \"delivered\": [\n    {\n      \"campaignId\": 21,\n      \"count\": 2,\n      \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n      \"ip\": \"66.249.93.118\"\n    }\n  ]\n}"
								},
								{
									"id": "c88a0382-86e4-4d7e-9cbe-47d4c7801faa",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "325657ca-54d9-4fdd-aa02-748d5c3380dd",
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create Contact via DOI (Double-Opt-In) Flow",
							"id": "270e1600-9e03-44d9-8c28-601390c21486",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{api-key}}",
										"key": "api-key"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/contacts/doubleOptinConfirmation"
							},
							"response": [
								{
									"id": "c320adb3-0494-4dc8-b5a9-6de02fc4f600",
									"name": "DOI Contact created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/doubleOptinConfirmation"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "7c5a9d1e-dcac-4740-afbd-f72a38a5d9fb",
									"name": "DOI Contact updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/doubleOptinConfirmation"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "a3805782-6bcb-4ce8-a8d0-fcafa3b18b62",
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/doubleOptinConfirmation"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update multiple contacts",
							"id": "cb5f7688-4345-4811-9f78-df9dda16650b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"john@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"John\",\n        \"LNAME\": \"Smith\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"smtpBlacklistSender\": [\n        \"KcV-PaFnJ@eS.qz\",\n        \"bbrb5LcqfbXwIx@rSlyeERMpQugHPvTXhPZo.zmg\"\n      ]\n    },\n    {\n      \"email\": \"Anna@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"Anna Louise\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"0f8VdF@RMbQgSGQHKuglhsPAzZSJcrVpq.njc\",\n        \"UZzlbOKm7qXU@mvJPCUvDwPNk.lhjd\"\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/contacts/batch"
							},
							"response": [
								{
									"id": "d550317e-8e69-45f2-9d4d-21750d51a34b",
									"name": "All contacts updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"john@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"John\",\n        \"LNAME\": \"Smith\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"KcV-PaFnJ@eS.qz\",\n        \"bbrb5LcqfbXwIx@rSlyeERMpQugHPvTXhPZo.zmg\"\n      ]\n    },\n    {\n      \"email\": \"Anna@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"Anna Louise\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"0f8VdF@RMbQgSGQHKuglhsPAzZSJcrVpq.njc\",\n        \"UZzlbOKm7qXU@mvJPCUvDwPNk.lhjd\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://api.sendinblue.com/v3/\n/contacts/batch"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "4f6c3e44-ec7e-404a-b4df-88592981f257",
									"name": "Few contacts updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"john@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"John\",\n        \"LNAME\": \"Smith\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"KcV-PaFnJ@eS.qz\",\n        \"bbrb5LcqfbXwIx@rSlyeERMpQugHPvTXhPZo.zmg\"\n      ]\n    },\n    {\n      \"email\": \"Anna@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"Anna Louise\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"0f8VdF@RMbQgSGQHKuglhsPAzZSJcrVpq.njc\",\n        \"UZzlbOKm7qXU@mvJPCUvDwPNk.lhjd\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/batch"
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"successIds\": [\n    -42087947,\n    74324582\n  ],\n  \"failureIds\": [\n    670206,\n    -86165911\n  ]\n}"
								},
								{
									"id": "1b37aee0-5583-4a3b-87a6-162acc98f998",
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"elly@example.com\",\n      \"id\": 31,\n      \"sms\": \"+91xxxxxxxxxx\",\n      \"attributes\": {\n        \"proident__8\": {}\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65,\n        65\n      ],\n      \"unlinkListIds\": [\n        36,\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"e7eb@lQEBFvQLPEkt.jldh\",\n        \"XpCRkVUJp-jwi@wH.cjt\"\n      ]\n    },\n    {\n      \"email\": \"elly@example.com\",\n      \"id\": 31,\n      \"sms\": \"+91xxxxxxxxxx\",\n      \"attributes\": {\n        \"exercitation41_\": {}\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65,\n        65\n      ],\n      \"unlinkListIds\": [\n        36,\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"s1ORx3QG@wwTXjfg.xckw\",\n        \"PLC2NlHG8Msb@GbxoDEyLzfdXxPbpXCH.bcco\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/batch"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export contacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28c62ceb-2842-4957-b5cf-2ca3434aa121",
										"exec": [
											"//Confirm the response code\r",
											"pm.test(\"Response status code is 202\", function () {\r",
											"    pm.expect(pm.response.to.have.status(202));\r",
											"});\r",
											"\r",
											"//Confirm ProcessID is present in the response payload\r",
											"pm.test(\"ProcessId is present in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.processId).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"ProcessId is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.processId).to.be.a('number');\r",
											"    pm.expect(responseData.processId).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"ProcessId should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.processId).to.be.a('number');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 300ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "432713b0-b276-453f-94c5-288d5451e3f0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customContactFilter\": {\n    \"actionForContacts\": \"subscribed\",\n   // \"actionForEmailCampaigns\": \"hardBounces\",\n   // \"actionForSmsCampaigns\": \"softBounces\",\n    \"listId\": 2,\n    \"emailCampaignId\": {{campaign_id}}\n    //\"smsCampaignId\": 12\n  },\n  \"exportAttributes\": [\n    \"NAME\",\n    \"LNAME\"\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/contacts/export",
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input. File will be available in csv."
							},
							"response": [
								{
									"id": "405ca400-c3b9-4998-9265-b033247b008e",
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customContactFilter\": {\n    \"actionForContacts\": \"allContacts\",\n    \"actionForEmailCampaigns\": \"clickers\",\n    \"actionForSmsCampaigns\": \"softBounces\",\n    \"listId\": 2,\n    \"emailCampaignId\": 12,\n    \"smsCampaignId\": 12\n  },\n  \"exportAttributes\": [\n    \"NAME\",\n    \"NAME\"\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/export"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"id": "558ca9c8-6159-463d-90c8-1c96e0ca60de",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customContactFilter\": {\n    \"actionForContacts\": \"allContacts\",\n    \"actionForEmailCampaigns\": \"clickers\",\n    \"actionForSmsCampaigns\": \"softBounces\",\n    \"listId\": 2,\n    \"emailCampaignId\": 12,\n    \"smsCampaignId\": 12\n  },\n  \"exportAttributes\": [\n    \"NAME\",\n    \"NAME\"\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/export"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all folders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b33a7f2e-4ff2-4c49-a38b-07c6eb9d253f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response includes folders array\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('folders').that.is.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Each folder has an id, name, totalBlacklisted, totalSubscribers, and uniqueSubscribers\", function () {\r",
											"    pm.response.json().folders.forEach(function(folder) {\r",
											"        pm.expect(folder).to.have.property('id').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('name').that.is.a('string');\r",
											"        pm.expect(folder).to.have.property('totalBlacklisted').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('totalSubscribers').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('uniqueSubscribers').that.is.a('number');\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Response includes count property\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('count');\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b91f1e38-4812-4055-9940-0dc593f01d85",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "(Required) Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "(Required) Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "dec1a70b-1275-4789-8866-be33eaa431ef",
									"name": "Folders informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"folders\": [\n    {\n      \"id\": 42,\n      \"name\": \"Ninja_Form\",\n      \"totalBlacklisted\": 98,\n      \"totalSubscribers\": 4567,\n      \"uniqueSubscribers\": 4665\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Prestashop\",\n      \"totalBlacklisted\": 10,\n      \"totalSubscribers\": 6543,\n      \"uniqueSubscribers\": 6553\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"id": "3ebb4f9b-eef6-4426-90a5-33d3256e4e30",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Import contacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c596deec-a469-4d4e-9c89-f92b0c953dbf",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 202\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(202);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"ProcessId is present in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.have.property('processId');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"ProcessId is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.processId).to.be.a('number');\r",
											"    pm.expect(responseData.processId).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify processId remains the same for subsequent executions\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.processId).to.equal(78);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is within an acceptable range\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ad3c5a1a-5225-4b6c-ba18-39d52fe3f15f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  //\"fileUrl\": \"https://importfile.domain.com\",\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  //\"jsonBody\": [\n   // {\n     // \"ut_7f\": \"Lorem\",\n      //\"deserunt_df\": \"Lorem\"\n    //},\n   // {\n     // \"exercitation_30\": \"consequat Lorem\"\n   // }\n // ]\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": {{folderid}}\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/contacts/import",
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input."
							},
							"response": [
								{
									"id": "0430c107-3cc3-4699-bcee-3f57be122a81",
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  \"jsonBody\": [\n    {\n      \"esse_c6\": \"sunt minim nostrud \"\n    },\n    {\n      \"pariatur_81d\": \"laboris\"\n    }\n  ],\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/import"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"id": "ca2e4c62-2bdc-4ed5-9394-5a8c6a830900",
									"name": "import by fileUrl",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/import"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"id": "0f4528e6-dc28-48c7-aad7-2c73a087ae81",
									"name": "import by fileBody",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/import"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"id": "8a4b668a-9ca5-4bf4-8975-115718c12213",
									"name": "import by jsonBody",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jsonBody\": [\n{   \n  \"email\":\"test@domain.com\",\n  \"attributes\":{\"FIRSTNAME\":\"Adam\"}\n}\n],\n  \"listIds\": [\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/import"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"id": "47a152d2-fa9e-4864-a1a5-a63ab28078cd",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  \"jsonBody\": [\n    {\n      \"esse_c6\": \"sunt minim nostrud \"\n    },\n    {\n      \"pariatur_81d\": \"laboris\"\n    }\n  ],\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/import"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a contact's details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "59f5ea52-a854-44c1-bfd7-ce9dfddab9ab",
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify the id parsed is what's returned in the response\", function () {\r",
											"    pm.expect(responseData.id).to.equal(pm.collectionVariables.get(\"contactid\"));\r",
											"});\r",
											"\r",
											"pm.test('Response time is less than 500ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"})\r",
											"\r",
											"pm.test('Response has a valid content type', function () {\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
											"})\r",
											"\r",
											"pm.test('Verify email blacklisted is false', function () {\r",
											"    var responseJSON = pm.response.json();\r",
											"    pm.expect(responseJSON).to.be.an('object');\r",
											"    pm.expect(responseJSON.emailBlacklisted).to.equal(false);\r",
											"})\r",
											"\r",
											"pm.test('Verify createdAt is not empty', function () {\r",
											"    pm.expect(responseData.createdAt).to.not.be.empty;\r",
											"})\r",
											"\r",
											"pm.test('Verify modifiedAt is not empty', function () {\r",
											"    pm.expect(responseData.modifiedAt).to.not.be.empty;\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0ef6eff0-1e23-49a5-93f6-703ced22e0f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"query": [
										{
											"key": "startDate",
											"value": "YYYY-MM-DD",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "YYYY-MM-DD",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be greater than equal to startDate.\n",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": "{{contactid}}",
											"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
										}
									]
								},
								"description": "Along with the contact details, this endpoint will show the statistics of contact for the recent 90 days by default. To fetch the earlier statistics, please use Get contact campaign stats ``https://developers.sendinblue.com/reference/contacts-7#getcontactstats`` endpoint with the appropriate date ranges."
							},
							"response": [
								{
									"id": "a3dca518-ad5f-4a23-bb29-c1b66518d3da",
									"name": "Contact informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"email\": \"peggy.rain@example.com\",\n  \"id\": 42,\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"createdAt\": \"2017-05-02T16:40:31.000Z\",\n  \"modifiedAt\": \"2017-05-02T16:40:31.000Z\",\n  \"attributes\": {\n    \"FIRST_NAME\": \"Peggy\",\n    \"LAST_NAME\": \"Rain\",\n    \"SMS\": \"3087433387669\",\n    \"CIV\": \"1\",\n    \"DOB\": \"1986-04-13T00:00:00.000Z\",\n    \"ADDRESS\": \"987 5th avenue\",\n    \"ZIP_CODE\": \"87544\",\n    \"CITY\": \"New-York\",\n    \"AREA\": \"NY\"\n  },\n  \"listIds\": [\n    40\n  ],\n  \"statistics\": {\n    \"messagesSent\": [\n      {\n        \"campaignId\": 21,\n        \"eventTime\": \"2016-05-03T20:15:13.000Z\"\n      },\n      {\n        \"campaignId\": 42,\n        \"eventTime\": \"2016-10-17T10:30:01.000Z\"\n      }\n    ],\n    \"opened\": [\n      {\n        \"campaignId\": 21,\n        \"count\": 2,\n        \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n        \"ip\": \"66.249.93.118\"\n      },\n      {\n        \"campaignId\": 68,\n        \"count\": 1,\n        \"eventTime\": \"2017-01-30T13:56:40.000Z\",\n        \"ip\": \"66.249.93.217\"\n      }\n    ],\n    \"clicked\": [\n      {\n        \"campaignId\": 21,\n        \"links\": [\n          {\n            \"count\": 2,\n            \"eventTime\": \"2016-05-03T21:25:01.000Z\",\n            \"ip\": \"66.249.93.118\",\n            \"url\": \"https://url.domain.com/fbe5387ec717e333628380454f68670010b205ff/1/go?uid={EMAIL}&utm_source=sendinblue&utm_campaign=test_camp&utm_medium=email\"\n          }\n        ]\n      }\n    ],\n    \"delivered\": [\n      {\n        \"campaignId\": 21,\n        \"count\": 2,\n        \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n        \"ip\": \"66.249.93.118\"\n      }\n    ]\n  }\n}"
								},
								{
									"id": "e7f98cfd-5beb-4984-b365-4385b489971b",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "74aba3d3-8ff1-4c21-aa1f-99a594645e83",
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af2af9d6-f5fe-4d0c-96bd-8a56d8352dd0",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Date is present in the response header\", function(){\r",
											"        pm.response.to.have.header(\"Date\");\r",
											"    });\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dd36b7ea-dccf-43a2-b8b9-c86c953d9b61",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"attributes\": {\n        \"EMAIL\": \"newemail@domain.com\",\n        \"FNAME\": \"Ellie\",\n        \"LNAME\": \"Roger\"\n    },\n    \"emailBlacklisted\": false,\n    \"smsBlacklisted\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "{{contactid}}",
											"description": "(Required) Email (urlencoded) OR ID of the contact"
										}
									]
								}
							},
							"response": [
								{
									"id": "c4ff978a-90e1-4cde-8e51-5ea00b9d7247",
									"name": "Contact updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "b330674c-bf1f-4837-ad7a-aaef0fce5082",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "695cc437-6f08-4855-ab30-2b3aeaf84e09",
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ff8c918-71e7-4408-a53e-6b3b9e1a23c2",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Date is present in the response header\", function(){\r",
											"        pm.response.to.have.header(\"Date\");\r",
											"    });\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c8be204c-24ae-4e75-832a-cb8690cb7094",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "{{contactid}}",
											"description": "(Required) Email (urlencoded) OR ID of the contact"
										}
									]
								}
							},
							"response": [
								{
									"id": "72c189f4-a134-4dd3-a895-37e3141dc6b0",
									"name": "Contact deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "586300b6-c974-4a6b-b305-a5267c28dae1",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "b915df58-cbd0-4e5a-a8c2-a8d13e8759f0",
									"name": "Contact not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "af422318-51b7-407b-bec8-5c1f031acc56",
									"name": "You're not allowed to delete registered email contact with SendinBlue",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "2302281a-33c9-4828-ac68-5397efff5828"
				},
				{
					"name": "Lists",
					"item": [
						{
							"name": "Get all folders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b33a7f2e-4ff2-4c49-a38b-07c6eb9d253f",
										"exec": [
											"const responseData = pm.response.json()\r",
											"if(pm.response.code == 200){ \r",
											"    pm.collectionVariables.set(\"folderid\", responseData.folders[0].id) //This ensures there's always a folder id in the collection variable to add the list to\r",
											"}\r",
											"\r",
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test('Response includes folders array', function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('folders').that.is.an('array');\r",
											"})\r",
											"\r",
											"pm.test('Each folder has an id, name, totalBlacklisted, totalSubscribers, and uniqueSubscribers', function () {\r",
											"    pm.response.json().folders.forEach(function (folder) {\r",
											"        pm.expect(folder).to.have.property('id').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('name').that.is.a('string');\r",
											"        pm.expect(folder).to.have.property('totalBlacklisted').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('totalSubscribers').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('uniqueSubscribers').that.is.a('number');\r",
											"    });\r",
											"})\r",
											"\r",
											"pm.test('Response includes count property', function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('count');\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 1000ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"})\r",
											"\r",
											"pm.test(\"Id is unique for each response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    const allIds = responseData.folders.map(folder => folder.id);//gets all the ids \r",
											"    pm.expect(new Set(allIds).size).to.equal(allIds.length);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f15548dc-aaee-4c28-8119-f83de6d84365",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "(Required) Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "(Required) Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "f16dfc5b-3807-4271-b3bb-9b65057f01ce",
									"name": "Folders informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"folders\": [\n    {\n      \"id\": 42,\n      \"name\": \"Ninja_Form\",\n      \"totalBlacklisted\": 98,\n      \"totalSubscribers\": 4567,\n      \"uniqueSubscribers\": 4665\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Prestashop\",\n      \"totalBlacklisted\": 10,\n      \"totalSubscribers\": 6543,\n      \"uniqueSubscribers\": 6553\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"id": "0b2877f1-4ddd-471b-a990-ec5341c58b95",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d06103e-eca7-46cb-9ee0-4a2fde511ded",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required field 'id'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Id is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.id).to.be.a('number');\r",
											"    pm.expect(responseData.id).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d7ebd920-f490-4b5c-807c-cc66e7f39314",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"folderId\": 2,\n  \"name\": \"Magento Customer - ES\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/contacts/lists"
							},
							"response": [
								{
									"id": "fe3e83b1-7cb9-44d8-a228-1924bf975fff",
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"folderId\": 2,\n  \"name\": \"Magento Customer - ES\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/lists"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"id": "c709ed5d-0744-4f54-8bdf-c29d8e1f6a73",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"folderId\": 2,\n  \"name\": \"Magento Customer - ES\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/lists"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all the lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80fc6ad8-28d7-4313-aea3-2bdfde3d6363",
										"exec": [
											"const responseData = pm.response.json()\r",
											"if(pm.response.code == 200){\r",
											"    pm.collectionVariables.set(\"listid\", responseData.lists[0].id)\r",
											"}\r",
											"\r",
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test('Response includes lists array', function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('lists').that.is.an('array');\r",
											"})\r",
											"\r",
											"pm.test('Each List has an id, name, totalBlacklisted, totalSubscribers, and uniqueSubscribers', function () {\r",
											"    pm.response.json().lists.forEach(function (list) {\r",
											"        pm.expect(list).to.have.property('id').that.is.a('number');\r",
											"        pm.expect(list).to.have.property('name').that.is.a('string');\r",
											"        pm.expect(list).to.have.property('totalBlacklisted').that.is.a('number');\r",
											"        pm.expect(list).to.have.property('folderId').that.is.a('number');\r",
											"        pm.expect(list).to.have.property('uniqueSubscribers').that.is.a('number');\r",
											"    });\r",
											"})\r",
											"\r",
											"pm.test('Response includes count property', function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('count');\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 1000ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"})\r",
											"\r",
											"pm.test(\"Id is unique for each response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    const allIds = responseData.lists.map(folder => folder.id);//gets all the ids \r",
											"    pm.expect(new Set(allIds).size).to.equal(allIds.length);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9e1196ae-2378-4c9f-b83e-a1308b732f33",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "cbc0d316-901f-44a4-a444-6a7997d28f4e",
									"name": "Lists informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"lists\": [\n    {\n      \"id\": 53,\n      \"name\": \"Spanish_Speakers\",\n      \"totalSubscribers\": 5432,\n      \"totalBlacklisted\": 65,\n      \"uniqueSubscribers\": 5497,\n      \"folderId\": 1\n    },\n    {\n      \"id\": 50,\n      \"name\": \"Other\",\n      \"totalSubscribers\": 10976,\n      \"totalBlacklisted\": 765,\n      \"uniqueSubscribers\": 11741,\n      \"folderId\": 2\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"id": "82a50f1e-6ca6-40db-9c2b-09e4d5c86a31",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get contacts in a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "809be609-806b-42c4-88e4-cddc5957ddeb",
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test('Email format is valid for each contact', function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.contacts).to.be.an('array');\r",
											"    responseData.contacts.forEach(function (contact) {\r",
											"        pm.expect(contact.email).to.be.a('string').and.to.match(/\\S+@\\S+\\.\\S+/);\r",
											"    });\r",
											"})\r",
											"\r",
											"pm.test(\"Contacts array is present and has the expected number of elements\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.contacts).to.exist;\r",
											"    pm.expect(responseData.contacts).to.be.an('array').with.length.at.least(1);\r",
											"});\r",
											"\r",
											"pm.test('Attributes presence in contacts', function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.contacts).to.be.an('array').that.is.not.empty;\r",
											"    responseData.contacts.forEach(function (contact) {\r",
											"        pm.expect(contact.attributes).to.exist;\r",
											"        pm.expect(contact.attributes.LASTNAME).to.exist;\r",
											"        pm.expect(contact.attributes.FIRSTNAME).to.exist;\r",
											"      \r",
											"        pm.expect(contact.id).to.exist;\r",
											"    });\r",
											"})\r",
											"\r",
											"pm.test(\"verify contact email is same as sender's email\", function(){\r",
											"      pm.expect(contact.email).to.eql(pm.collectionVariables.get(\"sender_email\"));\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "eb3273e5-826a-4f89-af8c-80512431e0b4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?limit=50&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts"
									],
									"query": [
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Filter (urlencoded) the contacts modified after a given UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{listid}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"id": "06ad2c02-df6d-4b6a-a274-63b85aba7e4b",
									"name": "Contact informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"contacts\": [\n    {\n      \"email\": \"alex.pain@example.com\",\n      \"id\": 45,\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12,\n        9,\n        20\n      ],\n      \"listUnsubscribed\": [\n        1,\n        2\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Pain\",\n        \"FIRSTNAME\": \"Alex\",\n        \"DOB\": \"2010-12-31T00:00:00.000Z\",\n        \"GENDER\": \"Kid\"\n      }\n    },\n    {\n      \"email\": \"john.smith@example.com\",\n      \"id\": 32,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12\n      ],\n      \"listUnsubscribed\": [\n        1\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Smith\",\n        \"FIRSTNAME\": \"John\",\n        \"DOB\": \"1986-06-21T00:00:00.000Z\",\n        \"GENDER\": \"Men\"\n      }\n    },\n    {\n      \"email\": \"helen.rose@example.com\",\n      \"id\": 65,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12,\n        9,\n        20\n      ],\n      \"listUnsubscribed\": [\n        1\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Rose\",\n        \"FIRSTNAME\": \"Helen\",\n        \"DOB\": \"1988-11-02T00:00:00.000Z\",\n        \"GENDER\": \"Women\",\n        \"SMS\": \"3375599887766\"\n      }\n    }\n  ],\n  \"count\": 17655\n}"
								},
								{
									"id": "cf19286f-3f30-45e6-9022-d070a423565a",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "e798ba75-2ecc-4c3d-8d7c-818ffb310e39",
									"name": "List ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all the contacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03a8ebaf-5ed6-4c55-8c26-ec5c74eec622",
										"exec": [
											"const responseData = pm.response.json()\r",
											"pm.collectionVariables.set(\"othercontactemail1\", responseData.contacts[0].email)\r",
											"\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Contacts array is present and contains at least one element\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.contacts).to.be.an('array').and.to.have.lengthOf.at.least(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Each contact has a valid email format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.contacts).to.be.an('array').that.is.not.empty;\r",
											"\r",
											"    responseData.contacts.forEach(function(contact) {\r",
											"        pm.expect(contact.email).to.be.a('string').and.to.match(/^.+@.+\\..+$/);\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Count matches the number of elements in the contacts array\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  pm.expect(responseData.count).to.equal(responseData.contacts.length);\r",
											"});\r",
											"\r",
											"// Test for response content type\r",
											"pm.test(\"Response has a valid content type\", function () {\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4af4abaa-d415-43a6-a5ed-5a4842d847c4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts?limit=50&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "modifiedSince",
											"value": "YYYY-MM-DDTHH:mm:ss.SSSZ",
											"description": "Filter (urlencoded) the contacts modified after a given UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "ce1d6c0f-8352-49ec-9849-8777481265dd",
									"name": "All contacts listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts?limit=50&offset=0&modifiedSince=2022-02-01T00:00:00.000&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "modifiedSince",
													"value": "2022-02-01T00:00:00.000"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"contacts\": [\n    {\n      \"email\": \"contact1@example.com\",\n      \"id\": 247,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": true,\n      \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n      \"modifiedAt\": \"2017-05-01T17:05:03.000Z\",\n      \"listIds\": [\n        43,\n        58\n      ],\n      \"attributes\": {\n        \"SMS\": \"33058407250\",\n        \"IDENTIFICATION\": \"1-3RHQ-259\",\n        \"CIV\": \"MS\",\n        \"LAST_NAME\": \"Brennon\",\n        \"FIRST_NAME\": \"Meg\",\n        \"DOB\": \"1986-05-02T00:00:00.000Z\",\n        \"ADDRESS\": \"1 5th avenue\",\n        \"ZIP_CODE\": \"44300\",\n        \"CITY\": \"New-York\",\n        \"ACTION_CODE\": \"17HH98CH\"\n      }\n    },\n    {\n      \"email\": \"33058407248@mailin-sms.com\",\n      \"id\": 245,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n      \"modifiedAt\": \"2017-05-01T17:05:03.000Z\",\n      \"listIds\": [\n        43,\n        61,\n        58\n      ],\n      \"attributes\": {\n        \"SMS\": \"33058407248\",\n        \"IDENTIFICATION\": \"1-78JS-432\",\n        \"CIV\": \"MS\",\n        \"LAST_NAME\": \"Press\",\n        \"FIRST_NAME\": \"Sophia\",\n        \"DOB\": \"1980-09-11T00:00:00.000Z\",\n        \"ADDRESS\": \"5 Flower Street\",\n        \"ZIP_CODE\": \"44119\",\n        \"CITY\": \"Seattle\",\n        \"ACTION_CODE\": \"17HU765\"\n      }\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"id": "52873ad3-7b7a-4612-80ca-9e3c179b318a",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts?limit=50&offset=0&modifiedSince=2022-02-01T00:00:00.000&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "modifiedSince",
													"value": "2022-02-01T00:00:00.000"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Add existing contacts to a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "676d3990-3668-4c1b-86dd-2983ee245ad6",
										"exec": [
											"const responseData = pm.response.json()\r",
											"pm.test(\"Response status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Success array contains the expected email addresses\", function () {\r",
											"    pm.expect(responseData.contacts.success).to.be.an('array');\r",
											"    responseData.contacts.success.forEach(function(email) {\r",
											"        pm.expect(email).to.be.a('string').and.to.match(/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)*(\\.[a-z]{2,})$/);\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"   \r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response contains both 'success' and 'failure' arrays\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.contacts.success).to.be.an('array');\r",
											"    pm.expect(responseData.contacts.failure).to.be.an('array');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Ensure that the email addresses in the response are in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.contacts.success).to.be.an('array');\r",
											"    responseData.contacts.success.forEach(function(email) {\r",
											"        pm.expect(email).to.match(/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/);\r",
											"    });\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cf46d4a2-4f86-42da-b2a4-d38698a5fad2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emails\": [\n    \"{{contactemail}}\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts",
										"add"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{listid}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"id": "ba4866fa-e7d8-4ced-b74e-ba7a7cea4462",
									"name": "All contacts have been added successfully to the list with details of failed ones",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ],\n  \"failure\": [\n    \"david@example.com\"\n  ]\n}"
								},
								{
									"id": "f370e972-1245-45cd-ba63-d348043ee46f",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "c4083d5b-7cf5-4877-b01a-743408990307",
									"name": "List ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a contact from a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f4c05ac3-0a9b-4f7d-a066-212d5b79917d",
										"exec": [
											"pm.test(\"Verify response code is 201\", function(){\r",
											"    pm.expect(pm.response.code).to.eql(201)\r",
											"})\r",
											"\r",
											"const responseData = pm.response.json()\r",
											"pm.test(\"Success array contains the expected email addresses\", function () {\r",
											"    pm.expect(responseData.contacts.success).to.be.an('array');\r",
											"    responseData.contacts.success.forEach(function(email) {\r",
											"        pm.expect(email).to.be.a('string').and.to.match(/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)*(\\.[a-z]{2,})$/);\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"   \r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response contains both 'success' and 'failure' arrays\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.contacts.success).to.be.an('array');\r",
											"    pm.expect(responseData.contacts.failure).to.be.an('array');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Ensure that the email addresses in the response are in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.contacts.success).to.be.an('array');\r",
											"    responseData.contacts.success.forEach(function(email) {\r",
											"        pm.expect(email).to.match(/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/);\r",
											"    });\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8c0974c5-edc5-4a1a-a425-8cae133f7a7a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emails\": [\n    \"{{contactemail}}\"\n    \n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts",
										"remove"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{listid}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"id": "a1132828-fe6d-4beb-9b02-466ffb4b9fa9",
									"name": "All contacts have been removed successfully from the list with details of failed ones",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ],\n  \"failure\": [\n    \"david@example.com\"\n  ]\n}"
								},
								{
									"id": "9cacfb01-66de-4e24-8805-e382523fb78d",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "da14ade3-0e67-4712-a2ab-f79fa1c7c3c6",
									"name": "List ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a list's details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c50ea29-f482-475d-b947-0e92c645ad63",
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify the id parsed is what's returned in the response\", function () {\r",
											"    pm.expect(responseData.id).to.equal(pm.collectionVariables.get(\"listid\"));\r",
											"});\r",
											"\r",
											"pm.test('Response time is less than 500ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"})\r",
											"\r",
											"pm.test('Response has a valid content type', function () {\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
											"})\r",
											"\r",
											"pm.test('Verify total blacklisted is zero', function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.totalBlacklisted).to.equal(0);\r",
											"})\r",
											"\r",
											"pm.test('Verify createdAt is not empty', function () {\r",
											"    pm.expect(responseData.createdAt).to.not.be.empty;\r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "886ce4c0-83c5-4460-8d8d-fd56d683884e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{listid}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"id": "c7119a0d-dd79-4813-b33e-ee30fa20c311",
									"name": "List informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 12,\n  \"name\": \"Newsletter_Weekly\",\n  \"totalSubscribers\": 6533,\n  \"totalBlacklisted\": 63,\n  \"uniqueSubscribers\": 6596,\n  \"folderId\": 1,\n  \"createdAt\": \"2016-02-26T11:56:08.000Z\",\n  \"campaignStats\": [\n    {\n      \"campaignId\": 15,\n      \"stats\": {\n        \"uniqueClicks\": 701,\n        \"clickers\": 789,\n        \"complaints\": 0,\n        \"delivered\": 6632,\n        \"sent\": 6645,\n        \"softBounces\": 34,\n        \"hardBounces\": 4,\n        \"uniqueViews\": 3442,\n        \"unsubscriptions\": 4,\n        \"viewed\": 4322,\n        \"deferred\": 0\n      }\n    },\n    {\n      \"campaignId\": 45,\n      \"stats\": {\n        \"uniqueClicks\": 654,\n        \"clickers\": 788,\n        \"complaints\": 1,\n        \"delivered\": 4078,\n        \"sent\": 4334,\n        \"softBounces\": 18,\n        \"hardBounces\": 2,\n        \"uniqueViews\": 987,\n        \"unsubscriptions\": 4,\n        \"viewed\": 1555,\n        \"deferred\": 0\n      }\n    }\n  ],\n  \"dynamicList\": false\n}"
								},
								{
									"id": "51ec60b1-a41b-4af6-83f5-1c68e6c89361",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "2df609ea-f011-401f-9b76-cce880767271",
									"name": "List ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "61a18d48-c4a7-4e8e-a7a1-76bdf7e71cb1",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Date is present in the response header\", function(){\r",
											"        pm.response.to.have.header(\"Date\");\r",
											"    });\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c61cd30b-79e8-44e4-bf3d-8238e9be2588",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Magento {{$randomLastName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{listid}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"id": "15105ed3-2c45-4879-a739-3343b4d7c332",
									"name": "List updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "33f63ef3-f38b-41d7-97a2-6f6474c57073",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "a4823a50-f3cb-4dd9-882e-9e9deb7d31b4",
									"name": "List ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "46700543-9532-46b1-ad52-67b8551b63f8",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Date is present in the response header\", function(){\r",
											"        pm.response.to.have.header(\"Date\");\r",
											"    });\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9dcc5e4d-565f-4b25-9c0f-32d5ce8664ab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{listid}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"id": "93768663-faf0-4aeb-a97e-a39cd9b8616a",
									"name": "List deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "b8de3cac-e7b9-4ed5-b54f-e103bf6aca9d",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "5e7baa22-b4bf-4910-a04e-e24752af0fdc",
									"name": "List ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "69c34c79-9cd5-426b-b592-9da8511a86b3"
				},
				{
					"name": "Folders",
					"item": [
						{
							"name": "Get all folders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b33a7f2e-4ff2-4c49-a38b-07c6eb9d253f",
										"exec": [
											"const responseData = pm.response.json()\r",
											"if(pm.response.code == 200){\r",
											"    pm.collectionVariables.set(\"folderid\", responseData.folders[0].id)\r",
											"}\r",
											"\r",
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test('Response includes folders array', function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('folders').that.is.an('array');\r",
											"})\r",
											"\r",
											"pm.test('Each folder has an id, name, totalBlacklisted, totalSubscribers, and uniqueSubscribers', function () {\r",
											"    pm.response.json().folders.forEach(function (folder) {\r",
											"        pm.expect(folder).to.have.property('id').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('name').that.is.a('string');\r",
											"        pm.expect(folder).to.have.property('totalBlacklisted').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('totalSubscribers').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('uniqueSubscribers').that.is.a('number');\r",
											"    });\r",
											"})\r",
											"\r",
											"pm.test('Response includes count property', function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('count');\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 1000ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"})\r",
											"\r",
											"pm.test(\"Id is unique for each response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    const allIds = responseData.folders.map(folder => folder.id);//gets all the ids \r",
											"    pm.expect(new Set(allIds).size).to.equal(allIds.length);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "25c03bbf-3f40-4709-8ef8-f117c5f7ed20",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "(Required) Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "(Required) Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "a33faf67-dc58-48ec-958b-86918680c00e",
									"name": "Folders informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"folders\": [\n    {\n      \"id\": 42,\n      \"name\": \"Ninja_Form\",\n      \"totalBlacklisted\": 98,\n      \"totalSubscribers\": 4567,\n      \"uniqueSubscribers\": 4665\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Prestashop\",\n      \"totalBlacklisted\": 10,\n      \"totalSubscribers\": 6543,\n      \"uniqueSubscribers\": 6553\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"id": "6150c3de-f2cd-4fb8-b3d2-59ff287c2fc5",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f52cdcf1-137e-44b2-bbea-2f462302e817",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required field 'id'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Id is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.id).to.be.a('number');\r",
											"    pm.expect(responseData.id).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "28ce3dd6-5244-4608-91a7-dfb2dc25f6e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{$randomFirstName}} {{$randomLastName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/contacts/folders"
							},
							"response": [
								{
									"id": "d63b400d-ca3f-40d9-95a6-7f85a165ff8c",
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/folders"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"id": "2d42f2d0-967d-4030-9b27-7973619208bd",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/contacts/folders"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Returns a folder's details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0a6bd30e-9384-493c-b1fe-5dd3ff9874e3",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"  const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Id is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.id).to.exist.and.to.be.a('number');\r",
											"    pm.expect(responseData.id).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Name is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Total blacklisted subscribers is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.totalBlacklisted).to.be.a('number');\r",
											"    pm.expect(responseData.totalBlacklisted).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Total subscribers is a non-negative integer\", function () {\r",
											"\r",
											"\r",
											"  pm.expect(responseData.totalSubscribers).to.be.a('number');\r",
											"  pm.expect(responseData.totalSubscribers).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"pm.test(\"totalSubscribers is a total of totalBlacklisted and uniqueSubscribers\",function(){\r",
											"    totalSubscribers = responseData.totalBlacklisted + responseData.uniqueSubscribers\r",
											"    pm.expect(totalSubscribers).to.eql(responseData.totalSubscribers)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0351f879-7b11-4090-9818-afa8ee5b003e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "{{folderid}}",
											"description": "(Required) id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"id": "e3d51231-0aa3-4132-9a58-4668ea31c73e",
									"name": "Folder details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 1,\n  \"name\": \"Client_Folder\",\n  \"totalBlacklisted\": 987,\n  \"totalSubscribers\": 16778,\n  \"uniqueSubscribers\": 17765\n}"
								},
								{
									"id": "4db16ef6-0162-454a-8c97-be26cece15f0",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "449c31fc-6d4d-4c0b-83c1-501e4af12f1a",
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2d948a6-7d59-40b3-88b3-6dc61d337538",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Date is present in the response header\", function(){\r",
											"        pm.response.to.have.header(\"Date\");\r",
											"    });\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6de0172c-a398-4518-9964-a4f5d58c70b3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Brexit {{$randomLastName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "{{folderid}}",
											"description": "(Required) Id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"id": "7d8d6292-7621-46a6-9724-84aaf31f6e43",
									"name": "Folder updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "707b2f92-08d5-40fd-9c1e-67589019732e",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "a2eeb908-2add-4402-893f-aec498acd5f6",
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a folder (and all its lists)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d4ad3d3-6aa7-432b-b920-eb3a91c620a1",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Date is present in the response header\", function(){\r",
											"        pm.response.to.have.header(\"Date\");\r",
											"    });\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "36f86ca1-c320-439e-aaa0-c14574aef4f0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "{{folderid}}",
											"description": "(Required) Id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"id": "9584bc4c-9525-456d-afaf-7da9cd720b39",
									"name": "Folder deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "4bd3cac1-6ba0-4086-8271-2574f0f19100",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "6af6c8fa-80a2-4adc-9714-05065a89ec20",
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all folders after deletion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b33a7f2e-4ff2-4c49-a38b-07c6eb9d253f",
										"exec": [
											"const responseData = pm.response.json()\r",
											"if(pm.response.code == 200){\r",
											"    pm.collectionVariables.set(\"folderid\", responseData.folders[0].id)\r",
											"}\r",
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test('Response includes folders array', function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('folders').that.is.an('array');\r",
											"})\r",
											"\r",
											"pm.test('Each folder has an id, name, totalBlacklisted, totalSubscribers, and uniqueSubscribers', function () {\r",
											"    pm.response.json().folders.forEach(function (folder) {\r",
											"        pm.expect(folder).to.have.property('id').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('name').that.is.a('string');\r",
											"        pm.expect(folder).to.have.property('totalBlacklisted').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('totalSubscribers').that.is.a('number');\r",
											"        pm.expect(folder).to.have.property('uniqueSubscribers').that.is.a('number');\r",
											"    });\r",
											"})\r",
											"\r",
											"pm.test('Response includes count property', function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('count');\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 1000ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"})\r",
											"\r",
											"pm.test(\"Id is unique for each response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    const allIds = responseData.folders.map(folder => folder.id);//gets all the ids \r",
											"    pm.expect(new Set(allIds).size).to.equal(allIds.length);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d8f4e5e4-294e-4c03-989e-03ec7da65d56",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "(Required) Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "(Required) Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "5a141061-5d7d-4b93-86dd-e8189f8f3033",
									"name": "Folders informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"folders\": [\n    {\n      \"id\": 42,\n      \"name\": \"Ninja_Form\",\n      \"totalBlacklisted\": 98,\n      \"totalSubscribers\": 4567,\n      \"uniqueSubscribers\": 4665\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Prestashop\",\n      \"totalBlacklisted\": 10,\n      \"totalSubscribers\": 6543,\n      \"uniqueSubscribers\": 6553\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"id": "7f988a19-0bc8-43b9-a13b-38bffa25a36d",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get lists in a folder",
							"id": "11e403ad-194a-4fc7-abad-ae6558670a62",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId",
										"lists"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									],
									"variable": [
										{
											"key": "folderId",
											"value": "{{folderid}}",
											"description": "(Required) Id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"id": "51765996-8abc-4934-afeb-07faa8d32484",
									"name": "Folder's Lists details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"lists\": [\n    {\n      \"id\": 46,\n      \"name\": \"Reactiv\",\n      \"totalSubscribers\": 7655,\n      \"totalBlacklisted\": 0,\n      \"uniqueSubscribers\": 7655\n    },\n    {\n      \"id\": 41,\n      \"name\": \"NY_Area\",\n      \"totalSubscribers\": 3654,\n      \"totalBlacklisted\": 23,\n      \"uniqueSubscribers\": 3677\n    },\n    {\n      \"id\": 22,\n      \"name\": \"VIP_Customer\",\n      \"totalSubscribers\": 8753,\n      \"totalBlacklisted\": 72,\n      \"uniqueSubscribers\": 8825\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"id": "5e205bef-4902-44d9-89fd-c71b699a9f14",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "e30ebd88-ed12-4c59-acc0-771414ac6c86",
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "a63b2be8-e231-43a4-ab01-6006e2a8ee0c"
				},
				{
					"name": "Attributes",
					"item": [
						{
							"name": "List all attributes",
							"id": "09bd4d2b-a41b-454d-a7cf-f1d509cd3d71",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/contacts/attributes"
							},
							"response": [
								{
									"id": "322f077f-e228-493a-8888-8f7afd8ba636",
									"name": "Attributes listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/contacts/attributes"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"attributes\": [\n    {\n      \"name\": \"LASTNAME\",\n      \"category\": \"normal\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"FIRSTNAME\",\n      \"category\": \"normal\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"DOB\",\n      \"category\": \"normal\",\n      \"type\": \"date\"\n    },\n    {\n      \"name\": \"GENDER\",\n      \"category\": \"category\",\n      \"type\": \"text\",\n      \"enumeration\": [\n        {\n          \"value\": 1,\n          \"label\": \"Men\"\n        },\n        {\n          \"value\": 2,\n          \"label\": \"Women\"\n        },\n        {\n          \"value\": 3,\n          \"label\": \"Kid\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update contact attribute",
							"id": "afc3335e-5b8f-4a99-b388-6a23f280e5ba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"id": "a3e51b40-bca0-49bc-81da-6a4dd26813e0",
											"key": "attributeCategory",
											"value": "global",
											"description": "(Required) Category of the attribute"
										},
										{
											"id": "fa01f22e-d178-4fec-8aa9-a6448d6a5309",
											"key": "attributeName",
											"value": "Name",
											"description": "(Required) Name of the existing attribute"
										}
									]
								}
							},
							"response": [
								{
									"id": "351de0b9-0cc3-44d8-a977-1a829f8014fa",
									"name": "Attribute updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "b495464e-02e3-450a-b792-5c4dc17b0011",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "ce152a87-c54a-4753-a346-3ccef8422a46",
									"name": "Attribute not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create contact attribute",
							"id": "9eb05f67-880f-4844-bff1-3a51cbef95ad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    }\n  ],\n  \"type\": \"text\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"id": "0fa8bdbb-8629-48e0-81b7-ce94554fa887",
											"key": "attributeCategory",
											"value": "global",
											"description": "(Required) Category of the attribute"
										},
										{
											"id": "9da3d777-278b-459f-b41a-3c05b35d7dc3",
											"key": "attributeName",
											"value": "Country",
											"description": "(Required) Name of the attribute"
										}
									]
								}
							},
							"response": [
								{
									"id": "99ac0161-4f20-4017-8d28-b3062011974f",
									"name": "Attribute created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    }\n  ],\n  \"type\": \"text\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the attribute"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "c26c0816-0512-42a0-8e54-3f233c8fc55d",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    }\n  ],\n  \"type\": \"text\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an attribute",
							"id": "00336dfe-be73-44c8-9abb-9e3953c8f26c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"id": "e2cdebc7-7cf6-4122-8481-cc1469419697",
											"key": "attributeCategory",
											"value": "global",
											"description": "(Required) Category of the attribute"
										},
										{
											"id": "91f326b8-5e77-4504-ba1f-7405e88ee2a5",
											"key": "attributeName",
											"value": "Country",
											"description": "(Required) Name of the existing attribute"
										}
									]
								}
							},
							"response": [
								{
									"id": "a16e83c8-f5f9-4320-be0e-289e6c75b758",
									"name": "Attribute deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "6c3d77bd-9ba5-4d38-a726-8cc3de296916",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "81bbd560-089c-415e-b14e-7f482c5d4a2c",
									"name": "Attribute not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "7c9d3566-48d8-4d90-a36a-441519a1adf2"
				}
			],
			"id": "26d6fc18-2ac3-46ce-b110-f360be7d88e6",
			"description": "This collection contains the services to create bulk updates to contacts, create data import jobs, organize and segment your lists, among others."
		},
		{
			"name": "Accounts and settings",
			"item": [
				{
					"name": "Webhooks",
					"item": [
						{
							"name": "Get all webhooks",
							"id": "603b37d2-b958-48dc-a6ce-4be2e8a2066d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?type=transactional&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "type",
											"value": "transactional",
											"description": "Filter on webhook type"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of webhook creation"
										}
									]
								}
							},
							"response": [
								{
									"id": "a217d8f8-2586-4a26-b7ea-286b7ea1d064",
									"name": "Webhooks informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks?type=transactional&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											],
											"query": [
												{
													"key": "type",
													"value": "transactional"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"webhooks\": [\n    {\n      \"url\": \"https://example.domain.com/webhook/events/kzfxxxxxxxx0uyo1\",\n      \"id\": 9864,\n      \"description\": \"Webhook triggered on campaign openings\",\n      \"events\": [\n        \"opened\"\n      ],\n      \"type\": \"transac\",\n      \"createdAt\": \"2016-07-18T12:30:09.000Z\",\n      \"modifiedAt\": \"2016-07-18T16:00:50.000Z\"\n    },\n    {\n      \"url\": \"http://exmaple.domain.com/15kxxxxxn1\",\n      \"id\": 22770,\n      \"description\": \"Webhook triggered on campaign hard bounces\",\n      \"events\": [\n        \"hardBounces\"\n      ],\n      \"type\": \"marketing\",\n      \"createdAt\": \"2017-02-20T14:30:00.000Z\",\n      \"modifiedAt\": \"2017-02-20T19:00:00.000Z\"\n    }\n  ]\n}"
								},
								{
									"id": "40267f87-71ce-48a3-9b70-07dcf6427986",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks?type=transactional&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											],
											"query": [
												{
													"key": "type",
													"value": "transactional"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a webhook",
							"id": "f5e3d093-c756-4f78-8841-84e5562292af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{api-key}}",
										"key": "api-key"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"events\": [\n        \"delivered\"\n    ],\n    \"url\": \"https://webhook.site/5ebc5d36-217f-4989-81fd-5f02cbb49c6d\",\n    \"description\": \"test for SMS\",\n    \"type\": \"marketing\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/webhooks"
							},
							"response": [
								{
									"id": "f8e11ab5-ca69-4c29-ba45-0886e1dc9110",
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"events\": [\n    \"unsubscribed\",\n    \"unsubscribed\"\n  ],\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on unsubscription\",\n  \"type\": \"marketing\",\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/webhooks"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"id": "8e6ac01b-8365-48b7-be0e-e91f999e97c6",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"events\": [\n    \"unsubscribed\",\n    \"unsubscribed\"\n  ],\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on unsubscription\",\n  \"type\": \"marketing\",\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/webhooks"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a webhook details",
							"id": "4c98fd07-a9aa-4735-8f6e-b6f60568d8c5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"id": "f65d246f-3e29-4258-927e-f717b521af62",
											"key": "webhookId",
											"value": "133",
											"description": "(Required) Id of the webhook"
										}
									]
								}
							},
							"response": [
								{
									"id": "38c13fa7-1665-4f7e-b4bc-2fa0b5a3711f",
									"name": "Webhook informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"url\": \"http://example.domain.com/1brxxxxxx5p1\",\n  \"id\": 7287,\n  \"description\": \"Webhook triggered on campaign openings and addition of lists\",\n  \"events\": [\n    \"listAdditions\",\n    \"opened\"\n  ],\n  \"type\": \"marketing\",\n  \"createdAt\": \"2016-06-07T09:10:10.000Z\",\n  \"modifiedAt\": \"2016-06-08T11:30:00.000Z\"\n}"
								},
								{
									"id": "cda83b15-b1fb-48f0-bb10-0019c5369b3a",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "c177219d-bfbe-463d-a007-855b25b3603f",
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a webhook",
							"id": "3ebde04a-5be1-4c9f-b789-498974f37ebb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"id": "a79535ff-f57e-4c52-b4a4-c5c39235d91b",
											"key": "webhookId",
											"value": "1333",
											"description": "(Required) Id of the webhook"
										}
									]
								}
							},
							"response": [
								{
									"id": "862d4c69-103e-4c5c-b74e-aeef4a8ab29b",
									"name": "Webhook updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "6863f69e-3734-4eb9-909a-77d64d05a7c3",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "e56ea5c3-bc00-404b-99a9-7aa13b561883",
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a webhook",
							"id": "e025f0ab-a1d3-491d-a3ec-7491eb1a8680",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"id": "f1670d92-099f-4ce5-a499-8729894eeefa",
											"key": "webhookId",
											"value": "133",
											"description": "(Required) Id of the webhook"
										}
									]
								}
							},
							"response": [
								{
									"id": "eb74e2df-d148-4ad1-b9b0-435c12b40134",
									"name": "Webhook deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "8b5c9717-b51c-47e4-8804-5d74359daac3",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "ea76dea0-acc9-4d88-8d2e-6dec7db5db02",
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "5eb95fea-d0e0-46cc-a8ab-7634e26ba251"
				},
				{
					"name": "Reseller",
					"item": [
						{
							"name": "Credits",
							"item": [
								{
									"name": "Add Email and/or SMS credits to a specific child account",
									"id": "1d782985-66c3-4477-ac7e-9e209353b58b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"credits",
												"add"
											],
											"variable": [
												{
													"id": "f28c2ced-1b41-4789-8ac7-895a5d975096",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"id": "39e25cf9-2ef2-4f5b-a1b3-878dbb84cbfb",
											"name": "Credits added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"child\": {\n    \"sms\": 500,\n    \"email\": 2000\n  },\n  \"reseller\": {\n    \"sms\": 12900,\n    \"email\": 2000000\n  }\n}"
										},
										{
											"id": "2785d018-3002-43e2-a839-74d89afae2a4",
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "69326cf2-69b8-4e92-8fd2-55464084b91e",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "06a5d960-a1bc-4eb2-a560-d4bed75ef2c9",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Remove Email and/or SMS credits from a specific child account",
									"id": "501ab88e-ece9-4288-b27e-14712fab460b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"credits",
												"remove"
											],
											"variable": [
												{
													"id": "c9f4f786-7a1a-45ff-b486-7b193ef691aa",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"id": "1cb2b1d3-903a-4712-a8da-9e3373141e4e",
											"name": "Credits removed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"child\": {\n    \"sms\": 500,\n    \"email\": 2000\n  },\n  \"reseller\": {\n    \"sms\": 12900,\n    \"email\": 2000000\n  }\n}"
										},
										{
											"id": "94cb86db-d84c-43e1-9fe3-48a1b8a1aeb0",
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "2e2424b7-c2e5-4cae-85cc-0fa3d9215c76",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "67b56c08-ab8a-4a35-8d47-d8cf59291630",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							],
							"id": "dd9911db-b385-4d74-a5a9-ae7796aa9a69"
						},
						{
							"name": "IP management",
							"item": [
								{
									"name": "Associate a dedicated IP to the child",
									"id": "7a193b5b-3689-4c3b-a1f7-5d8ce4cf2f37",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"ips",
												"associate"
											],
											"variable": [
												{
													"id": "4d219206-0a24-4bb9-981c-9b4076856fc2",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"id": "63169c3c-147a-42d7-8361-41f2367497ab",
											"name": "Dedicated IP is associated to the child",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "78733b26-484a-4391-833a-a153c98bfd0e",
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "a6d390d8-d208-4a91-b20f-23aa58a1ac0f",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Dissociate a dedicated IP to the child",
									"id": "cbc636d5-e624-4bb6-848b-136c06480d5a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"ips",
												"dissociate"
											],
											"variable": [
												{
													"id": "15de4758-a4b2-46a8-8a4a-630b01d2ff69",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"id": "ab229cd8-8198-4618-8595-df52a81d890f",
											"name": "Dedicated IP is dissociated from the child",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "136c41c5-fb79-4e76-963c-1a28d2900c15",
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "e26a9c9f-a318-4872-b0f3-c0121c7de8f4",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							],
							"id": "2886c642-2a1e-4337-a8ae-2418c88ba669"
						},
						{
							"name": "Domains",
							"item": [
								{
									"name": "Get all sender domains for a specific child account",
									"id": "e23f25c9-b562-45d8-bf8d-74f8f7bd523c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains"
											],
											"variable": [
												{
													"id": "ceca4fda-9d75-4e63-8582-9afac33cc647",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"id": "e54a2a05-0044-4f32-863c-f59a60a6b5f4",
											"name": "Sender domains of the child",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n  {\n    \"domain\": \"mycustomdomain.com\",\n    \"active\": true\n  },\n  {\n    \"domain\": \"mynewdomain.com\",\n    \"active\": true\n  }\n]"
										},
										{
											"id": "79ed9451-3211-4996-8b7c-58c93970a12c",
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "716efaba-1ebe-4db3-96a2-b88710c7e947",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "3c51cab8-d2f1-400a-aed2-435f5ae20ffb",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Create a domain for a child account",
									"id": "0c9456bd-09b5-48fd-9b06-c0ef92930a3d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains"
											],
											"variable": [
												{
													"id": "ad7f6feb-4186-4531-9919-32be0268f71c",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"id": "39c04647-dc32-4bc9-8f72-41fe54b4e116",
											"name": "Domain added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "1f993e09-05c4-4a21-a344-01b19216c84f",
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "704eab5c-e909-4ecd-8401-26a9ed91adf0",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "a90de789-b429-408e-8193-84ea9b28183e",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update the sender domain of reseller's child based on the childIdentifier and domainName passed",
									"id": "8ab0b59f-3ba9-4b98-97e0-b2167b498db6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains",
												":domainName"
											],
											"variable": [
												{
													"id": "e2939447-0761-4725-b7ba-d7df1000464d",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												},
												{
													"id": "ccbab4dc-50c8-4c13-9595-0771272d0fa0",
													"key": "domainName",
													"value": "",
													"description": "(Required) Pass the existing domain that needs to be updated"
												}
											]
										}
									},
									"response": [
										{
											"id": "dbcbf356-44fe-42f7-982e-5969e2fc5b0d",
											"name": "reseller's child domain updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "935a022e-f97f-4600-b95b-a5e5587649f3",
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "5e2910fe-0ade-4bdd-bd1b-6260176c08b7",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "e6e906a3-8938-40ef-b072-84bf380779eb",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Delete the sender domain of the reseller child based on the childIdentifier and domainName passed",
									"id": "19fe224c-c71b-4786-89e8-400c69d7dca6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains",
												":domainName"
											],
											"variable": [
												{
													"id": "5b6e0e17-34ad-4671-b241-303ff33611fa",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												},
												{
													"id": "defa1452-74af-4c8d-a8f9-90f9f59c9f8a",
													"key": "domainName",
													"value": "",
													"description": "(Required) Pass the existing domain that needs to be deleted"
												}
											]
										}
									},
									"response": [
										{
											"id": "8a694544-3791-4dca-9a29-9fc36cdf5255",
											"name": "child domain deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "21f1710a-6a19-4e61-b9b5-eedffc6f3487",
											"name": "bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "d04e7335-5575-4086-b885-97be989afe42",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "b5977f07-c86f-4390-b46d-7f4d89c4ebca",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							],
							"id": "64641e6c-641b-4fab-9086-032ffbfc2298"
						},
						{
							"name": "Child accounts",
							"item": [
								{
									"name": "Get a child account's details",
									"id": "a6831d0f-911a-4b76-a6fd-14653095056d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"id": "6bc80ec2-e5e4-443d-94e9-931946f28dbd",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"id": "61ddedb7-164b-43e7-9ef3-617ee518e7d4",
											"name": "Information for the child",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"email\": \"john.smith@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"companyName\": \"MyCompany\",\n  \"credits\": {\n    \"emailCredits\": 98555,\n    \"smsCredits\": 87556\n  },\n  \"statistics\": {\n    \"previousMonthTotalSent\": 7654,\n    \"currentMonthTotalSent\": 4566,\n    \"totalSent\": 987554\n  },\n  \"password\": \"abC0xxxxx3jkL\",\n  \"ips\": [\n    \"176.2.39.4\",\n    \"231.43.21.7\"\n  ],\n  \"apiKeys\": {\n    \"v2\": [\n      {\n        \"name\": \"NËš2\",\n        \"key\": \"nOpxxxxxy7z\"\n      }\n    ],\n    \"v3\": [\n      {\n        \"name\": \"NËš3\",\n        \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n      }\n    ]\n  }\n}"
										},
										{
											"id": "89d7f3b6-33dc-4a7c-87e9-d31cb6303e94",
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "45ce3392-7961-496a-83d3-68abe1c85a6a",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "f3e72e07-c6fe-4b20-8786-b27d2bad0ead",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update info of reseller's child based on the child identifier supplied",
									"id": "a2b3eefc-6473-46a9-abee-a524180eef46",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"id": "c5df7b47-52e9-4c07-b020-b3dee1eccdf7",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"id": "9afce27b-4a26-47b0-be72-0c518f206388",
											"name": "reseller's child updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "3cc3fa96-b5f9-4029-941f-51e467da3258",
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "75d6fb5e-fcb3-4ba5-bd12-714775f98dd7",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "22f7f096-6159-4c20-82ee-7c88e660fbd2",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Delete a single reseller child based on the child identifier supplied",
									"id": "7e85707e-0c5d-406b-b577-e8b3b93a4ae9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"id": "e1324d2c-4786-4701-9906-66f5f7062e4b",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or child id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"id": "3609f072-0be2-450b-96ff-4e3d0c4e517e",
											"name": "child deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "209205fa-02ee-4877-b25e-519725a1eee3",
											"name": "bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "ab4da4ab-97a8-4761-a60f-9c8c576bd326",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "dee01d79-c2c9-4c71-a086-ab1c70dbd88f",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update info of reseller's child account status based on the identifier supplied",
									"id": "a2c98e4c-2116-459e-b1a9-76e6fcc16af0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"accountStatus"
											],
											"variable": [
												{
													"id": "8772ea6c-0d12-49f6-93da-4fa835ac71ea",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"id": "e5e222b7-7fa9-4b90-a5dc-12da88713102",
											"name": "reseller's child account status updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "29b32a02-f005-444a-8acb-366d9f4f92b4",
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "bbb353ed-44f2-43ff-92d5-f347d92fecf2",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "8ec74dda-e11a-4a59-902c-16098665589b",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get the status of a reseller's child account creation, whether it is successfully created (exists) or not based on the childIdentifier supplied",
									"id": "62289795-aa50-46e3-a3c8-1201d650f2fa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"accountCreationStatus"
											],
											"variable": [
												{
													"id": "b387f8c4-cf11-4eaa-8f7e-eac18ad43951",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"id": "1346036f-9fea-4245-bb69-1888d92a7d27",
											"name": "status of reseller's child account",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"childAccountCreated\": true\n}"
										},
										{
											"id": "bc8fda16-cd0a-4968-8198-1ec92b755272",
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "885776fc-e4c2-492b-81bd-26db8c127532",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "23f0d040-219f-40f7-9023-31c20d1f2290",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get session token to access Sendinblue (SSO)",
									"id": "30e45b0a-8902-4562-aa97-cac3b7094fc4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"auth"
											],
											"variable": [
												{
													"id": "1c31efe7-41cd-4fe1-a474-0b74b4b7eb6e",
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										},
										"description": "It returns a session [token] which will remain valid for a short period of time. A child account will be able to access a white-labeled section by using the following url pattern => https:/email.mydomain.com/login/sso?token=[token]"
									},
									"response": [
										{
											"id": "a3a6aa54-291d-4e1b-9484-bc7bf96cf825",
											"name": "Session token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"token\": \"5cadaxxxxxxxxxxxxxxxxxxxx5a179f85a0\"\n}"
										},
										{
											"id": "b5d65b0c-25e5-4a6a-bc42-53c92a4e453b",
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "09b3348e-68e3-48d1-9dbf-6cbea6b360c4",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "98e88f58-151f-4a18-8c58-448a75f48a37",
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get the list of all children accounts",
									"id": "3e5a72bf-0d4b-4fd4-9406-84b2e8d9e059",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children?limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"description": "Number of documents for child accounts information per page"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Index of the first document in the page"
												}
											]
										}
									},
									"response": [
										{
											"id": "881dbcd4-0257-4b30-9779-1c0160a856c7",
											"name": "list of children",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children?limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"children\": [\n    {\n      \"email\": \"john.smith@example.com\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"companyName\": \"MyCompany\",\n      \"credits\": {\n        \"emailCredits\": 98555,\n        \"smsCredits\": 87556\n      },\n      \"statistics\": {\n        \"previousMonthTotalSent\": 7654,\n        \"currentMonthTotalSent\": 4566,\n        \"totalSent\": 987554\n      },\n      \"password\": \"abC0xxxxxx3jkL\",\n      \"ips\": [\n        \"176.2.39.4\",\n        \"231.43.21.7\"\n      ],\n      \"apiKeys\": {\n        \"v2\": [\n          {\n            \"name\": \"NËš2\",\n            \"key\": \"nOpxxxxxy7z\"\n          }\n        ],\n        \"v3\": [\n          {\n            \"name\": \"NËš3\",\n            \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n          }\n        ]\n      },\n      \"id\": 187588\n    },\n    {\n      \"email\": \"alex.pain@example.com\",\n      \"firstName\": \"Alex\",\n      \"lastName\": \"Pain\",\n      \"companyName\": \"MyStore\",\n      \"credits\": {\n        \"emailCredits\": 2000,\n        \"smsCredits\": 0\n      },\n      \"statistics\": {\n        \"previousMonthTotalSent\": 654,\n        \"currentMonthTotalSent\": 300,\n        \"totalSent\": 6553\n      },\n      \"password\": \"abC0xxxxx64kL\",\n      \"ips\": [\n        \"176.2.39.4\",\n        \"231.43.21.7\"\n      ],\n      \"apiKeys\": {\n        \"v2\": [\n          {\n            \"name\": \"NËš2\",\n            \"key\": \"nOpxxxxxy7z\"\n          }\n        ],\n        \"v3\": [\n          {\n            \"name\": \"NËš3\",\n            \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n          }\n        ]\n      },\n      \"id\": 187669\n    }\n  ]\n}"
										},
										{
											"id": "5bf838cf-f996-433b-8f1e-64b74810c8de",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children?limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Creates a reseller child",
									"id": "52097be7-069b-42a7-aeb0-0f974b4fc8ad",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/reseller/children"
									},
									"response": [
										{
											"id": "6b61f096-c2c3-4cf0-8723-87d8f2d3a9b5",
											"name": "child created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/reseller/children"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"authKey\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\",\n  \"id\": 1234567\n}"
										},
										{
											"id": "aa0b05ba-04ca-4d30-ade3-01d0d32b5047",
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/reseller/children"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"id": "7331f6bf-30ea-422f-ab3b-38769d0b57a3",
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/reseller/children"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							],
							"id": "b4ecea6c-2b13-4319-aea5-48af0700f270"
						}
					],
					"id": "62e6ad4d-fa97-443f-8014-6b6c2abfe679"
				},
				{
					"name": "Process",
					"item": [
						{
							"name": "Return all the processes for your account",
							"id": "d8f3faa8-8a0f-490c-b86a-01e9302eae28",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/processes?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number limitation for the result returned"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from."
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "ae659948-bc9a-404b-a256-afd9344eba1e",
									"name": "processes informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"processes\": [\n    {\n      \"id\": 40,\n      \"status\": \"completed\",\n      \"name\": \"TRANS-CALC\"\n    },\n    {\n      \"id\": 43,\n      \"status\": \"queued\",\n      \"name\": \"TRANS-GLOBAL-CALC\"\n    },\n    {\n      \"id\": 194,\n      \"status\": \"completed\",\n      \"name\": \"SEARCH_EXPORT_USERS\",\n      \"export_url\": \"<a href=\\\"https://export-url.com/upload/file-name.csv\\\" target=\\\"_blank\\\">filename.csv</a>\"\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"id": "506d1952-d155-470e-bfbe-e2a1941f92ba",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Return the informations for a process",
							"id": "8d4edea1-f132-44a4-9735-f5511fa8a896",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/processes/:processId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes",
										":processId"
									],
									"variable": [
										{
											"id": "0b79ef4b-b9ef-4d37-af8b-8307f7791b15",
											"key": "processId",
											"value": "133",
											"description": "(Required) Id of the process"
										}
									]
								}
							},
							"response": [
								{
									"id": "00c4d868-bb97-4197-b918-1a9f99ae2db6",
									"name": "process informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 194,\n  \"status\": \"completed\",\n  \"name\": \"SEARCH_EXPORT_USERS\",\n  \"export_url\": \"<a href=\\\"https://export-url.com/upload/file-name.csv\\\" target=\\\"_blank\\\">filename.csv</a>\"\n}"
								},
								{
									"id": "b62d2985-3283-46f3-a181-f48067024543",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "938949a8-950e-43f3-9b7c-1b4c1e4c7104",
									"name": "Process ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"processId is invalid\"\n}"
								}
							]
						}
					],
					"id": "6b35301a-1be8-4bb0-8427-dbb603e55179"
				},
				{
					"name": "Corporate",
					"item": [
						{
							"name": "Get the details of requested master account",
							"id": "6367ce3c-dc76-40e5-b728-a22dbf97ea66",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/corporate/masterAccount",
								"description": "This endpoint will provide the details of the master account."
							},
							"response": [
								{
									"id": "0db1863a-31b7-41a2-ba14-11716d94324a",
									"name": "Master account details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/corporate/masterAccount"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"email\": \"sample@example.com\",\n  \"companyName\": \"Corp Sample 1-1\",\n  \"id\": 1003286,\n  \"currencyCode\": \"INR\",\n  \"timezone\": \"Europe/Paris\",\n  \"billingInfo\": {\n    \"email\": \"sample@example.com\",\n    \"companyName\": \"Corp Sample 1-1\",\n    \"name\": {\n      \"givenName\": \"Uday\",\n      \"familyName\": \"Pandit\"\n    },\n    \"address\": {\n      \"streetAddress\": \"C-92\",\n      \"locality\": \"Pandav Nagar, New Delhi\",\n      \"postalCode\": \"560048\",\n      \"stateCode\": \"UP\",\n      \"countryCode\": \"IN\"\n    }\n  },\n  \"planInfo\": {\n    \"currencyCode\": \"INR\",\n    \"nextBillingAt\": 1637739295,\n    \"price\": 2100,\n    \"planPeriod\": \"month\",\n    \"subAccounts\": 15,\n    \"features\": [\n      {\n        \"name\": \"MULTI_USER\",\n        \"unitValue\": 1,\n        \"quantity\": 10,\n        \"used\": 15,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"ADVANCED_REPORTING\",\n        \"unitValue\": 1,\n        \"quantity\": 12,\n        \"used\": 1,\n        \"remaining\": 11\n      },\n      {\n        \"name\": \"INBOX\",\n        \"unitValue\": 1,\n        \"quantity\": 10,\n        \"used\": 10,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"LANDING_PAGE\",\n        \"unitValue\": 5,\n        \"quantity\": 10,\n        \"used\": 11,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"RECURRING_CREDITS\",\n        \"unitValue\": 1,\n        \"quantity\": 500,\n        \"used\": 1,\n        \"remaining\": 499\n      }\n    ]\n  }\n}"
								},
								{
									"id": "21cfa10a-12ea-472c-911f-40046c3735e8",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/corporate/masterAccount"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the list of all the sub-accounts of the master account.",
							"id": "e76088df-f188-4465-bacb-a11b6d5074bd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount?offset=&limit=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "(Required) Index of the first sub-account in the page"
										},
										{
											"key": "limit",
											"value": "",
											"description": "(Required) Number of sub-accounts to be displayed on each page"
										}
									]
								},
								"description": "This endpoint will provide the list all the sub-accounts of the master account."
							},
							"response": [
								{
									"id": "d23881f0-7238-4964-a4de-d70ece49c39a",
									"name": "Sub-accounts list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount?offset=-41398727&limit=-41398727",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											],
											"query": [
												{
													"key": "offset",
													"value": "-41398727"
												},
												{
													"key": "limit",
													"value": "-41398727"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"count\": 3,\n  \"subAccounts\": [\n    {\n      \"id\": 4043629,\n      \"companyName\": \"Company1\",\n      \"active\": \"true,\",\n      \"createdAt\": 1631523176\n    },\n    {\n      \"id\": 3984002,\n      \"companyName\": \"Company2\",\n      \"active\": true,\n      \"createdAt\": 1629439311\n    },\n    {\n      \"id\": 3524191,\n      \"companyName\": \"Company3\",\n      \"active\": true,\n      \"createdAt\": 1614713641\n    }\n  ]\n}"
								},
								{
									"id": "b5acda16-820c-4f2c-bbf7-dc05827cca91",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount?offset=-41398727&limit=-41398727",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											],
											"query": [
												{
													"key": "offset",
													"value": "-41398727"
												},
												{
													"key": "limit",
													"value": "-41398727"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a new sub-account under a master account.",
							"id": "26a4d1fb-1fc9-4e37-b4ef-1b56ebc55c1a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/corporate/subAccount",
								"description": "This endpoint will create a new sub-account under a master account"
							},
							"response": [
								{
									"id": "96cb878e-ec12-4fdd-9513-8b5f55658d4b",
									"name": "Created sub-account ID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/corporate/subAccount"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 4109344\n}"
								},
								{
									"id": "9c35d7ff-8f0d-49dd-adbc-47ca989c1076",
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/corporate/subAccount"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"missing_parameter\",\n  \"message\": \"Missing companyName attribute in the request\"\n}"
								}
							]
						},
						{
							"name": "Generate SSO token to access Sendinblue",
							"id": "e591aafd-fdb8-4089-a802-8f6e6641fd8f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/corporate/subAccount/ssoToken",
								"description": "This endpoint generates an sso token to authenticate and access a sub-account of the master using the account endpoint https://app.sendinblue.com/account/login/sub-account/sso/[token], where [token] will be replaced by the actual token."
							},
							"response": [
								{
									"id": "e7fe1d70-a4ff-47a2-b2df-6e6c01031ca7",
									"name": "Session token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/corporate/subAccount/ssoToken"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"token\": \"5cadaxxxxxxxxxxxxxxxxxxxx5a179f85a0\"\n}"
								},
								{
									"id": "58b129b1-ce45-423c-942e-1bc8dc372920",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/corporate/subAccount/ssoToken"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"Invalid sub-account id.\"\n}"
								},
								{
									"id": "1ebde1b2-04c4-485b-a620-f69c31e538a1",
									"name": "Current account is not a master account",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/corporate/subAccount/ssoToken"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"permission_denied\",\n  \"message\": \"Access forbidden.\"\n}"
								}
							]
						},
						{
							"name": "Get sub-account details",
							"id": "416d323c-818a-484f-8c39-068ebd7f69f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id"
									],
									"variable": [
										{
											"id": "9e8e94ed-09e3-45eb-b441-00cdd87b7f77",
											"key": "id",
											"value": "133",
											"description": "(Required) Id of the sub-account organization"
										}
									]
								},
								"description": "This endpoint will provide the details for the specified sub-account company"
							},
							"response": [
								{
									"id": "7dc9b53f-8f74-4752-9cec-5fc2bf7d67b6",
									"name": "Sub-account organization details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"name\": \"Uday Pandit\",\n  \"email\": \"uday+1@sendinblue.com\",\n  \"companyName\": \"API-Sub-26thOct21-4\",\n  \"planInfo\": {\n    \"credits\": {\n      \"sms\": 1234,\n      \"emails\": {\n        \"quantity\": 2000,\n        \"remaining\": 1955\n      },\n      \"features\": {\n        \"inbox\": {\n          \"quantity\": 20,\n          \"remaining\": 12\n        },\n        \"landingPage\": {\n          \"quantity\": 25,\n          \"remaining\": 14\n        },\n        \"users\": {\n          \"quantity\": 30,\n          \"remaining\": 14\n        }\n      },\n      \"planType\": \"paid\"\n    }\n  }\n}"
								},
								{
									"id": "bdcb2019-0e17-4497-a71a-ceb060c2c31e",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a sub-account",
							"id": "3effa04b-b731-4081-966c-7dfa66887c5e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id"
									],
									"variable": [
										{
											"id": "2b6a1513-b730-47c4-a0b7-1bfb27db583f",
											"key": "id",
											"value": "133",
											"description": "(Required) Id of the sub-account organization to be deleted"
										}
									]
								}
							},
							"response": [
								{
									"id": "763b1c4a-8d96-4af5-ba5b-0df523b3e23a",
									"name": "Returned when sub-account is deleted succesfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "59d4b18e-add3-43e9-b652-74385cff712e",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"missing_parameter\",\n  \"message\": \"Sub-account 2039dfsddf885 is not valid\"\n}"
								},
								{
									"id": "dfc2aab8-505d-4f1a-9ff5-f18fa09c6b29",
									"name": "sub-account not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"document_not_found\",\n  \"message\": \"Sub-account 2039885 was not found\"\n}"
								}
							]
						},
						{
							"name": "Update sub-account plan",
							"id": "9a6638ed-8103-4eda-8d6b-12cd0b659ab4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id",
										"plan"
									],
									"variable": [
										{
											"id": "885963e1-973a-4e7d-b55b-e006058bb0b4",
											"key": "id",
											"value": "133",
											"description": "(Required) Id of the sub-account organization"
										}
									]
								},
								"description": "This endpoint will update the sub-account plan"
							},
							"response": [
								{
									"id": "8925da38-c5ee-43c3-a127-e83234aa5846",
									"name": "Sub account plan updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "1fdc40ee-cbe6-4073-a1a5-18e7ddfbe3a3",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "636e36f9-592d-449f-a633-4df50fea7267",
									"name": "Current account is not a master account",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"permission_denied\",\n  \"message\": \"Access forbidden.\"\n}"
								}
							]
						}
					],
					"id": "9baaf9c3-c56c-4fc7-af49-f39ade9b5468"
				},
				{
					"name": "Account data",
					"item": [
						{
							"name": "Get your account information, plan and credits details",
							"id": "78e910f4-9774-4ef0-9093-a9e436f175df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/account"
							},
							"response": [
								{
									"id": "3444d154-866c-44a7-b055-812d0c111df6",
									"name": "account informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"plan\": [\n    {\n      \"type\": \"payAsYouGo\",\n      \"credits\": 5000,\n      \"creditsType\": \"sendLimit\"\n    },\n    {\n      \"type\": \"subscription\",\n      \"credits\": 39983,\n      \"creditsType\": \"sendLimit\",\n      \"startDate\": \"2017-03-11T00:00:00.000Z\",\n      \"endDate\": \"2017-04-11T00:00:00.000Z\"\n    },\n    {\n      \"type\": \"sms\",\n      \"credits\": 999.5360000000001,\n      \"creditsType\": \"sendLimit\"\n    }\n  ],\n  \"relay\": {\n    \"enabled\": true,\n    \"data\": {\n      \"userName\": \"john.smith@example.com\",\n      \"relay\": \"smtp-relay.domain.com\",\n      \"port\": 587\n    }\n  },\n  \"marketingAutomation\": {\n    \"key\": \"kzfr5xxxxxxttuyo1\",\n    \"enabled\": true\n  },\n  \"email\": \"john.smith@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"companyName\": \"MyShop\",\n  \"address\": {\n    \"city\": \"New-York\",\n    \"street\": \"1677B 8th Avenue\",\n    \"zipCode\": \"7665\",\n    \"country\": \"USA\"\n  }\n}"
								}
							]
						}
					],
					"id": "3c5845e4-fbcb-4f33-bbe3-13d0f001dc31"
				},
				{
					"name": "Senders",
					"item": [
						{
							"name": "Get the list of all your senders",
							"id": "9922d458-e281-4ca6-a1f0-e64f0fb3e821",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders?ip=&domain=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders"
									],
									"query": [
										{
											"key": "ip",
											"value": "",
											"description": "Filter your senders for a specific ip. **Available for dedicated IP usage only**\n"
										},
										{
											"key": "domain",
											"value": "",
											"description": "Filter your senders for a specific domain"
										}
									]
								}
							},
							"response": [
								{
									"id": "d4f09804-13f9-4e3f-a090-192b1c57677c",
									"name": "list of senders",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders?ip=veniam elit in&domain=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											],
											"query": [
												{
													"key": "ip",
													"value": "veniam elit in"
												},
												{
													"key": "domain",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"senders\": [\n    {\n      \"id\": 1,\n      \"name\": \"Marketing\",\n      \"email\": \"marketing@mycompany.com\",\n      \"active\": true,\n      \"ips\": [\n        {\n          \"ip\": \"123.98.689.7\",\n          \"domain\": \"mycompany.com\",\n          \"weight\": 100\n        }\n      ]\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Newsletter\",\n      \"email\": \"newsletter@mycompany.com\",\n      \"active\": false,\n      \"ips\": [\n        {\n          \"ip\": \"123.98.689.7\",\n          \"domain\": \"mycompany.com\",\n          \"weight\": 50\n        },\n        {\n          \"ip\": \"123.98.643.2\",\n          \"domain\": \"news.mycompany.com\",\n          \"weight\": 50\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "74fae345-ba8a-4c27-8f35-720e2dd89f66",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders?ip=veniam elit in&domain=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											],
											"query": [
												{
													"key": "ip",
													"value": "veniam elit in"
												},
												{
													"key": "domain",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a new sender",
							"id": "627fa3a2-b19d-4157-a8c2-0ce872ab5ae9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"newsletter@mycompany.com\",\n  \"name\": \"Newsletter\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/senders"
							},
							"response": [
								{
									"id": "964809e5-f8d3-4394-bc88-53654edf3a49",
									"name": "sender created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"newsletter@mycompany.com\",\n  \"name\": \"Newsletter\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/senders"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 5,\n  \"spfError\": true,\n  \"dkimError\": false\n}"
								},
								{
									"id": "cf5b01e9-f6af-4be2-a2b1-96fa20d06a65",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"newsletter@mycompany.com\",\n  \"name\": \"Newsletter\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/senders"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all the dedicated IPs for your account",
							"id": "d3a779d8-c50f-439a-b2d0-6e5c770780aa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/senders/ips"
							},
							"response": [
								{
									"id": "583ebe74-5577-4eb6-95d9-9759e67bf131",
									"name": "list of dedicated IPs",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/senders/ips"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"ips\": [\n    {\n      \"id\": 3,\n      \"ip\": \"67.145.89.3\",\n      \"active\": true,\n      \"domain\": \"mailing.myshop.com\"\n    },\n    {\n      \"id\": 5,\n      \"ip\": \"76.76.125.9\",\n      \"active\": true,\n      \"domain\": \"newsletter.myshop.com\"\n    },\n    {\n      \"id\": 6,\n      \"ip\": \"123.65.8.22\",\n      \"active\": false,\n      \"domain\": \"notifications.myshop.com\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a sender",
							"id": "a20cb604-3c99-473b-82c6-7e16c19fc19a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId"
									],
									"variable": [
										{
											"id": "8d345850-cf7f-48d1-ac39-b02b7d96350c",
											"key": "senderId",
											"value": "133",
											"description": "(Required) Id of the sender"
										}
									]
								}
							},
							"response": [
								{
									"id": "0f784a39-00e8-45a7-9e8a-8ad9b3fbb502",
									"name": "sender updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "57295ff0-1c6d-4ca4-a154-498c4031d7a1",
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "7890c1bd-e4b7-42a6-bb64-8bf84ddf3e58",
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a sender",
							"id": "ec1e60cd-17ac-4b88-8266-1489df476ff3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId"
									],
									"variable": [
										{
											"id": "c5c803b6-d525-4a84-a740-b50e8cea5a8f",
											"key": "senderId",
											"value": "133",
											"description": "(Required) Id of the sender"
										}
									]
								}
							},
							"response": [
								{
									"id": "b5ca48ee-4166-48a2-89e8-d127f8a2e8ae",
									"name": "sender deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "a330c3dd-7ffb-4642-8cff-9beb31e50835",
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "3b585f55-cad4-4739-b5f1-a04a09a5770c",
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all the dedicated IPs for a sender",
							"id": "8b6060de-4c5f-45eb-8d0d-7eb60489ce7b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId/ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId",
										"ips"
									],
									"variable": [
										{
											"id": "6f4027ee-bd13-4a95-a9ac-ab63774eb6c5",
											"key": "senderId",
											"value": "133",
											"description": "(Required) Id of the sender"
										}
									]
								}
							},
							"response": [
								{
									"id": "962cd943-82c0-4a86-88d6-f3fa6d3aac20",
									"name": "list of dedicated IPs",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"ips\": [\n    {\n      \"id\": 3,\n      \"ip\": \"123.65.8.22\",\n      \"domain\": \"mailing.myshop.dom\",\n      \"weight\": 40\n    },\n    {\n      \"id\": 5,\n      \"ip\": \"123.43.21.3\",\n      \"domain\": \"newsletter.myshop.dom\",\n      \"weight\": 60\n    }\n  ]\n}"
								},
								{
									"id": "f3795f99-fae0-4dda-b4bf-98b2a5e253a1",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "5a997ab6-d6f8-4571-a0d0-d0e05a7812b8",
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "5e165a7b-cdf3-4e2f-80ac-2aae448ebe9d"
				},
				{
					"name": "Domains",
					"item": [
						{
							"name": "Get the list of all your domains",
							"id": "ecb0cd8a-3198-489c-a8dd-ea6c494757e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": "{{baseUrl}}/senders/domains"
							},
							"response": [
								{
									"id": "d3a22686-1d12-4799-a1c4-039069590c0c",
									"name": "List of all your domains",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": "{{baseUrl}}/senders/domains"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 12 Apr 2023 13:23:33 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "7b6bc8d48b4d3fc8-SIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://ip-management-api.sendinblue.com,*"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true,true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Authorization, Origin, X-Requested-With, Content-Type, Accept, x-xsrf-token, x-csrf-token,*"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET, POST, OPTIONS, PUT, PATCH, HEAD,PUT, POST, GET, DELETE, PATCH, OPTIONS"
										},
										{
											"key": "cf-apo-via",
											"value": "origin,host"
										},
										{
											"key": "sib-request-id",
											"value": "9efd2f9e-02d1-9058-b5a1-477084fe7cbb"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "85"
										},
										{
											"key": "x-sib-server",
											"value": "srv-pr-rancher-worker-9.prod.illiad.51b.tech"
										},
										{
											"key": "x-xss-protection",
											"value": "1"
										},
										{
											"key": "Set-Cookie",
											"value": "__cf_bm=jjdjt_Olg06YrVhRTYPT40dkbJZZEsH.DSlDr0NIsMI-1681305813-0-ATGEO0wCmmTqDZ47Oe2rSfjwevZL1p4EHWii6y7A9dNJmjPyUiYaFYTLyNWWgqJSxg9MAs2KrE7YPqKmshtNPJE=; path=/; expires=Wed, 12-Apr-23 13:53:33 GMT; domain=.sendinblue.com; HttpOnly; Secure; SameSite=None"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"domains\": [\n        {\n            \"id\": \"6422f42c57ffaf38d12b22eb\",\n            \"domain_name\": \"mycompany.com\",\n            \"authenticated\": false,\n            \"verified\": false,\n            \"validationRequest\": null,\n            \"verifier\": null,\n            \"authenticator\": null,\n            \"creator\": {\n                \"id\": \"63930fe975f3bf52825956b7\",\n                \"email\": \"obaidullah.khan@sendinblue.com\",\n                \"method\": null,\n                \"creationDate\": \"2023-03-28T14:05:32+00:00\"\n            },\n            \"ip\": null\n        },\n        {\n            \"id\": \"64269a2ef4eb29425632cca9\",\n            \"domain_name\": \"mynewcompany.com\",\n            \"authenticated\": false,\n            \"verified\": false,\n            \"validationRequest\": null,\n            \"verifier\": null,\n            \"authenticator\": null,\n            \"creator\": {\n                \"id\": \"63930fe975f3bf52825956b7\",\n                \"email\": \"obaidullah.khan@sendinblue.com\",\n                \"method\": null,\n                \"creationDate\": \"2023-03-31T08:30:38+00:00\"\n            },\n            \"ip\": null\n        },\n        {\n            \"id\": \"64269ec8bc5e5f637b17fab8\",\n            \"domain_name\": \"gmail.com\",\n            \"authenticated\": false,\n            \"verified\": false,\n            \"validationRequest\": null,\n            \"verifier\": null,\n            \"authenticator\": null,\n            \"creator\": {\n                \"id\": \"63930fe975f3bf52825956b7\",\n                \"email\": \"obaidullah.khan@sendinblue.com\",\n                \"method\": null,\n                \"creationDate\": \"2023-03-31T08:50:16+00:00\"\n            },\n            \"ip\": null\n        },\n        {\n            \"id\": \"6436abc9462d851d8608df99\",\n            \"domain_name\": \"myfirstcompany.com\",\n            \"authenticated\": false,\n            \"verified\": false,\n            \"validationRequest\": null,\n            \"verifier\": null,\n            \"authenticator\": null,\n            \"creator\": {\n                \"id\": \"63930fe975f3bf52825956b7\",\n                \"email\": \"obaidullah.khan@sendinblue.com\",\n                \"method\": null,\n                \"creationDate\": \"2023-04-12T13:02:01+00:00\"\n            },\n            \"ip\": null\n        }\n    ],\n    \"count\": 4,\n    \"current_page\": 1,\n    \"total_pages\": 1\n}"
								}
							]
						},
						{
							"name": "Create a new domain",
							"id": "27164c75-2449-4edd-8ee5-e707b1842f83",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"myfirstcompany.com\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/senders/domains?name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										"domains"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Domain name"
										}
									]
								}
							},
							"response": [
								{
									"id": "cb247944-b4fd-46a2-8edc-306bcd001b5d",
									"name": "Domain creation success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"myfirstcompany.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/senders/domains?name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												"domains"
											],
											"query": [
												{
													"key": "name",
													"value": null,
													"description": "Domain name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 12 Apr 2023 12:54:44 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "cache-control",
											"value": "no-cache, private"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://ip-management-api.sendinblue.com,*"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true,true"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET, POST, OPTIONS, PUT, PATCH, HEAD,PUT, POST, GET, DELETE, PATCH, OPTIONS"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Authorization, Origin, X-Requested-With, Content-Type, Accept, x-xsrf-token, x-csrf-token,*"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "315"
										},
										{
											"key": "sib-request-id",
											"value": "ac62faa3-73bd-9174-8e0a-f30d24b384cf"
										},
										{
											"key": "x-sib-server",
											"value": "srv-pr-rancher-worker-12.prod.illiad.51b.tech"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7b6b9e9bcaeea039-SIN"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"id\": \"6436aa14a06d401e7559fb6b\",\n    \"domain_name\": \"myfirstcompany.com\",\n    \"message\": \"Domain added successfully. To authenticate it, add following DNS records\",\n    \"dns_records\": {\n        \"dkim_record\": {\n            \"type\": \"TXT\",\n            \"value\": \"k=rsa;p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDeMVIzrCa3T14JsNY0IRv5/2V1/v2itlviLQBwXsa7shBD6TrBkswsFUToPyMRWC9tbR/5ey0nRBH0ZVxp+lsmTxid2Y2z+FApQ6ra2VsXfbJP3HE6wAO0YTVEJt1TmeczhEd2Jiz/fcabIISgXEdSpTYJhb0ct0VJRxcg4c8c7wIDAQAB\",\n            \"host_name\": \"mail._domainkey.\",\n            \"status\": false\n        },\n        \"sendinblue_code\": {\n            \"type\": \"TXT\",\n            \"value\": \"sendinblue-code:e760f020e6d438149540cfc757e99b5a\",\n            \"host_name\": \"\",\n            \"status\": false\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Delete a domain",
							"id": "0e48adfc-332a-4e45-9f44-780cdee27123",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/senders/domains/:domainName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										"domains",
										":domainName"
									],
									"variable": [
										{
											"id": "5e6ed047-42ff-4588-a6f4-f37fd1f834ff",
											"key": "domainName",
											"value": "myfirstcompany.com"
										}
									]
								}
							},
							"response": [
								{
									"id": "6d02cd05-ac40-4194-a03f-de8e610bd3ac",
									"name": "Domain deletion success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/senders/domains/:domainName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												"domains",
												":domainName"
											],
											"variable": [
												{
													"key": "domainName",
													"value": "myfirstcompany.com"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 12 Apr 2023 12:55:12 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "cache-control",
											"value": "no-cache, private"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://ip-management-api.sendinblue.com,*"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true,true"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET, POST, OPTIONS, PUT, PATCH, HEAD,PUT, POST, GET, DELETE, PATCH, OPTIONS"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Authorization, Origin, X-Requested-With, Content-Type, Accept, x-xsrf-token, x-csrf-token,*"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "64"
										},
										{
											"key": "sib-request-id",
											"value": "5946bf09-800a-963f-9a06-56a7dbe92c98"
										},
										{
											"key": "x-sib-server",
											"value": "srv-pr-rancher-worker-8.prod.illiad.51b.tech"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7b6b9f4f1a50a039-SIN"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "null"
								}
							]
						},
						{
							"name": "Validate domain configuration",
							"id": "7d846d25-d4a2-4500-bc7a-d5c81c5db30d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.sendinblue.com/v3/senders/domains/:domainName",
									"protocol": "https",
									"host": [
										"api",
										"sendinblue",
										"com"
									],
									"path": [
										"v3",
										"senders",
										"domains",
										":domainName"
									],
									"variable": [
										{
											"id": "c44e8898-8e9a-447c-bbb9-da28da79d190",
											"key": "domainName",
											"value": "mynewcompany.com"
										}
									]
								}
							},
							"response": [
								{
									"id": "9fdc4cfc-3546-48cd-b9aa-d8f179b0e83f",
									"name": "Configuration of a specific domain",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://api.sendinblue.com/v3/senders/domains/:domainName",
											"protocol": "https",
											"host": [
												"api",
												"sendinblue",
												"com"
											],
											"path": [
												"v3",
												"senders",
												"domains",
												":domainName"
											],
											"variable": [
												{
													"key": "domainName",
													"value": "mynewcompany.com"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 12 Apr 2023 12:56:23 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "7b6ba1073d73a039-SIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://ip-management-api.sendinblue.com,*"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true,true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Authorization, Origin, X-Requested-With, Content-Type, Accept, x-xsrf-token, x-csrf-token,*"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET, POST, OPTIONS, PUT, PATCH, HEAD,PUT, POST, GET, DELETE, PATCH, OPTIONS"
										},
										{
											"key": "cf-apo-via",
											"value": "origin,host"
										},
										{
											"key": "sib-request-id",
											"value": "b4989511-6a6a-9793-a2e3-bea45ac6cbaa"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "142"
										},
										{
											"key": "x-sib-server",
											"value": "srv-pr-rancher-worker-12.prod.illiad.51b.tech"
										},
										{
											"key": "x-xss-protection",
											"value": "1"
										},
										{
											"key": "Set-Cookie",
											"value": "__cf_bm=K490lzWIrbF6NBRY1R.Bpfy6WKzYMM6x2BallbgxZ0k-1681304183-0-AdL701hhWsoI1FJWLEXnVTW8kOke/+pnR0vjaJK7x6qtLHxxNnhUp86fg2Z8KpwNNZvzupdfYhXq3xCNhEJtMgM=; path=/; expires=Wed, 12-Apr-23 13:26:23 GMT; domain=.sendinblue.com; HttpOnly; Secure; SameSite=None"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"domain\": \"mynewcompany.com\",\n    \"verified\": false,\n    \"authenticated\": false,\n    \"dns_records\": {\n        \"dkim_record\": {\n            \"type\": \"TXT\",\n            \"value\": \"k=rsa;p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDeMVIzrCa3T14JsNY0IRv5/2V1/v2itlviLQBwXsa7shBD6TrBkswsFUToPyMRWC9tbR/5ey0nRBH0ZVxp+lsmTxid2Y2z+FApQ6ra2VsXfbJP3HE6wAO0YTVEJt1TmeczhEd2Jiz/fcabIISgXEdSpTYJhb0ct0VJRxcg4c8c7wIDAQAB\",\n            \"host_name\": \"mail._domainkey.\",\n            \"status\": false\n        },\n        \"sendinblue_code\": {\n            \"type\": \"TXT\",\n            \"value\": \"sendinblue-code:e760f020e6d438149540cfc757e99b5a\",\n            \"host_name\": \"\",\n            \"status\": false\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Authenticate a domain",
							"id": "4a5d6430-ab62-44ee-9463-1d6df8b6438f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/domains/:domainName/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										"domains",
										":domainName",
										"authenticate"
									],
									"variable": [
										{
											"id": "e1a464cb-4cba-4696-9f60-6540465606e5",
											"key": "domainName",
											"value": "mynewcompany.com",
											"description": "Domain to be authenticated"
										}
									]
								}
							},
							"response": [
								{
									"id": "5e7a205c-a0eb-4993-8253-fa8cc2116749",
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/domains/:domainName/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												"domains",
												":domainName",
												"authenticate"
											],
											"variable": [
												{
													"key": "domainName",
													"value": "mynewcompany.com",
													"description": "Domain to be authenticated"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 12 Apr 2023 12:53:08 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "cache-control",
											"value": "no-cache, private"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://ip-management-api.sendinblue.com,*"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true,true"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET, POST, OPTIONS, PUT, PATCH, HEAD,PUT, POST, GET, DELETE, PATCH, OPTIONS"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Authorization, Origin, X-Requested-With, Content-Type, Accept, x-xsrf-token, x-csrf-token,*"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "219"
										},
										{
											"key": "sib-request-id",
											"value": "b3d6c5df-ba91-9091-b4d8-42ed05dd2f04"
										},
										{
											"key": "x-sib-server",
											"value": "srv-pr-rancher-worker-12.prod.illiad.51b.tech"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7b6b9c440eb5a039-SIN"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"code\": \"bad_request\",\n    \"message\": \"The domain cannot be authenticated. Check your domain DNS panel and ensure both the Sendinblue code and DKIM record are added correctly.\"\n}"
								}
							]
						}
					],
					"id": "c095a7ff-0da3-4e1c-a40f-14c0024a8330"
				},
				{
					"name": "User",
					"item": [
						{
							"name": "Get the list of all your users",
							"id": "31bbbc6a-9116-484f-bfa4-642a8fbfef6b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/organization/invited/users"
							},
							"response": [
								{
									"id": "9ca334a2-25cc-4fce-ad06-1c2cfff316b4",
									"name": "Get the list of all your users",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": "{{baseUrl}}/organization/invited/users"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 07 Nov 2023 13:00:48 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "8225c2e43d0f35fa-FRA"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://account-management-backend.sendinblue.com,*"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true,true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Authorization, Origin, X-Requested-With, Content-Type, Accept, x-xsrf-token, x-csrf-token,*"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET, POST, OPTIONS, PUT, PATCH, HEAD,PUT, POST, GET, DELETE, PATCH, OPTIONS"
										},
										{
											"key": "cf-apo-via",
											"value": "origin,host"
										},
										{
											"key": "sib-request-id",
											"value": "dfa4b3ff-48b0-9539-b8f2-7d9b2faa5b66"
										},
										{
											"key": "traceresponse",
											"value": "00-9a3c781b3e8d2df7bc03a66eb1810c48-c4d198ce98c7a369-01"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-dt-tracestate",
											"value": "14ea3eee-a07e0240@dt"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "91"
										},
										{
											"key": "x-sib-server",
											"value": "srv-pr-online-rancher-worker-60.onl.51b.tech"
										},
										{
											"key": "x-xss-protection",
											"value": "1"
										},
										{
											"key": "Set-Cookie",
											"value": "__cf_bm=EU_VIQcVi803sxGSV5O45Wbyugj1UUnqIz_Tgwgvp2c-1699362048-0-AeI5cChIaOGpMnXfeVLxqnpQ7YV+SoYpMAiebYwd81V8cJO1P/nyUNExQerhNpia9JPtDrK/JBsgs/IiCB9qsvM=; path=/; expires=Tue, 07-Nov-23 13:30:48 GMT; domain=.sendinblue.com; HttpOnly; Secure; SameSite=None"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"users\": [\n        {\n            \"email\": \"obaidullah.khan@brevo.com\",\n            \"is_owner\": true,\n            \"status\": \"active\",\n            \"feature_access\": {\n                \"marketing\": \"owner\",\n                \"conversations\": \"owner\",\n                \"crm\": \"owner\",\n                \"phone\": \"none\"\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Check user permission",
							"id": "da8d1743-78fd-494e-af16-def0d08d2f5a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization/user/:email/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										"user",
										":email",
										"permissions"
									],
									"variable": [
										{
											"id": "aa20ad75-cba4-4e1c-b8ee-dd3edb1513c0",
											"key": "email",
											"value": "",
											"description": "Email of the invited user"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke user permission",
							"id": "9135c78c-c533-4eef-a6bf-956468a97cba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization/user/invitation/revoke/:email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										"user",
										"invitation",
										"revoke",
										":email"
									],
									"variable": [
										{
											"id": "51616132-80ce-43b4-998e-a3166139acfd",
											"key": "email",
											"value": "",
											"description": "Email of the invited user"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend / Cancel invitation",
							"id": "a232920a-6e55-4cf8-a4cb-158b6517e177",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization/user/invitation/:action/:email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										"user",
										"invitation",
										":action",
										":email"
									],
									"variable": [
										{
											"id": "267ac35d-0d9a-4d23-9329-fb13ed1b068a",
											"key": "action",
											"value": "",
											"description": "Resending or cancelling an invitation"
										},
										{
											"id": "186c0292-1d98-47a4-a452-515b7b183860",
											"key": "email",
											"value": "",
											"description": "Email of the invited user"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Send invitation to user",
							"id": "da69453e-4b3f-44e5-9623-d57a796bc356",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/organization/user/invitation/send"
							},
							"response": [
								{
									"id": "15c55492-15a8-4b46-b37b-7f9f012bcf4e",
									"name": "Send invitation to user",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"all_features_access\": true,\n    \"email\": \"obaidullah.khan@brevo.com\"\n}"
										},
										"url": "{{baseUrl}}/organization/user/invitation/send"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 07 Nov 2023 13:06:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-dt-tracestate",
											"value": "14ea3eee-a07e0240@dt"
										},
										{
											"key": "traceresponse",
											"value": "00-474aa548570b84d07c19b7d65b450d97-f309a46196b98195-01"
										},
										{
											"key": "cache-control",
											"value": "no-cache, private"
										},
										{
											"key": "access-control-allow-origin",
											"value": "https://account-management-backend.sendinblue.com,*"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true,true"
										},
										{
											"key": "access-control-allow-methods",
											"value": "GET, POST, OPTIONS, PUT, PATCH, HEAD,PUT, POST, GET, DELETE, PATCH, OPTIONS"
										},
										{
											"key": "access-control-allow-headers",
											"value": "Authorization, Origin, X-Requested-With, Content-Type, Accept, x-xsrf-token, x-csrf-token,*"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "1619"
										},
										{
											"key": "sib-request-id",
											"value": "26b895ee-76d9-9264-9ab1-d2d251f5773c"
										},
										{
											"key": "x-sib-server",
											"value": "srv-pr-rancher-worker-15.prod.illiad.51b.tech"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "8225cb2cff8035fa-FRA"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"OK\"\n}"
								}
							]
						},
						{
							"name": "Update permission for a user",
							"id": "a06108e7-f159-440e-a140-7337b95d1b20",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization/user/update/permissions?all_features_access=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										"user",
										"update",
										"permissions"
									],
									"query": [
										{
											"key": "all_features_access",
											"value": "true",
											"type": "text"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "b3fb03ad-bb38-45bc-ae96-d41f2c7e69d4",
					"description": "Invited Users Management"
				}
			],
			"id": "d4643822-042f-4c27-a52f-435761bfad35",
			"description": "Under this collection you can manage multiple account specific objects such as:  \n\n\\-> Webhooks for Transactional events, Marketing events , Payments events and Inbound Parsing API events.\n\n\\-> Reseller and Sub-accounts settings such as credit allocation , creation and deletion.\n\n\\-> Track asynchronous processes being done for your account such as contact imports, ecommerce imports, data exports etc.\n\n\\-> Get information about your plan and credits."
		},
		{
			"name": "Sales CRM",
			"item": [
				{
					"name": "Companies",
					"item": [
						{
							"name": "Get all Companies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71db9518-49bf-4dd5-b0d9-072cd3441d96",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Items array in the response should exist and be an array\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.items).to.exist.and.to.be.an('array');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"  var schema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"      items: {\r",
											"        type: \"array\",\r",
											"        items: {\r",
											"          type: \"object\",\r",
											"          properties: {\r",
											"            id: { type: \"string\" },\r",
											"            attributes: {\r",
											"              type: \"object\",\r",
											"              properties: {\r",
											"                created_at: { type: \"string\", format: \"date-time\" },\r",
											"                domain: { type: \"string\" },\r",
											"                industry: { type: \"string\" },\r",
											"                last_updated_at: { type: \"string\", format: \"date-time\" },\r",
											"                name: { type: \"string\" },\r",
											"                number_of_contacts: { type: \"number\" },\r",
											"                owner: { type: \"string\" },\r",
											"                owner_assign_date: { type: \"string\", format: \"date-time\" },\r",
											"                phone_number: { type: \"string\" },\r",
											"                revenue: { type: \"number\" }\r",
											"              },\r",
											"              required: [\"created_at\", \"domain\", \"last_updated_at\", \"name\", \"number_of_contacts\", \"owner\", \"owner_assign_date\", \"phone_number\"]\r",
											"            },\r",
											"            linkedContactsIds: {\r",
											"              type: \"array\",\r",
											"              items: { type: \"number\" }\r",
											"            },\r",
											"            linkedDealsIds: {\r",
											"              type: \"array\",\r",
											"              items: { type: \"string\" }\r",
											"            }\r",
											"          },\r",
											"          required: [\"id\", \"attributes\", \"linkedContactsIds\", \"linkedDealsIds\"]\r",
											"        }\r",
											"      },\r",
											"      pager: {\r",
											"        type: \"object\",\r",
											"        properties: {\r",
											"          current: { type: \"number\" },\r",
											"          limit: { type: \"number\" },\r",
											"          from: { type: \"number\" },\r",
											"          to: { type: \"number\" },\r",
											"          count: { type: \"number\" },\r",
											"          total: { type: \"number\" },\r",
											"          max: { type: \"number\" }\r",
											"        },\r",
											"        required: [\"current\", \"limit\", \"from\", \"to\", \"count\", \"total\", \"max\"]\r",
											"      },\r",
											"      refs: {\r",
											"        type: \"object\",\r",
											"        properties: {\r",
											"          linkedContacts: {\r",
											"            type: \"array\",\r",
											"            items: {\r",
											"              type: \"object\",\r",
											"              properties: {\r",
											"                _id: { type: \"string\" },\r",
											"                contactId: { type: \"number\" },\r",
											"                id: { type: \"number\" },\r",
											"                email: { type: \"string\" },\r",
											"                attributes: { type: \"object\" },\r",
											"                AccountID: { type: [\"null\", \"string\"] }\r",
											"              },\r",
											"              required: [\"_id\", \"contactId\", \"id\", \"email\", \"attributes\", \"AccountID\"]\r",
											"            }\r",
											"          }\r",
											"        },\r",
											"        required: [\"linkedContacts\"]\r",
											"      }\r",
											"    },\r",
											"    required: [\"items\", \"pager\", \"refs\"]\r",
											"  };\r",
											"\r",
											"  var response = pm.response.json();\r",
											"  pm.expect(tv4.validate(response, schema)).to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dd03e197-eb8c-4f64-89f6-efb998a1320c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{api-key}}",
										"key": "api-key"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies?page=1&limit=50&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies"
									],
									"query": [
										{
											"key": "filters",
											"value": "",
											"description": "Filter by attrbutes. If you have filter for owner on your side please send it as {\"attributes.owner\":\"6299dcf3874a14eacbc65c46\"}",
											"disabled": true
										},
										{
											"key": "linkedContactsIds",
											"value": "",
											"description": "Filter by linked contacts ids",
											"disabled": true
										},
										{
											"key": "linkedDealsIds",
											"value": "",
											"description": "Filter by linked Deals ids",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "Index of the first document of the page"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "The field used to sort field names.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "78dba3c5-3f4e-422d-8185-eee9f32cd756",
									"name": "Returns companies list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies?filters=veniam elit in&linkedContactsIds=13396752&linkedDealsIds=veniam elit in&page=13396752&limit=13396752&sort=desc&sortBy=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "filters",
													"value": "veniam elit in"
												},
												{
													"key": "linkedContactsIds",
													"value": "13396752"
												},
												{
													"key": "linkedDealsIds",
													"value": "veniam elit in"
												},
												{
													"key": "page",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"items\": [\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n        \"domain\": \"xyz\",\n        \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n        \"name\": \"text\",\n        \"number_of_contacts\": 0,\n        \"owner\": \"62260474111b1101704a9d85\",\n        \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n        \"phone_number\": 8171844192,\n        \"revenue\": 10\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedDealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n        \"domain\": \"xyz\",\n        \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n        \"name\": \"text\",\n        \"number_of_contacts\": 0,\n        \"owner\": \"62260474111b1101704a9d85\",\n        \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n        \"phone_number\": 8171844192,\n        \"revenue\": 10\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedDealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "28dd623d-7482-4e6e-9239-a460c5b158ac",
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies?filters=veniam elit in&linkedContactsIds=13396752&linkedDealsIds=veniam elit in&page=13396752&limit=13396752&sort=desc&sortBy=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "filters",
													"value": "veniam elit in"
												},
												{
													"key": "linkedContactsIds",
													"value": "13396752"
												},
												{
													"key": "linkedDealsIds",
													"value": "veniam elit in"
												},
												{
													"key": "page",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a company",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1f61f18-01ae-409a-b608-77ba0ec8a544",
										"exec": [
											"pm.test(\"verify response code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"const responseData = pm.response.json()\r",
											"if(pm.response.code == 200){\r",
											"    pm.collectionVariables.set(\"companyid\", responseData.id)\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields - id\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Id is in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.id).to.be.a('string');\r",
											"    pm.expect(responseData.id).to.match(/[a-fA-F0-9]{24}/); // Check for a valid ObjectId format\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Id is not an empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify that the 'id' is stored in the collection variable 'companyid'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.have.property('id');\r",
											"    pm.collectionVariables.set(\"companyid\", responseData.id);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 800ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(800);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a88fee90-ce7d-45e7-bc3f-3ad68fd78e25",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Testify\",\n\"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"655c47509c96e22db8742846\",\n    \"phone_number\": \"07069423351\"\n  }, \n  \"countryCode\": 91\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/companies"
							},
							"response": [
								{
									"id": "5f520d38-a935-4ce6-8d3a-855b11078213",
									"name": "Created new Company",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"60e68d60582a3b006f524197\"\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/companies"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"id": "d21b7256-73f9-4995-ad12-98dc5faa5094",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"60e68d60582a3b006f524197\"\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/companies"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get company attributes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "071a3361-5e79-4289-a4f6-760c92112df3",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response is an array with at least one element\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify attributeOptions array contains the expected number of elements\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    responseData.forEach(function(item) {\r",
											"        pm.expect(item.attributeOptions).to.be.an('array').with.lengthOf(2);\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Ensure that attributeOptions array contains objects with keys 'key' and 'value'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    responseData.forEach(function(attribute) {\r",
											"        attribute.attributeOptions.forEach(function(option) {\r",
											"            pm.expect(option).to.be.an('object');\r",
											"            pm.expect(option).to.have.property('key');\r",
											"            pm.expect(option).to.have.property('value');\r",
											"        });\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0535f3a9-1419-4c65-88c3-f90d442ae5a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/companies/attributes"
							},
							"response": [
								{
									"id": "5247df72-11ab-4c0c-8174-50047b4044a6",
									"name": "Returns list of company attributes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/companies/attributes"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"internalName\": \"name\",\n    \"label\": \"Company Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  },\n  {\n    \"internalName\": \"name\",\n    \"label\": \"Company Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  }\n]"
								}
							]
						},
						{
							"name": "Link and Unlink company with contact and deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "789a9900-bc49-4a5d-b574-3a77d3a572d3",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d460c36c-000b-47bd-bcc6-f4821154177a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"linkContactIds\": [\n    {{contactid}}\n   \n  ],\n  /*\"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n */\n \"unlinkDealsIds\": [\n    \"{{dealid}}\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/companies/link-unlink/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"link-unlink",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{companyid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "b51d4802-76dd-4dd6-bbba-b404c7955037",
									"name": "Successfully linked/unlinked contacts/deals with the company.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkDealsIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "6ad2c594-a38f-4870-9c66-2d639d159b12",
									"name": "Returned when query params are invalid or invalid data provided in request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkDealsIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get a company",
							"id": "788bf50e-2021-43f9-ac32-955b77dfaa3c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"id": "26406c7f-3d51-4b1c-9026-2818a3b1fb29",
											"key": "id",
											"value": "",
											"description": "(Required) Get Company Details"
										}
									]
								}
							},
							"response": [
								{
									"id": "ae702b94-1554-4019-ad1c-63609de5ab1c",
									"name": "Returns the Company",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n    \"domain\": \"xyz\",\n    \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n    \"name\": \"text\",\n    \"number_of_contacts\": 0,\n    \"owner\": \"62260474111b1101704a9d85\",\n    \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n    \"phone_number\": 8171844192,\n    \"revenue\": 10\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"id": "e77ac612-1322-483a-b049-fa4cc43acda6",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route company id is not valid.\"\n}"
								},
								{
									"id": "ec3ec390-e88e-4990-b74c-1723cdfbc1b9",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a company",
							"id": "7235444a-b924-4b57-87a7-0cb77281b7c3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"id": "5157835d-189d-4e37-a0f6-07abeacf8bde",
											"key": "id",
											"value": "",
											"description": "(Required) Company ID to delete"
										}
									]
								}
							},
							"response": [
								{
									"id": "47903281-8b3c-4602-a199-9f2b3a8f313a",
									"name": "When company deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "88f149a3-9502-4ca6-9ead-d42921a74dd5",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route company id is not valid.\"\n}"
								},
								{
									"id": "d7faa21f-e5f6-4450-a016-5e723043a583",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Create a company after deletion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1f61f18-01ae-409a-b608-77ba0ec8a544",
										"exec": [
											"pm.test(\"verify response code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"const responseData = pm.response.json()\r",
											"if(pm.response.code == 200){\r",
											"    pm.collectionVariables.set(\"companyid\", responseData.id)\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "147bbfa3-57b9-481d-a5c6-7769520701ee",
										"exec": [
											"pm.collectionVariables.set(\"owner\", \"655c47509c96e22db8742846\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "04b08bff-4ba3-4937-8b05-72d981cadffa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Testify {{$randomFirstName}}\",\n\"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric {{$randomNoun}}\",\n    \"owner\": \"655c47509c96e22db8742846\",\n    \"phone_number\": \"07069423351\"\n  }, \n  \"countryCode\": 91\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/companies"
							},
							"response": [
								{
									"id": "77bde618-3808-4420-b94e-6f8dd515275c",
									"name": "Created new Company",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"60e68d60582a3b006f524197\"\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/companies"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"id": "5373c43a-dc96-4f19-a3fd-d16edf2dec0a",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"60e68d60582a3b006f524197\"\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/companies"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Update a company",
							"id": "5565401a-4ce2-489f-add6-a4b575f9617d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"id": "dd3dd9ff-ba89-4a8c-af77-e0b93f8179a3",
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "12b13027-81f7-4817-800d-e0dfe4163e9c",
									"name": "Company updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n    \"domain\": \"xyz\",\n    \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n    \"name\": \"text\",\n    \"number_of_contacts\": 0,\n    \"owner\": \"62260474111b1101704a9d85\",\n    \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n    \"phone_number\": 8171844192,\n    \"revenue\": 10\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"id": "74ec57a3-54ae-4bb9-a885-5e61abf7e3e1",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"id": "44e519b0-5c05-4d14-9b97-1cae27f4c1e5",
									"name": "Returned when company id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Get pipeline stages",
							"id": "cfc24180-6b1f-42d1-b627-f572f2f7e372",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/crm/pipeline/details"
							},
							"response": [
								{
									"id": "28529c3d-a69b-41e5-a35c-7b84ebf057ee",
									"name": "Returns list of pipeline stages",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/crm/pipeline/details"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"stages\": [\n    {\n      \"id\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n      \"name\": \"New\"\n    },\n    {\n      \"id\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n      \"name\": \"New\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "ca2478fe-4596-4af0-afb2-bd2553587f8a"
				},
				{
					"name": "Deals",
					"item": [
						{
							"name": "Get all deals",
							"id": "caa406c9-31b2-4f25-a7dd-268885074a8b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals?filter[attributes]=&filter[linkedCompaniesIds]=&filter[linkedContactsIds]=&offset=0&limit=50&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals"
									],
									"query": [
										{
											"key": "filter[attributes]",
											"value": "",
											"description": "Filter by attrbutes. If you have filter for owner on your side please send it as `attributes.owner`.\""
										},
										{
											"key": "filter[linkedCompaniesIds]",
											"value": "",
											"description": "Filter by linked companies ids"
										},
										{
											"key": "filter[linkedContactsIds]",
											"value": "",
											"description": "Filter by linked companies ids"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "a96ff79d-46d5-49a7-ae8b-15f81cd20d13",
									"name": "Returns deals list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals?filter[attributes]=veniam elit in&filter[linkedCompaniesIds]=veniam elit in&filter[linkedContactsIds]=veniam elit in&offset=13396752&limit=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											],
											"query": [
												{
													"key": "filter[attributes]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedCompaniesIds]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedContactsIds]",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"items\": [\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"deal_name\": \"testname\",\n        \"deal_owner\": \"6093d2425a9b436e9519d034\",\n        \"amount\": 12,\n        \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n        \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n        \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n        \"created_at\": \"2022-05-30T07:42:05.671Z\",\n        \"number_of_contacts\": 1,\n        \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n        \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n        \"next_activity_date\": null,\n        \"number_of_activities\": 0\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedCompaniesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"deal_name\": \"testname\",\n        \"deal_owner\": \"6093d2425a9b436e9519d034\",\n        \"amount\": 12,\n        \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n        \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n        \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n        \"created_at\": \"2022-05-30T07:42:05.671Z\",\n        \"number_of_contacts\": 1,\n        \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n        \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n        \"next_activity_date\": null,\n        \"number_of_activities\": 0\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedCompaniesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "a8221a97-b5cb-46a6-b6ea-babc17f1d331",
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals?filter[attributes]=veniam elit in&filter[linkedCompaniesIds]=veniam elit in&filter[linkedContactsIds]=veniam elit in&offset=13396752&limit=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											],
											"query": [
												{
													"key": "filter[attributes]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedCompaniesIds]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedContactsIds]",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67e16736-c341-491f-b12e-bd1f6c54ead5",
										"exec": [
											"pm.test(\"verify response code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"const responseData = pm.response.json()\r",
											"if(pm.response.code == 200){\r",
											"    pm.collectionVariables.set(\"dealid\", responseData.id)\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "333fcc3d-f815-482a-b688-6c30b3d415b4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Deal: Connect with company\",\n  \"attributes\": {\n    \"deal_owner\": \"{{owner}}\",\n    \"amount\": 12\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/crm/deals"
							},
							"response": [
								{
									"id": "b6e517e8-1700-4fec-836d-18b421713013",
									"name": "Created new Deal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with company\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/crm/deals"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"id": "833a0db7-7e29-444a-af09-6778c013ad1d",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with company\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/crm/deals"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Link and Unlink a deal with contacts and companies",
							"id": "7892a02d-2e86-4d3f-8d1d-5e8fe3d9ae24",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkCompanyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkCompanyIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										"link-unlink",
										":id"
									],
									"variable": [
										{
											"id": "167c2816-8daa-438c-9ee6-7342c7a69121",
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "f05ee26b-62d4-4283-9aeb-121538dcad68",
									"name": "Successfully linked/unlinked contacts/companies with the deal.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkCompanyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkCompanyIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "638f4e63-4b0c-4169-8df0-49158ea6ed56",
									"name": "Returned when query params are invalid or invalid data provided in request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkCompanyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkCompanyIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get deal attributes",
							"id": "0269dd8e-5d5c-404c-92df-e778361cc325",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/crm/attributes/deals"
							},
							"response": [
								{
									"id": "06fcc1d1-85d7-4778-a27e-9c9798e2a78b",
									"name": "Returns list of deal attributes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/crm/attributes/deals"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"internalName\": \"deal_name\",\n    \"label\": \"Deal Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  },\n  {\n    \"internalName\": \"deal_name\",\n    \"label\": \"Deal Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  }\n]"
								}
							]
						},
						{
							"name": "Get a deal",
							"id": "158e472e-5eea-4b64-a9ed-48197c886ac0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"id": "5ea7deb7-9640-4d61-a387-bf10b31dd8b7",
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "7e090978-bad3-4bb1-be9d-5474c48a9bdc",
									"name": "Returns the deal by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"deal_name\": \"testname\",\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12,\n    \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n    \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n    \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n    \"created_at\": \"2022-05-30T07:42:05.671Z\",\n    \"number_of_contacts\": 1,\n    \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n    \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n    \"next_activity_date\": null,\n    \"number_of_activities\": 0\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedCompaniesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"id": "4c9450c0-6e91-4433-bc60-a7738ec6e443",
									"name": "Returned when task id is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"id": "6a3519d9-2032-4f5a-9fec-fab5fa7a5cb5",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a deal",
							"id": "3cea7e93-7d10-4af8-b8ba-e52c7951f6b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"id": "d90997a0-a1b9-4384-83e2-5e95760c39b7",
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "8af02f1a-4fa3-4d27-88b6-be331e895205",
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "a6a7aac4-908e-44f4-8ec7-6377d3242b60",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"id": "a2250621-93d8-4606-a654-9f8723c5ecad",
									"name": "Returned when deal id is not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a deal",
							"id": "4690565d-f77c-4278-9c4f-b14885d076a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"id": "f4d45f21-b661-4e24-970b-b9a5c1ade94d",
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "afe655bc-1ee2-4bea-ad6e-8968060edc1d",
									"name": "Deal updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "f0f63540-e511-40e2-82be-304737f0b918",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"id": "e5d068c3-4323-4944-989c-a535700822af",
									"name": "Returned when deal id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					],
					"id": "a37507bd-096b-4a5f-ba84-b6c7a5572e7f"
				},
				{
					"name": "Tasks",
					"item": [
						{
							"name": "Get all tasks",
							"id": "b832e18c-f012-4637-b3be-bd58c02c16ef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasks?filter[type]=&filter[status]=&filter[date]=&filter[assignTo]=&filter[contacts]=&filter[deals]=&filter[companies]=&dateFrom=1677168398000&dateTo=1677168398000&offset=0&limit=50&sort=desc&sortBy=name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "",
											"description": "Filter by task type (ID)"
										},
										{
											"key": "filter[status]",
											"value": "",
											"description": "Filter by task status"
										},
										{
											"key": "filter[date]",
											"value": "",
											"description": "Filter by date"
										},
										{
											"key": "filter[assignTo]",
											"value": "",
											"description": "Filter by assignTo id"
										},
										{
											"key": "filter[contacts]",
											"value": "",
											"description": "Filter by contact ids"
										},
										{
											"key": "filter[deals]",
											"value": "",
											"description": "Filter by deals ids"
										},
										{
											"key": "filter[companies]",
											"value": "",
											"description": "Filter by companies ids"
										},
										{
											"key": "dateFrom",
											"value": "1677168398000",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)"
										},
										{
											"key": "dateTo",
											"value": "1677168398000",
											"description": "dateTo to date range filter type (timestamp in milliseconds)"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed"
										},
										{
											"key": "sortBy",
											"value": "name",
											"description": "The field used to sort field names."
										}
									]
								}
							},
							"response": [
								{
									"id": "2696f71c-a1e3-4c15-b653-6d517e259b6d",
									"name": "Returns task list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks?filter[type]=veniam elit in&filter[status]=done&filter[date]=range&filter[assignTo]=veniam elit in&filter[contacts]=veniam elit in&filter[deals]=veniam elit in&filter[companies]=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc&sortBy=name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											],
											"query": [
												{
													"key": "filter[type]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[status]",
													"value": "done"
												},
												{
													"key": "filter[date]",
													"value": "range"
												},
												{
													"key": "filter[assignTo]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[contacts]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[deals]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[companies]",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"items\": [\n    {\n      \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n      \"name\": \"Task: Connect with client\",\n      \"id\": \"61a5cd07ca1347c82306ad06\",\n      \"contactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"dealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ],\n      \"companiesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n      \"name\": \"Task: Connect with client\",\n      \"id\": \"61a5cd07ca1347c82306ad06\",\n      \"contactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"dealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ],\n      \"companiesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "1b5897b8-9c95-4f89-a055-0f053b6f77a3",
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks?filter[type]=veniam elit in&filter[status]=done&filter[date]=range&filter[assignTo]=veniam elit in&filter[contacts]=veniam elit in&filter[deals]=veniam elit in&filter[companies]=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc&sortBy=name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											],
											"query": [
												{
													"key": "filter[type]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[status]",
													"value": "done"
												},
												{
													"key": "filter[date]",
													"value": "range"
												},
												{
													"key": "filter[assignTo]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[contacts]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[deals]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[companies]",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "name"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a task",
							"id": "a67096e8-ca0d-4bab-baff-21bc96d98022",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"duration\": 600000,\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/crm/tasks"
							},
							"response": [
								{
									"id": "bf904e41-078d-478c-920e-dd1db48c68f0",
									"name": "Created new task",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"duration\": 600000,\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/crm/tasks"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"id": "5b0ff96a-7d2a-4d19-bb00-49824ef1b098",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"duration\": 600000,\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/crm/tasks"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Get all task types",
							"id": "ed305d37-10bb-4c41-8d34-513cf7316315",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/crm/tasktypes"
							},
							"response": [
								{
									"id": "4bfd645b-6af6-4e99-8834-a8682f26d1a1",
									"name": "Returns all the Task types",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/crm/tasktypes"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"61a88a2eb7a574180261234\",\n  \"title\": \"Email\"\n}"
								}
							]
						},
						{
							"name": "Get a task",
							"id": "4f12a95d-5256-4227-8baf-1becb8124d69",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"id": "ce6ff3e6-8fa0-4e2a-aa6e-0399c031b570",
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "4b2f805a-b42f-4edb-91bd-064ab5317ece",
									"name": "Returns the Task by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"name\": \"Task: Connect with client\",\n  \"id\": \"61a5cd07ca1347c82306ad06\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"id": "c0fb76c5-01af-4f60-9ebe-2ce2cc9df76f",
									"name": "Returned when task id is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"id": "8d8bc6ea-9b37-4a5e-8464-3184f7dd7b72",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a task",
							"id": "c2bf56f1-4799-4d22-a59c-dddf88c1705e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"id": "7a4d1ef4-5d9c-49af-805d-45865f62c42f",
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "3b032c59-fa26-430a-9499-4cc3c0b2c065",
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "218a098c-bb60-4bff-8b07-8c8cf787ff21",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"id": "057c93b8-46c3-4e34-9349-03f495c1881c",
									"name": "Returned when task id is not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a task",
							"id": "bdeee3f3-07bc-4f68-92c3-b6b5659863c3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"minutes\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"id": "794edfd9-ad28-4d58-9e30-d5d201685e60",
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "88496747-8518-4387-ba9d-bbda478ec052",
									"name": "Task updated succussfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "b960c821-e922-49ef-b82b-dcdb1225f2b8",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"id": "ab38cd99-d25d-4208-96bb-2515054cc715",
									"name": "Returned when task id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					],
					"id": "7e2f711d-c75d-41b0-843e-d8bba25e9de1"
				},
				{
					"name": "Notes",
					"item": [
						{
							"name": "Get all notes",
							"id": "c32b30c8-5008-4767-9e86-4b4e4b28a01a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes?entity=deals&entityIds=&dateFrom=1677168398000&dateTo=1677254798000&offset=0&limit=50&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes"
									],
									"query": [
										{
											"key": "entity",
											"value": "deals",
											"description": "Filter by note entity type"
										},
										{
											"key": "entityIds",
											"value": "",
											"description": "Filter by note entity IDs"
										},
										{
											"key": "dateFrom",
											"value": "1677168398000",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)"
										},
										{
											"key": "dateTo",
											"value": "1677254798000",
											"description": "dateTo to date range filter type (timestamp in milliseconds)"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "7ad6626c-62f0-4f26-bcbb-32fcc6728c50",
									"name": "Returns notes list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"text\": \"In communication with client for resolution of queries.\",\n    \"id\": \"61a5cd07ca1347c82306ad09\",\n    \"contactIds\": [\n      247,\n      1,\n      2\n    ],\n    \"dealIds\": [\n      \"61a5ce58c5d4795761045990\",\n      \"61a5ce58c5d4795761045991\"\n    ],\n    \"authorId\": {\n      \"email\": \"johndoe@example.com\",\n      \"locale\": \"en_GB\",\n      \"timezone\": \"Asia/Kolkata\",\n      \"name\": {\n        \"fullName\": \"John Doe\"\n      }\n    },\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n    \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n  },\n  {\n    \"text\": \"In communication with client for resolution of queries.\",\n    \"id\": \"61a5cd07ca1347c82306ad09\",\n    \"contactIds\": [\n      247,\n      1,\n      2\n    ],\n    \"dealIds\": [\n      \"61a5ce58c5d4795761045990\",\n      \"61a5ce58c5d4795761045991\"\n    ],\n    \"authorId\": {\n      \"email\": \"johndoe@example.com\",\n      \"locale\": \"en_GB\",\n      \"timezone\": \"Asia/Kolkata\",\n      \"name\": {\n        \"fullName\": \"John Doe\"\n      }\n    },\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n    \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n  }\n]"
								},
								{
									"id": "a50c0460-d378-48ab-866e-53c02ce33515",
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a note",
							"id": "9945d3b4-03de-465d-bb62-43618e758c9c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/crm/notes"
							},
							"response": [
								{
									"id": "e8b9a344-b444-4c63-89e0-bc2ef0a2df79",
									"name": "Created new note",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/crm/notes"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad09\"\n}"
								},
								{
									"id": "dcba993a-2ea5-4a3d-ab2c-182a8056956f",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/crm/notes"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								},
								{
									"id": "5026ed67-04e4-4c31-86d6-a044808198c3",
									"name": "Format is not supported",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/crm/notes"
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"The format not supported for deserialization.\"\n}"
								}
							]
						},
						{
							"name": "Get a note",
							"id": "b2f27c74-4957-4a14-9f8f-0a897b484545",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"id": "0f7bd1b1-c36e-4d80-a195-bc1db0cb0649",
											"key": "id",
											"value": "",
											"description": "(Required) Note ID to get"
										}
									]
								}
							},
							"response": [
								{
									"id": "9bc616fa-2fa4-4895-8360-d8e13a4e36a2",
									"name": "Returns the Note by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"id\": \"61a5cd07ca1347c82306ad09\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"authorId\": {\n    \"email\": \"johndoe@example.com\",\n    \"locale\": \"en_GB\",\n    \"timezone\": \"Asia/Kolkata\",\n    \"name\": {\n      \"fullName\": \"John Doe\"\n    }\n  },\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n  \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"id": "0c1d90fe-0874-4167-ab25-2aa915f036f2",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"id": "4f186cc9-9246-4721-8109-caef8b0ebef5",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a note",
							"id": "09f03778-b8c2-4648-a054-cdfeba95d0e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"id": "3a82e186-fd98-4f5a-befe-fc22e4ade625",
											"key": "id",
											"value": "",
											"description": "(Required) Note ID to update"
										}
									]
								}
							},
							"response": [
								{
									"id": "5490904d-0b41-47d7-8240-9ea5597dad61",
									"name": "Note updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "fd0dd209-0089-4077-a14c-7b51c0641c6f",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								},
								{
									"id": "c05e2152-5343-4d79-85e4-71d456a6083b",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								},
								{
									"id": "6723b9e6-7517-4015-ad59-bf1732fb8f7d",
									"name": "Format is not supported",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"The format not supported for deserialization.\"\n}"
								}
							]
						},
						{
							"name": "Delete a note",
							"id": "6da0ba11-f8bd-4fc6-bffe-6d6f86dd0d97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"id": "3c334114-14d3-4f89-9408-d23212fe5f5f",
											"key": "id",
											"value": "",
											"description": "(Required) Note ID to delete"
										}
									]
								}
							},
							"response": [
								{
									"id": "e293abb7-f561-40ba-bd29-f65ec21b1cb4",
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "cdcae4be-1ea6-4b24-b2ce-a937101ebb4f",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"id": "df1d29b6-4948-4a6d-a5e7-ef40d195d0f7",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					],
					"id": "664c941c-2d0d-4ec5-8238-3b886dfe3be3"
				},
				{
					"name": "Files",
					"item": [
						{
							"name": "Get all files",
							"id": "fc6a338b-977f-4977-8965-848173caa767",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files?entity=deals&entityIds=&dateFrom=1677168398000&dateTo=1677254798000&offset=0&limit=50&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files"
									],
									"query": [
										{
											"key": "entity",
											"value": "deals",
											"description": "Filter by file entity type"
										},
										{
											"key": "entityIds",
											"value": "",
											"description": "Filter by file entity IDs"
										},
										{
											"key": "dateFrom",
											"value": "1677168398000",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)"
										},
										{
											"key": "dateTo",
											"value": "1677254798000",
											"description": "dateTo to date range filter type (timestamp in milliseconds)"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"id": "55c05066-dde5-4747-befe-9ec6432fc72e",
									"name": "Returns files list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"name\": \"example.png\",\n    \"authorId\": \"61a5ce58y5d4795761045991\",\n    \"contactId\": 1,\n    \"dealId\": \"61a5ce58c5d4795761045991\",\n    \"companyId\": \"61a5ce58c5d4795761045991\",\n    \"size\": 10,\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n  },\n  {\n    \"name\": \"example.png\",\n    \"authorId\": \"61a5ce58y5d4795761045991\",\n    \"contactId\": 1,\n    \"dealId\": \"61a5ce58c5d4795761045991\",\n    \"companyId\": \"61a5ce58c5d4795761045991\",\n    \"size\": 10,\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n  }\n]"
								},
								{
									"id": "6945826d-970f-4655-8fb2-a2af6d50380c",
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Upload a file",
							"id": "bcd72e18-9098-429a-a404-0cb261ca18e2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) File data to create a file.",
											"type": "file",
											"value": null
										},
										{
											"key": "dealId",
											"value": "proident",
											"type": "text"
										},
										{
											"key": "contactId",
											"value": "27165486",
											"type": "text"
										},
										{
											"key": "companyId",
											"value": "271654863",
											"type": "text"
										}
									]
								},
								"url": "{{baseUrl}}/crm/files"
							},
							"response": [
								{
									"id": "c9ae181f-cda4-48f7-8c16-e0fe4fbeaf14",
									"name": "Returns the created File with additional details",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) File data to create a file.",
													"type": "file",
													"src": []
												},
												{
													"key": "dealId",
													"value": "proident",
													"type": "text"
												},
												{
													"key": "contactId",
													"value": "27165486",
													"type": "text"
												},
												{
													"key": "companyId",
													"value": "nisi aliquip",
													"type": "text"
												}
											]
										},
										"url": "{{baseUrl}}/crm/files"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"name\": \"example.png\",\n  \"authorId\": \"61a5ce58y5d4795761045991\",\n  \"contactId\": 1,\n  \"dealId\": \"61a5ce58c5d4795761045991\",\n  \"companyId\": \"61a5ce58c5d4795761045991\",\n  \"size\": 10,\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"id": "5571752b-142e-4e92-87d6-5c2ca64e3959",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) File data to create a file.",
													"type": "file",
													"src": []
												},
												{
													"key": "dealId",
													"value": "proident",
													"type": "text"
												},
												{
													"key": "contactId",
													"value": "27165486",
													"type": "text"
												},
												{
													"key": "companyId",
													"value": "nisi aliquip",
													"type": "text"
												}
											]
										},
										"url": "{{baseUrl}}/crm/files"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Invalid deals ids format.\"\n}"
								}
							]
						},
						{
							"name": "Download a file",
							"id": "6044c310-725c-456c-a202-3b29f8dc1ae6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										":id"
									],
									"variable": [
										{
											"id": "68754c08-5f48-4671-a2f6-452e302c450e",
											"key": "id",
											"value": "",
											"description": "(Required) File id to download."
										}
									]
								}
							},
							"response": [
								{
									"id": "b152b9ca-4de2-4930-90b5-5ca4a161c11d",
									"name": "Returns downloadable file link. Valid for next 5 minutes only.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"fileUrl\": \"https://storage.googleapis.com/sendinblue-app-crm.......-sample.pdf\"\n}"
								},
								{
									"id": "4d5b9b6f-5b13-4e2c-aabf-b6f506aa4172",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"id": "23920ece-ac18-440b-ad36-d13adaede6f5",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a file",
							"id": "981095a9-6606-454d-be85-ef577ff39f86",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										":id"
									],
									"variable": [
										{
											"id": "8f79f08a-4cb9-40b8-ab30-b28276dc0c74",
											"key": "id",
											"value": "",
											"description": "(Required) File id to delete."
										}
									]
								}
							},
							"response": [
								{
									"id": "b856f484-d90c-4d45-9279-aa17a6890c16",
									"name": "Returned when file is deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "25dc569b-c7a5-4846-9375-57b7841e05ec",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"id": "0e1cbb86-8c59-4ca5-93d3-48e07447376a",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Get file details",
							"id": "54b655b7-24bf-4cc3-849c-54f938d37d27",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/:id/data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										":id",
										"data"
									],
									"variable": [
										{
											"id": "be7d6496-d649-4f9d-904e-ee93628ed8cf",
											"key": "id",
											"value": "",
											"description": "(Required) File id to get file data."
										}
									]
								}
							},
							"response": [
								{
									"id": "74a3ecb6-ad93-4b7b-8c35-7b9f20dd9bc4",
									"name": "Returned when file is found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"name\": \"example.png\",\n  \"authorId\": \"61a5ce58y5d4795761045991\",\n  \"contactId\": 1,\n  \"dealId\": \"61a5ce58c5d4795761045991\",\n  \"companyId\": \"61a5ce58c5d4795761045991\",\n  \"size\": 10,\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"id": "7ad40f63-d01e-4f44-9d14-844917900907",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"id": "91d2830c-170d-43bb-8eb1-714e5ad21de6",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					],
					"id": "31a782fa-6d60-4005-bcb1-1dec2cd75510"
				}
			],
			"id": "41710ecc-80e0-477d-bfca-213e6b673215"
		},
		{
			"name": "Conversations",
			"item": [
				{
					"name": "Messages",
					"item": [
						{
							"name": "Send a message as an agent",
							"id": "dc942508-8c4d-4543-a62e-b7909a8274da",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Hello! How can I help you?\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/conversations/messages"
							},
							"response": [
								{
									"id": "3b1d92b6-00cd-40ce-9455-c3f24a152b35",
									"name": "Newly created message is returned as a response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Hello! How can I help you?\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/conversations/messages"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"id": "6e453273-b57d-4b7a-abc7-1897af93bc50",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Hello! How can I help you?\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/conversations/messages"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a message",
							"id": "bbd2b60f-91ab-4c69-bf6e-a80fc3d50f9f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"id": "7427c762-a2ff-4cec-b1a4-0553a2029e26",
											"key": "id",
											"value": "",
											"description": "(Required) ID of the message"
										}
									]
								}
							},
							"response": [
								{
									"id": "34eae94d-136d-4919-879c-84c98e5bbe33",
									"name": "Requested message is returned as a response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"id": "3cde9796-ef72-40d7-9fcd-765e4339330d",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "6784891a-5213-45a7-97f2-ea0de3608749",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a message sent by an agent",
							"id": "8b616a6a-c3e9-45a0-9d56-d6288d2b8791",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"id": "9949967f-f414-4ec8-b288-0ced55ddb720",
											"key": "id",
											"value": "",
											"description": "(Required) ID of the message"
										}
									]
								},
								"description": "Only agentsâ€™ messages can be edited."
							},
							"response": [
								{
									"id": "aa91f743-9de2-4fd5-8543-ddd4c7d802b0",
									"name": "Updated message is returned as a response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"id": "5697e430-3f49-4e29-865a-e538323f49cc",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "5de52ff1-0f28-4b16-b6bc-a1e0818aa4db",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a message sent by an agent",
							"id": "00a702f4-b093-48bb-8630-3b32d51a647f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"id": "b5513b5d-4d9e-41ad-80d0-4c9307851946",
											"key": "id",
											"value": "",
											"description": "(Required) ID of the message"
										}
									]
								},
								"description": "Only agentsâ€™ messages can be deleted."
							},
							"response": [
								{
									"id": "02507ed6-9186-4336-8e08-1c76ae7e60d7",
									"name": "The message was deleted from the conversation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "5d748bba-7372-4d6e-b076-8c4e482afcbd",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "2d7c696b-8113-45fc-b1fc-e4e8411345ad",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "d72f7514-efdf-4b84-a847-2edc09c00e3b"
				},
				{
					"name": "Status",
					"item": [
						{
							"name": "Sets agentâ€™s status to online for 2-3 minutes",
							"id": "92f0712b-2d04-4719-a9a2-5fbaa15e7255",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/conversations/agentOnlinePing",
								"description": "We recommend pinging this endpoint every minute for as long as the agent has to be considered online."
							},
							"response": [
								{
									"id": "5fc32cee-ac1c-42ea-ad13-decf24abe4b7",
									"name": "Status of the agent was set successfully. Response body will be empty.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/conversations/agentOnlinePing"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "55bf7c7b-f9ea-4c69-948f-a4ea42211e8d",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/conversations/agentOnlinePing"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "d33e9348-8219-4e85-8761-331adc92c11f"
				},
				{
					"name": "Pushed messages",
					"item": [
						{
							"name": "Send an automated message to a visitor",
							"id": "f32fd277-e7f5-42e7-98d3-84783ed8b8fc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Your order has shipped! Hereâ€™s your tracking number: 9114 5847 3325 9667 4328 88\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/conversations/pushedMessages",
								"description": "Example of automated messages: order status, announce new features in your web app, etc."
							},
							"response": [
								{
									"id": "71e0cb6e-3369-4e75-9b2c-3c12f3132697",
									"name": "Newly created message is returned as a response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Your order has shipped! Hereâ€™s your tracking number: 9114 5847 3325 9667 4328 88\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/conversations/pushedMessages"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Hereâ€™s your tracking number: 9114 5847 3325 9667 4328 88\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"id": "79d1bdc6-e0da-4828-a9a6-252c9081edc7",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Your order has shipped! Hereâ€™s your tracking number: 9114 5847 3325 9667 4328 88\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/conversations/pushedMessages"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an automated message",
							"id": "bc9f3c27-4447-47e1-b8fe-df41929a0e4a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"id": "b38d7ff5-9699-4899-a02e-4f77a9fa3396",
											"key": "id",
											"value": "",
											"description": "(Required) ID of the message sent previously"
										}
									]
								}
							},
							"response": [
								{
									"id": "2b6d3ab2-ad75-4ddf-bd5a-867c21df66ff",
									"name": "Requested message is returned as a response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Hereâ€™s your tracking number: 9114 5847 3325 9667 4328 88\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"id": "aea66dad-3903-4b7f-933f-38833c66b2a3",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "96b98030-8619-407f-9941-e3c9ac702729",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an automated message",
							"id": "646d0150-2e75-454c-be2b-e8206bc36d7f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"Your order has shipped! Hereâ€™s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"id": "108e4d00-412a-484f-a36c-7c494d9e8faa",
											"key": "id",
											"value": "",
											"description": "(Required) ID of the message"
										}
									]
								}
							},
							"response": [
								{
									"id": "3b6bd5e6-b2e4-47e3-aa6c-8f543832b6b7",
									"name": "Updated message is returned as a response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Hereâ€™s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Hereâ€™s your tracking number: 9114 5847 4668 7775 9233 54\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"id": "ba6a9b10-036f-4539-9754-62eb6e9fd344",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Hereâ€™s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "0f000b22-22e7-44b1-8c5f-e67af4f9579a",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Hereâ€™s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an automated message",
							"id": "584f7521-51c3-4548-8d72-f35169ad30e2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"id": "35ac1fa3-cc7d-4722-b361-6343bf3abc62",
											"key": "id"
										}
									]
								}
							},
							"response": [
								{
									"id": "3740899d-e873-46d4-a73a-729ca9cc1209",
									"name": "The message was deleted from the conversation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "b50e5575-4ab8-4270-bbfb-2005c3de7c60",
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "6c56a6f4-eaf1-4970-a4ed-524cef04add1",
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "02b9bd12-a6bd-405a-881a-1c4612492043"
				}
			],
			"id": "bf418d1a-465b-4134-8a43-d6451a03778f",
			"description": "With our comprehensive API offering, you can tailor Conversations to your needs:\n\n- TheÂ [**Javascript API**](https://developers.sendinblue.com/docs/javascript-api-reference)Â gives you full control over the chat widget. Read our guide onÂ [customizing the chat widget](https://developers.sendinblue.com/docs/customize-the-widget)Â for use cases and explanations.\n- TheÂ [**REST API**](https://developers.sendinblue.com/docs/rest-api-reference)Â allows you to programmatically send, retrieve and manage chat messages, among other endpoints.\n- TheÂ [**webhooks**](https://developers.sendinblue.com/docs/conversations-webhooks)Â are for integrating Conversations with your system or other services, such as help desks."
		},
		{
			"name": "eCommerce",
			"item": [
				{
					"name": "Orders",
					"item": [
						{
							"name": "Create/update an order",
							"id": "32fdb112-074f-429f-ac29-93e51533dd8a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"#109\",\n  \"status\": \"completed\",\n  \"amount\": 160.96,\n  \"createdAt\": \"2023-01-10T03:20:04Z\",\n  \"updatedAt\": \"2023-01-10T03:20:04Z\",\n  \"products\": [\n    {\n      \"productId\": \"41498620592335\",\n      \"quantity\": 2,\n      \"price\":200.89\n    },\n    {\n      \"productId\": \"41498620559567\",\n      \"quantity\": 2,\n      \"variantId\": \"76337-dvvkt\",\n      \"price\":400\n    }\n  ],\n  \"email\": \"patricia@tremblay.net\",\n  \"billing\": {\n    \"address\": \"43411 Braun Circle\",\n    \"city\": \"Gerrybury\",\n    \"countryCode\": \"GE\",\n    \"phone\": \"2901692763956\",\n    \"postcode\": \"07366-7886\",\n    \"paymentMethod\": \"Pay Pal\",\n    \"region\": \"Florida\"\n  },\n  \"coupons\": [\n    \"WINTER\",\n    \"15OFF\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/orders/status"
							},
							"response": [
								{
									"id": "9d0dcab4-acd0-4614-894b-572ef580ff76",
									"name": "Order Event posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"14\",\n  \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n  \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n  \"status\": \"completed\",\n  \"amount\": 308.42,\n  \"products\": [\n    {\n      \"productId\": \"P1\",\n      \"quantity\": 10,\n      \"price\": 99.99,\n      \"variantId\": \"P100\"\n    },\n    {\n      \"productId\": \"P1\",\n      \"quantity\": 10,\n      \"price\": 99.99,\n      \"variantId\": \"P100\"\n    }\n  ],\n  \"email\": \"example@sendinblue.com\",\n  \"billing\": {\n    \"address\": \"15 Somewhere Road, Brynmenyn\",\n    \"city\": \"Basel\",\n    \"countryCode\": \"CA\",\n    \"phone\": \"01559 032133\",\n    \"postCode\": \"4052\",\n    \"paymentMethod\": \"PayPal\",\n    \"region\": \"Northwestern Switzerland\"\n  },\n  \"coupons\": [\n    \"EASTER15OFF\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/orders/status"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "5fc3440a-d0ca-476b-a9a2-11d661755490",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"14\",\n  \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n  \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n  \"status\": \"completed\",\n  \"amount\": 308.42,\n  \"products\": [\n    {\n      \"productId\": \"P1\",\n      \"quantity\": 10,\n      \"price\": 99.99,\n      \"variantId\": \"P100\"\n    },\n    {\n      \"productId\": \"P1\",\n      \"quantity\": 10,\n      \"price\": 99.99,\n      \"variantId\": \"P100\"\n    }\n  ],\n  \"email\": \"example@sendinblue.com\",\n  \"billing\": {\n    \"address\": \"15 Somewhere Road, Brynmenyn\",\n    \"city\": \"Basel\",\n    \"countryCode\": \"CA\",\n    \"phone\": \"01559 032133\",\n    \"postCode\": \"4052\",\n    \"paymentMethod\": \"PayPal\",\n    \"region\": \"Northwestern Switzerland\"\n  },\n  \"coupons\": [\n    \"EASTER15OFF\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/orders/status"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create orders in batch",
							"id": "01547166-abd4-4d86-b941-e896954ad39a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orders\": [\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \"\"\n        },\n        \"city\": {\n          \"value\": \"\"\n        },\n        \"countryCode\": {\n          \"value\": \"\"\n        },\n        \"phone\": {\n          \"value\": \"\"\n        },\n        \"postCode\": {\n          \"value\": \"\"\n        },\n        \"paymentMethod\": {\n          \"value\": \"\"\n        },\n        \"region\": {\n          \"value\": \"\"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    },\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \"\"\n        },\n        \"city\": {\n          \"value\": \"\"\n        },\n        \"countryCode\": {\n          \"value\": \"\"\n        },\n        \"phone\": {\n          \"value\": \"\"\n        },\n        \"postCode\": {\n          \"value\": \"\"\n        },\n        \"paymentMethod\": {\n          \"value\": \"\"\n        },\n        \"region\": {\n          \"value\": \"\"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    }\n  ],\n  \"notifyUrl\": \"https://en.wikipedia.org/wiki/Webhook\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/orders/status/batch"
							},
							"response": [
								{
									"id": "2490f09e-9493-435c-893c-6ba0468dbb0f",
									"name": "batch id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orders\": [\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \" \"\n        },\n        {\n          \"value\": \" \"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \" \"\n        },\n        \"city\": {\n          \"value\": \" \"\n        },\n        \"countryCode\": {\n          \"value\": \" \"\n        },\n        \"phone\": {\n          \"value\": \" \"\n        },\n        \"postCode\": {\n          \"value\": \" \"\n        },\n        \"paymentMethod\": {\n          \"value\": \" \"\n        },\n        \"region\": {\n          \"value\": \" \"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    },\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \" \"\n        },\n        {\n          \"value\": \" \"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \" \"\n        },\n        \"city\": {\n          \"value\": \" \"\n        },\n        \"countryCode\": {\n          \"value\": \" \"\n        },\n        \"phone\": {\n          \"value\": \" \"\n        },\n        \"postCode\": {\n          \"value\": \" \"\n        },\n        \"paymentMethod\": {\n          \"value\": \" \"\n        },\n        \"region\": {\n          \"value\": \" \"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    }\n  ],\n  \"notifyUrl\": \"https://en.wikipedia.org/wiki/Webhook\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/orders/status/batch"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"batchId\": 67473922.20865113\n}"
								},
								{
									"id": "2d946c37-f007-4831-9e29-0088f8b4d8b3",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orders\": [\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \"\"\n        },\n        \"city\": {\n          \"value\": \"\"\n        },\n        \"countryCode\": {\n          \"value\": \"\"\n        },\n        \"phone\": {\n          \"value\": \"\"\n        },\n        \"postCode\": {\n          \"value\": \"\"\n        },\n        \"paymentMethod\": {\n          \"value\": \"\"\n        },\n        \"region\": {\n          \"value\": \"\"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    },\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \"\"\n        },\n        \"city\": {\n          \"value\": \"\"\n        },\n        \"countryCode\": {\n          \"value\": \"\"\n        },\n        \"phone\": {\n          \"value\": \"\"\n        },\n        \"postCode\": {\n          \"value\": \"\"\n        },\n        \"paymentMethod\": {\n          \"value\": \"\"\n        },\n        \"region\": {\n          \"value\": \"\"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    }\n  ],\n  \"notifyUrl\": \"https://en.wikipedia.org/wiki/Webhook\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/orders/status/batch"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "7d77f66d-84a7-4e4e-83b7-a605dac14ebe",
					"description": "You can manage your orders seamlessly through the eCommerce platform. You can see all the endpoints for eCommerce order management in theÂ [API reference here.](https://developers.sendinblue.com/reference/post_ecommerce-activate)"
				},
				{
					"name": "Categories",
					"item": [
						{
							"name": "Get all categories",
							"id": "f8e8ef3a-9213-45da-bcb9-21b4fd3be065",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories?limit=50&offset=0&sort=desc&ids= ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										},
										{
											"key": "ids",
											"value": " ",
											"description": "Filter by category ids"
										}
									]
								}
							},
							"response": [
								{
									"id": "84845d87-652a-4aa5-8d73-6fa16b9aa006",
									"name": "All categories listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/categories?limit=50&offset=0&sort=desc&ids=laboris ad culpa occaecat non&ids=ex velit i",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "ids",
													"value": "laboris ad culpa occaecat non"
												},
												{
													"key": "ids",
													"value": "ex velit i"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"categories\": [\n    {\n      \"id\": 19,\n      \"name\": \"Food\",\n      \"url\": \"http://mydomain.com/cagetory/food\",\n      \"modifiedAt\": \"2022-03-03T14:48:31.867Z\",\n      \"createdAt\": \"2021-12-31T11:42:35.638Z\"\n    },\n    {\n      \"id\": 20,\n      \"name\": \"clothing\",\n      \"url\": \"http://mydomain.com/cagetory/clothing\",\n      \"modifiedAt\": \"2022-03-03T14:48:31.867Z\",\n      \"createdAt\": \"2021-12-31T11:42:35.638Z\"\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"id": "8663bb2b-5655-4352-9549-275ee49cad23",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/categories?limit=50&offset=0&sort=desc&ids=laboris ad culpa occaecat non&ids=ex velit i",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "ids",
													"value": "laboris ad culpa occaecat non"
												},
												{
													"key": "ids",
													"value": "ex velit i"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create/update a category",
							"id": "ab62d4cb-835f-4346-b94e-e6484fb09471",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"4ym78sfr8@VaAMB.xgn\",\n  \"name\": \"Electronics\",\n  \"url\": \"http://mydomain.com/category/electronics\",\n  \"updateEnabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/categories"
							},
							"response": [
								{
									"id": "ef5cadfb-6b81-4617-8d55-3a95ef896e03",
									"name": "Category created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"4ym78sfr8@VaAMB.xgn\",\n  \"name\": \"Electronics\",\n  \"url\": \"http://mydomain.com/category/electronics\",\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/categories"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"id": "d9791667-e0ef-4824-9927-2dd4aead24f5",
									"name": "Category updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"4ym78sfr8@VaAMB.xgn\",\n  \"name\": \"Electronics\",\n  \"url\": \"http://mydomain.com/category/electronics\",\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/categories"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Create categories in batch",
							"id": "1bb59e0e-bf1b-4dbe-9d0e-bc8764014d7d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categories\": [\n    {\n      \"id\": \"cI5vQG@akAvYs.aakp\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    },\n    {\n      \"id\": \"lw76jTxBp@ZL.vlo\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    }\n  ],\n  \"updateEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/categories/batch"
							},
							"response": [
								{
									"id": "33cb40eb-82ee-4539-82b2-20327cccfb8e",
									"name": "Category created and updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    {\n      \"id\": \"N9JVW1@Tv.muzn\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    },\n    {\n      \"id\": \"aCHK9Hu@JnFDbgWZnFTvPaDMqfCOv.hs\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    }\n  ],\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/categories/batch"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"createdCount\": 2,\n  \"updatedCount\": 7\n}"
								},
								{
									"id": "97158810-1648-42b2-9b7c-29c097685188",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    {\n      \"id\": \"N9JVW1@Tv.muzn\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    },\n    {\n      \"id\": \"aCHK9Hu@JnFDbgWZnFTvPaDMqfCOv.hs\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    }\n  ],\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/categories/batch"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a category details",
							"id": "8bbc11ae-73fb-4cdc-bb83-34df8192f40c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										":id"
									],
									"variable": [
										{
											"id": "ec81c0a6-1ff0-4376-b196-b43b29f4d3aa",
											"key": "id",
											"value": "",
											"description": "(Required) Category ID"
										}
									]
								}
							},
							"response": [
								{
									"id": "672cd25e-629d-4c23-96f4-af6282fbbec5",
									"name": "Category informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Category ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"C11\",\n  \"name\": \"Electronics\",\n  \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n  \"url\": \"http://mydomain.com/cagetory/clothing\"\n}"
								},
								{
									"id": "c4658c17-87eb-415a-a681-46a04711960f",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Category ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "424bfd75-9b2b-4066-b735-60023ccb3d13",
									"name": "Category id not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Category ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"id": "ce7dc450-3caa-4bf4-8c7d-2215ab026e33",
					"description": "After accessing the eCommerce platform you can start defining the categories that your products will be associated to. Note that this should ideally be the first object type you import into your account."
				},
				{
					"name": "Products",
					"item": [
						{
							"name": "Get all products",
							"id": "2f1b09d8-36b1-455a-8570-2ec462112498",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?limit=50&offset=0&sort=desc&ids=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										},
										{
											"key": "ids",
											"value": "",
											"description": "Filter by product ids"
										}
									]
								}
							},
							"response": [
								{
									"id": "bfeafaf8-bd2e-4dde-998a-ff1b9aced933",
									"name": "All products listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products?limit=50&offset=0&sort=desc&ids=laboris ad culpa occaecat non&ids=ex velit i",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "ids",
													"value": "laboris ad culpa occaecat non"
												},
												{
													"key": "ids",
													"value": "ex velit i"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"products\": [\n    {\n      \"id\": 7498033266862,\n      \"name\": \"Alpina Panoma Classic\",\n      \"url\": \"https://mydomain.com/products/alpina-panoma-classic\",\n      \"sku\": \"186622-9\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"categories\": [\n        \"279638835374\",\n        \"279502848174\"\n      ],\n      \"price\": 49.95,\n      \"modifiedAt\": \"2022-06-30T10:29:16.078Z\",\n      \"createdAt\": \"2022-06-30T10:29:16.078Z\",\n      \"s3Original\": \"https://img-ecom.mailinblue.com/path-to-original/img.jpg\",\n      \"s3ThumbAnalytics\": \"https://img-ecom.mailinblue.com/path-to-analytics/img.jpg\",\n      \"s3ThumbEditor\": \"https://img-ecom.mailinblue.com/path-to-editor/img.jpg\"\n    },\n    {\n      \"id\": 7498033266862,\n      \"name\": \"Alpina Panoma Classic2\",\n      \"url\": \"https://mydomain.com/products/alpina-panoma-classic2\",\n      \"sku\": \"186622-9\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"categories\": [\n        \"2d79638835374\",\n        \"27d9502848174\"\n      ],\n      \"price\": 49.95,\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      },\n      \"modifiedAt\": \"2022-06-30T10:29:16.078Z\",\n      \"createdAt\": \"2022-06-30T10:29:16.078Z\",\n      \"s3Original\": \"https://img-ecom.mailinblue.com/path-to-original/img.jpg\",\n      \"s3ThumbAnalytics\": \"https://img-ecom.mailinblue.com/path-to-analytics/img.jpg\",\n      \"s3ThumbEditor\": \"https://img-ecom.mailinblue.com/path-to-editor/img.jpg\"\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"id": "fe19e3ba-b63d-4d50-b8cb-a262fedeee19",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products?limit=50&offset=0&sort=desc&ids=laboris ad culpa occaecat non&ids=ex velit i",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "ids",
													"value": "laboris ad culpa occaecat non"
												},
												{
													"key": "ids",
													"value": "ex velit i"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a product's details",
							"id": "e08a7ba1-f274-46e0-b4b3-665e6c9fc9a8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id"
									],
									"variable": [
										{
											"id": "44ae54f3-15d3-4881-b5d3-a2005f72aa6a",
											"key": "id",
											"value": "",
											"description": "(Required) Product ID"
										}
									]
								}
							},
							"response": [
								{
									"id": "8bf26305-0286-419c-b9e5-7ffd46a8a5e8",
									"name": "Product informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Product ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"P11\",\n  \"name\": \"Iphone 11\",\n  \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n  \"s3ThumbAnalytics\": \"irure eiusmod ut est\",\n  \"s3ThumbEditor\": \"enim incididunt\",\n  \"url\": \"http://mydomain.com/product/electronics/product1\",\n  \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n  \"sku\": \"dolore officia sit\",\n  \"price\": 61347100.411326766,\n  \"categories\": [\n    \"dolore eiusmod exercitation\",\n    \"in\"\n  ],\n  \"parentId\": \"Excepteur irure minim\",\n  \"s3Original\": \"consectetur velit cillum\",\n  \"metaInfo\": {\n    \"description\": \"Shoes for sports\",\n    \"brand\": \"addidas\"\n  }\n}"
								},
								{
									"id": "946f64a0-fd63-4814-861c-e65af66d87a5",
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Product ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"id": "9d5abef9-3c07-4994-968b-1ef54a60834b",
									"name": "Product's id not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Product ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create/update a product",
							"id": "b5069f19-9979-43d6-852d-fe7a52acc788",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"P11\",\n  \"name\": \"IPhone 11\",\n  \"url\": \"http://mydomain.com/product/electronics/product1\",\n  \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n  \"sku\": \"SKU523452235\",\n  \"price\": -48445562.575949855,\n  \"categories\": [\n    \"id\",\n    \"v\"\n  ],\n  \"parentId\": \"minim amet\",\n  \"metaInfo\": {\n    \"description\": \"Shoes for sports\",\n    \"brand\": \"addidas\"\n  },\n  \"updateEnabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/products"
							},
							"response": [
								{
									"id": "63a8791e-1344-4533-b65b-b7994c02ea9a",
									"name": "Product created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"P11\",\n  \"name\": \"Iphone 11\",\n  \"url\": \"http://mydomain.com/product/electronics/product1\",\n  \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n  \"sku\": \"deserunt\",\n  \"price\": -65097201.96352307,\n  \"categories\": [\n    \"Ut\",\n    \"ex id aliqua\"\n  ],\n  \"parentId\": \"irure ex laborum\",\n  \"metaInfo\": {\n    \"description\": \"Shoes for sports\",\n    \"brand\": \"addidas\"\n  },\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/products"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"id": "646d25ea-8a00-46dd-9555-8f8cacd6cc50",
									"name": "Product updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"P11\",\n  \"name\": \"Iphone 11\",\n  \"url\": \"http://mydomain.com/product/electronics/product1\",\n  \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n  \"sku\": \"deserunt\",\n  \"price\": -65097201.96352307,\n  \"categories\": [\n    \"Ut\",\n    \"ex id aliqua\"\n  ],\n  \"parentId\": \"irure ex laborum\",\n  \"metaInfo\": {\n    \"description\": \"Shoes for sports\",\n    \"brand\": \"addidas\"\n  },\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/products"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Create products in batch",
							"id": "c61c13f9-2b9a-4a11-84a8-7bfcb08dffd0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"products\": [\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"SKU5234522331\",\n      \"price\": 9965553.347645134,\n      \"categories\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"parentId\": \"GH56214\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"adidas\"\n      }\n    },\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"SKU523452235\",\n      \"price\": -2971697.3335331976,\n      \"categories\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"parentId\": \"HG3561\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      }\n    }\n  ],\n  \"updateEnabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/products/batch"
							},
							"response": [
								{
									"id": "1ae497cf-a402-491c-8904-fa36c35716bb",
									"name": "Products created and updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"products\": [\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"est anim labore proident i\",\n      \"price\": 49031262.39617145,\n      \"categories\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentId\": \"sunt pariatur sint cillum fugiat\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      }\n    },\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"nulla\",\n      \"price\": 82197173.7573795,\n      \"categories\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentId\": \"aliquip ullamco sint\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      }\n    }\n  ],\n  \"updateEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/products/batch"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"createdCount\": 2,\n  \"updatedCount\": 7\n}"
								},
								{
									"id": "5a4b24b4-5044-49c7-a15f-a270d0765043",
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"products\": [\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"est anim labore proident i\",\n      \"price\": 49031262.39617145,\n      \"categories\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentId\": \"sunt pariatur sint cillum fugiat\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      }\n    },\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"nulla\",\n      \"price\": 82197173.7573795,\n      \"categories\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentId\": \"aliquip ullamco sint\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      }\n    }\n  ],\n  \"updateEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/products/batch"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "3eb99ca4-ab66-4446-a7ba-ccb312d6266d",
					"description": "AfterÂ [importing your product categories](https://developers.sendinblue.com/reference/createupdatecategory)Â you can easily manage your product inventory through the following steps.Â \n\n## Requirements\n\nTo create and manage your eCommerce store products you need to have access to the Sendinblue eCommerce app. If you have not already activated the eCommerce platform on your account you can go toÂ [eCommerce > Add the eCommerce App.](https://developers.sendinblue.com/reference/post_ecommerce-activate)"
				},
				{
					"name": "Activate eCommerce platform on your account",
					"id": "801b03d9-1741-400a-87e9-971a7614998e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"url": "{{baseUrl}}/v3/ecommerce/activate"
					},
					"response": []
				}
			],
			"id": "97003344-5421-4b22-9c0d-4d18267eb7a8",
			"description": "You can integrate your eCommerce shop with Sendinblue and benefit from great analytics and extended segmentation capabilities.Â \n\n- Analyse your customer conversions in the dashboard from new and returning customers along with the metrics about your most purchased product.\n- Monitor specific metrics on your products like the amount of revenue you got from a key products etc.\n- Retention analysis for your customers. Understand how likely is for your customers to visit again your store.\n    \n\n**For more details you can follow our eCommerce integration guide in the** [**Developers Portal**](https://developers.sendinblue.com/docs/import-your-products)."
		},
		{
			"name": "Coupons",
			"item": [
				{
					"name": "Get all your coupon collections",
					"id": "d06ddee9-7502-4a1d-bd5d-18a6c6b14221",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/couponCollections"
					},
					"response": []
				},
				{
					"name": "Create a coupon collection",
					"id": "d88783b4-570a-4d63-946e-a371db783375",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"SummerPromotions\",\n  \"defaultCoupon\": \"10 OFF\"\n}"
						},
						"url": "{{baseUrl}}/couponCollections"
					},
					"response": []
				},
				{
					"name": "Get a coupon collection by id",
					"id": "f525cbc3-7fb2-4ff0-86ef-c2c9e0a977a8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/couponCollections?id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"couponCollections"
							],
							"query": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a coupon collection by id",
					"id": "2feae46a-bb07-42a5-a5cd-ff59c14dc980",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coupons\": [\n    \"udsfhds\",\n    \"asgr\",\n    \"sdg4iinas\",\n    \"asdgn4ou\"\n  ],\n  \"collectionId\": \"2620197b-505f-407f-9bd2-64e16f29fb53\"\n}\n'"
						},
						"url": {
							"raw": "{{baseUrl}}/couponCollections/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"couponCollections",
								":id"
							],
							"variable": [
								{
									"id": "6bf7d927-4332-43f6-acec-af000695812c",
									"key": "id",
									"value": null,
									"description": "Id of the collection to update\n\n"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create coupons for a coupon collection",
					"id": "674aa001-94f9-449a-bb9a-42527937089a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/coupons"
					},
					"response": []
				}
			],
			"id": "996ce58e-5ee6-4760-841b-61211f47d634"
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Automation Tracker",
					"item": [
						{
							"name": "Identify the user",
							"id": "d630c1bc-759a-4b5f-a893-6c2a31ffc816",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"key": "ma-key",
										"value": "{{ma-key}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "https://in-automate.sendinblue.com/api/v2/identifyUser"
							},
							"response": []
						},
						{
							"name": "Track event",
							"id": "462e1b34-abca-4dca-a4ff-9dffff1445f3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"key": "ma-key",
										"value": "{{ma-key}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "https://in-automate.sendinblue.com/api/v2/TrackEvent"
							},
							"response": []
						},
						{
							"name": "Track link clicks",
							"id": "b9d78a5e-1bd1-4d36-a330-865238dfd485",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"key": "ma-key",
										"value": "{{ma-key}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "https://in-automate.sendinblue.com/api/v2/TrackLink"
							},
							"response": []
						},
						{
							"name": "Track page views",
							"id": "0956d6c6-5547-4073-b99b-9cdad8cf8b7a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"key": "ma-key",
										"value": "{{ma-key}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "https://in-automate.sendinblue.com/api/v2/TrackPage"
							},
							"response": []
						}
					],
					"id": "af206971-4b27-4cb8-bebb-30d6132d0afb"
				}
			],
			"id": "ce20c13c-44ba-4db8-9c82-85271f71b803"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": {
			"value": "{{api-key}}",
			"in": "header",
			"key": "api-key"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "aaa3fa81-539a-41a8-8dcb-2777c06af136",
				"type": "text/javascript",
				"exec": [
					"//Setting the wait time for when the next request will be run",
					"setTimeout(function(){}, 2000);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5be74539-73cd-4e13-8ea1-da0f576bced3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "m_id",
			"value": "<202311212216.82396143799@smtp-relay.mailin.fr>"
		},
		{
			"key": "sm_id",
			"value": "<202311212215.34470160776@smtp-relay.mailin.fr>"
		},
		{
			"key": "sender_email",
			"value": "olamide.oluwole0908@gmail.com"
		},
		{
			"key": "uuid",
			"value": "87abd3c6-e364-4eeb-90ad-1d9cce24859a"
		},
		{
			"key": "emailprefix",
			"value": "olamide.oluwole0908+"
		},
		{
			"key": "companyid",
			"value": "65660dd04f91417d3133e7cd"
		},
		{
			"key": "owner",
			"value": "655c47509c96e22db8742846"
		},
		{
			"key": "dealid",
			"value": "65660dd29d64577285a4855c"
		},
		{
			"key": "contactid",
			"value": 8
		},
		{
			"key": "blocked_domain",
			"value": "primary.com"
		},
		{
			"key": "campaign_id",
			"value": 28
		},
		{
			"key": "folderid",
			"value": ""
		},
		{
			"key": "listid",
			"value": ""
		},
		{
			"key": "othercontactemail1",
			"value": ""
		},
		{
			"key": "contactemail",
			"value": ""
		}
	]
}